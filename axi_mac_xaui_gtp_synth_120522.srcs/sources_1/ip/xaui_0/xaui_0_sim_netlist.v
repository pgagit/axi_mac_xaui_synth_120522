// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
// Date        : Tue May 17 07:22:43 2022
// Host        : pc-140-151-2 running 64-bit Ubuntu 20.04.4 LTS
// Command     : write_verilog -force -mode funcsim -rename_top xaui_0 -prefix
//               xaui_0_ xaui_0_sim_netlist.v
// Design      : xaui_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a200tifbv676-1L
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* x_core_info = "xaui_v12_3_6,Vivado 2019.1" *) 
(* NotValidForBitStream *)
module xaui_0
   (dclk,
    reset,
    clk156_out,
    clk156_lock,
    refclk,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    xaui_tx_l0_p,
    xaui_tx_l0_n,
    xaui_tx_l1_p,
    xaui_tx_l1_n,
    xaui_tx_l2_p,
    xaui_tx_l2_n,
    xaui_tx_l3_p,
    xaui_tx_l3_n,
    xaui_rx_l0_p,
    xaui_rx_l0_n,
    xaui_rx_l1_p,
    xaui_rx_l1_n,
    xaui_rx_l2_p,
    xaui_rx_l2_n,
    xaui_rx_l3_p,
    xaui_rx_l3_n,
    signal_detect,
    debug,
    gt0_drpaddr,
    gt0_drpen,
    gt0_drpdi,
    gt0_drpdo,
    gt0_drprdy,
    gt0_drpwe,
    gt0_drp_busy,
    gt0_txpmareset_in,
    gt0_txpcsreset_in,
    gt0_txresetdone_out,
    gt0_rxpmareset_in,
    gt0_rxpcsreset_in,
    gt0_rxpmaresetdone_out,
    gt0_rxresetdone_out,
    gt0_rxbufstatus_out,
    gt0_txphaligndone_out,
    gt0_txphinitdone_out,
    gt0_txdlysresetdone_out,
    gt_qplllock_out,
    gt0_eyescantrigger_in,
    gt0_eyescanreset_in,
    gt0_eyescandataerror_out,
    gt0_rxrate_in,
    gt0_loopback_in,
    gt0_rxpolarity_in,
    gt0_txpolarity_in,
    gt0_rxlpmreset_in,
    gt0_rxlpmhfhold_in,
    gt0_rxlpmhfovrden_in,
    gt0_rxlpmlfhold_in,
    gt0_rxlpmlfovrden_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_txdiffctrl_in,
    gt0_txinhibit_in,
    gt0_rxprbscntreset_in,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_txprbssel_in,
    gt0_txprbsforceerr_in,
    gt0_rxcdrhold_in,
    gt0_dmonitorout_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_rxcommadet_out,
    gt1_drpaddr,
    gt1_drpen,
    gt1_drpdi,
    gt1_drpdo,
    gt1_drprdy,
    gt1_drpwe,
    gt1_drp_busy,
    gt1_txpmareset_in,
    gt1_txpcsreset_in,
    gt1_txresetdone_out,
    gt1_rxpmareset_in,
    gt1_rxpcsreset_in,
    gt1_rxpmaresetdone_out,
    gt1_rxresetdone_out,
    gt1_rxbufstatus_out,
    gt1_txphaligndone_out,
    gt1_txphinitdone_out,
    gt1_txdlysresetdone_out,
    gt1_eyescantrigger_in,
    gt1_eyescanreset_in,
    gt1_eyescandataerror_out,
    gt1_rxrate_in,
    gt1_loopback_in,
    gt1_rxpolarity_in,
    gt1_txpolarity_in,
    gt1_rxlpmreset_in,
    gt1_rxlpmhfhold_in,
    gt1_rxlpmhfovrden_in,
    gt1_rxlpmlfhold_in,
    gt1_rxlpmlfovrden_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_txdiffctrl_in,
    gt1_txinhibit_in,
    gt1_rxprbscntreset_in,
    gt1_rxprbserr_out,
    gt1_rxprbssel_in,
    gt1_txprbssel_in,
    gt1_txprbsforceerr_in,
    gt1_rxcdrhold_in,
    gt1_dmonitorout_out,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt1_rxcommadet_out,
    gt2_drpaddr,
    gt2_drpen,
    gt2_drpdi,
    gt2_drpdo,
    gt2_drprdy,
    gt2_drpwe,
    gt2_drp_busy,
    gt2_txpmareset_in,
    gt2_txpcsreset_in,
    gt2_txresetdone_out,
    gt2_rxpmareset_in,
    gt2_rxpcsreset_in,
    gt2_rxpmaresetdone_out,
    gt2_rxresetdone_out,
    gt2_rxbufstatus_out,
    gt2_txphaligndone_out,
    gt2_txphinitdone_out,
    gt2_txdlysresetdone_out,
    gt2_eyescantrigger_in,
    gt2_eyescanreset_in,
    gt2_eyescandataerror_out,
    gt2_rxrate_in,
    gt2_loopback_in,
    gt2_rxpolarity_in,
    gt2_txpolarity_in,
    gt2_rxlpmreset_in,
    gt2_rxlpmhfhold_in,
    gt2_rxlpmhfovrden_in,
    gt2_rxlpmlfhold_in,
    gt2_rxlpmlfovrden_in,
    gt2_txpostcursor_in,
    gt2_txprecursor_in,
    gt2_txdiffctrl_in,
    gt2_txinhibit_in,
    gt2_rxprbscntreset_in,
    gt2_rxprbserr_out,
    gt2_rxprbssel_in,
    gt2_txprbssel_in,
    gt2_txprbsforceerr_in,
    gt2_rxcdrhold_in,
    gt2_dmonitorout_out,
    gt2_rxdisperr_out,
    gt2_rxnotintable_out,
    gt2_rxcommadet_out,
    gt3_drpaddr,
    gt3_drpen,
    gt3_drpdi,
    gt3_drpdo,
    gt3_drprdy,
    gt3_drpwe,
    gt3_drp_busy,
    gt3_txpmareset_in,
    gt3_txpcsreset_in,
    gt3_txresetdone_out,
    gt3_rxpmareset_in,
    gt3_rxpcsreset_in,
    gt3_rxpmaresetdone_out,
    gt3_rxresetdone_out,
    gt3_rxbufstatus_out,
    gt3_txphaligndone_out,
    gt3_txphinitdone_out,
    gt3_txdlysresetdone_out,
    gt3_eyescantrigger_in,
    gt3_eyescanreset_in,
    gt3_eyescandataerror_out,
    gt3_rxrate_in,
    gt3_loopback_in,
    gt3_rxpolarity_in,
    gt3_txpolarity_in,
    gt3_rxlpmreset_in,
    gt3_rxlpmhfhold_in,
    gt3_rxlpmhfovrden_in,
    gt3_rxlpmlfhold_in,
    gt3_rxlpmlfovrden_in,
    gt3_txpostcursor_in,
    gt3_txprecursor_in,
    gt3_txdiffctrl_in,
    gt3_txinhibit_in,
    gt3_rxprbscntreset_in,
    gt3_rxprbserr_out,
    gt3_rxprbssel_in,
    gt3_txprbssel_in,
    gt3_txprbsforceerr_in,
    gt3_rxcdrhold_in,
    gt3_dmonitorout_out,
    gt3_rxdisperr_out,
    gt3_rxnotintable_out,
    gt3_rxcommadet_out,
    configuration_vector,
    status_vector);
  input dclk;
  input reset;
  output clk156_out;
  output clk156_lock;
  input refclk;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output xaui_tx_l0_p;
  output xaui_tx_l0_n;
  output xaui_tx_l1_p;
  output xaui_tx_l1_n;
  output xaui_tx_l2_p;
  output xaui_tx_l2_n;
  output xaui_tx_l3_p;
  output xaui_tx_l3_n;
  input xaui_rx_l0_p;
  input xaui_rx_l0_n;
  input xaui_rx_l1_p;
  input xaui_rx_l1_n;
  input xaui_rx_l2_p;
  input xaui_rx_l2_n;
  input xaui_rx_l3_p;
  input xaui_rx_l3_n;
  input [3:0]signal_detect;
  output [5:0]debug;
  input [8:0]gt0_drpaddr;
  input gt0_drpen;
  input [15:0]gt0_drpdi;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  input gt0_drpwe;
  output gt0_drp_busy;
  input gt0_txpmareset_in;
  input gt0_txpcsreset_in;
  output gt0_txresetdone_out;
  input gt0_rxpmareset_in;
  input gt0_rxpcsreset_in;
  output gt0_rxpmaresetdone_out;
  output gt0_rxresetdone_out;
  output [2:0]gt0_rxbufstatus_out;
  output gt0_txphaligndone_out;
  output gt0_txphinitdone_out;
  output gt0_txdlysresetdone_out;
  output gt_qplllock_out;
  input gt0_eyescantrigger_in;
  input gt0_eyescanreset_in;
  output gt0_eyescandataerror_out;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_loopback_in;
  input gt0_rxpolarity_in;
  input gt0_txpolarity_in;
  input gt0_rxlpmreset_in;
  input gt0_rxlpmhfhold_in;
  input gt0_rxlpmhfovrden_in;
  input gt0_rxlpmlfhold_in;
  input gt0_rxlpmlfovrden_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [3:0]gt0_txdiffctrl_in;
  input gt0_txinhibit_in;
  input gt0_rxprbscntreset_in;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_txprbssel_in;
  input gt0_txprbsforceerr_in;
  input gt0_rxcdrhold_in;
  output [14:0]gt0_dmonitorout_out;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  output gt0_rxcommadet_out;
  input [8:0]gt1_drpaddr;
  input gt1_drpen;
  input [15:0]gt1_drpdi;
  output [15:0]gt1_drpdo;
  output gt1_drprdy;
  input gt1_drpwe;
  output gt1_drp_busy;
  input gt1_txpmareset_in;
  input gt1_txpcsreset_in;
  output gt1_txresetdone_out;
  input gt1_rxpmareset_in;
  input gt1_rxpcsreset_in;
  output gt1_rxpmaresetdone_out;
  output gt1_rxresetdone_out;
  output [2:0]gt1_rxbufstatus_out;
  output gt1_txphaligndone_out;
  output gt1_txphinitdone_out;
  output gt1_txdlysresetdone_out;
  input gt1_eyescantrigger_in;
  input gt1_eyescanreset_in;
  output gt1_eyescandataerror_out;
  input [2:0]gt1_rxrate_in;
  input [2:0]gt1_loopback_in;
  input gt1_rxpolarity_in;
  input gt1_txpolarity_in;
  input gt1_rxlpmreset_in;
  input gt1_rxlpmhfhold_in;
  input gt1_rxlpmhfovrden_in;
  input gt1_rxlpmlfhold_in;
  input gt1_rxlpmlfovrden_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [3:0]gt1_txdiffctrl_in;
  input gt1_txinhibit_in;
  input gt1_rxprbscntreset_in;
  output gt1_rxprbserr_out;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_txprbssel_in;
  input gt1_txprbsforceerr_in;
  input gt1_rxcdrhold_in;
  output [14:0]gt1_dmonitorout_out;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  output gt1_rxcommadet_out;
  input [8:0]gt2_drpaddr;
  input gt2_drpen;
  input [15:0]gt2_drpdi;
  output [15:0]gt2_drpdo;
  output gt2_drprdy;
  input gt2_drpwe;
  output gt2_drp_busy;
  input gt2_txpmareset_in;
  input gt2_txpcsreset_in;
  output gt2_txresetdone_out;
  input gt2_rxpmareset_in;
  input gt2_rxpcsreset_in;
  output gt2_rxpmaresetdone_out;
  output gt2_rxresetdone_out;
  output [2:0]gt2_rxbufstatus_out;
  output gt2_txphaligndone_out;
  output gt2_txphinitdone_out;
  output gt2_txdlysresetdone_out;
  input gt2_eyescantrigger_in;
  input gt2_eyescanreset_in;
  output gt2_eyescandataerror_out;
  input [2:0]gt2_rxrate_in;
  input [2:0]gt2_loopback_in;
  input gt2_rxpolarity_in;
  input gt2_txpolarity_in;
  input gt2_rxlpmreset_in;
  input gt2_rxlpmhfhold_in;
  input gt2_rxlpmhfovrden_in;
  input gt2_rxlpmlfhold_in;
  input gt2_rxlpmlfovrden_in;
  input [4:0]gt2_txpostcursor_in;
  input [4:0]gt2_txprecursor_in;
  input [3:0]gt2_txdiffctrl_in;
  input gt2_txinhibit_in;
  input gt2_rxprbscntreset_in;
  output gt2_rxprbserr_out;
  input [2:0]gt2_rxprbssel_in;
  input [2:0]gt2_txprbssel_in;
  input gt2_txprbsforceerr_in;
  input gt2_rxcdrhold_in;
  output [14:0]gt2_dmonitorout_out;
  output [1:0]gt2_rxdisperr_out;
  output [1:0]gt2_rxnotintable_out;
  output gt2_rxcommadet_out;
  input [8:0]gt3_drpaddr;
  input gt3_drpen;
  input [15:0]gt3_drpdi;
  output [15:0]gt3_drpdo;
  output gt3_drprdy;
  input gt3_drpwe;
  output gt3_drp_busy;
  input gt3_txpmareset_in;
  input gt3_txpcsreset_in;
  output gt3_txresetdone_out;
  input gt3_rxpmareset_in;
  input gt3_rxpcsreset_in;
  output gt3_rxpmaresetdone_out;
  output gt3_rxresetdone_out;
  output [2:0]gt3_rxbufstatus_out;
  output gt3_txphaligndone_out;
  output gt3_txphinitdone_out;
  output gt3_txdlysresetdone_out;
  input gt3_eyescantrigger_in;
  input gt3_eyescanreset_in;
  output gt3_eyescandataerror_out;
  input [2:0]gt3_rxrate_in;
  input [2:0]gt3_loopback_in;
  input gt3_rxpolarity_in;
  input gt3_txpolarity_in;
  input gt3_rxlpmreset_in;
  input gt3_rxlpmhfhold_in;
  input gt3_rxlpmhfovrden_in;
  input gt3_rxlpmlfhold_in;
  input gt3_rxlpmlfovrden_in;
  input [4:0]gt3_txpostcursor_in;
  input [4:0]gt3_txprecursor_in;
  input [3:0]gt3_txdiffctrl_in;
  input gt3_txinhibit_in;
  input gt3_rxprbscntreset_in;
  output gt3_rxprbserr_out;
  input [2:0]gt3_rxprbssel_in;
  input [2:0]gt3_txprbssel_in;
  input gt3_txprbsforceerr_in;
  input gt3_rxcdrhold_in;
  output [14:0]gt3_dmonitorout_out;
  output [1:0]gt3_rxdisperr_out;
  output [1:0]gt3_rxnotintable_out;
  output gt3_rxcommadet_out;
  input [6:0]configuration_vector;
  output [7:0]status_vector;

  wire clk156_lock;
  wire clk156_out;
  wire [6:0]configuration_vector;
  wire dclk;
  wire [5:0]debug;
  wire [14:0]gt0_dmonitorout_out;
  wire gt0_drp_busy;
  wire [8:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire [2:0]gt0_loopback_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxcdrhold_in;
  wire gt0_rxcommadet_out;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmhfhold_in;
  wire gt0_rxlpmhfovrden_in;
  wire gt0_rxlpmlfhold_in;
  wire gt0_rxlpmlfovrden_in;
  wire gt0_rxlpmreset_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpmaresetdone_out;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxresetdone_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlysresetdone_out;
  wire gt0_txinhibit_in;
  wire gt0_txpcsreset_in;
  wire gt0_txphaligndone_out;
  wire gt0_txphinitdone_out;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire [14:0]gt1_dmonitorout_out;
  wire gt1_drp_busy;
  wire [8:0]gt1_drpaddr;
  wire [15:0]gt1_drpdi;
  wire [15:0]gt1_drpdo;
  wire gt1_drpen;
  wire gt1_drprdy;
  wire gt1_drpwe;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire [2:0]gt1_loopback_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxcdrhold_in;
  wire gt1_rxcommadet_out;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmhfhold_in;
  wire gt1_rxlpmhfovrden_in;
  wire gt1_rxlpmlfhold_in;
  wire gt1_rxlpmlfovrden_in;
  wire gt1_rxlpmreset_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxpcsreset_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpmaresetdone_out;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxresetdone_out;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txdlysresetdone_out;
  wire gt1_txinhibit_in;
  wire gt1_txpcsreset_in;
  wire gt1_txphaligndone_out;
  wire gt1_txphinitdone_out;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire [14:0]gt2_dmonitorout_out;
  wire gt2_drp_busy;
  wire [8:0]gt2_drpaddr;
  wire [15:0]gt2_drpdi;
  wire [15:0]gt2_drpdo;
  wire gt2_drpen;
  wire gt2_drprdy;
  wire gt2_drpwe;
  wire gt2_eyescandataerror_out;
  wire gt2_eyescanreset_in;
  wire gt2_eyescantrigger_in;
  wire [2:0]gt2_loopback_in;
  wire [2:0]gt2_rxbufstatus_out;
  wire gt2_rxcdrhold_in;
  wire gt2_rxcommadet_out;
  wire [1:0]gt2_rxdisperr_out;
  wire gt2_rxlpmhfhold_in;
  wire gt2_rxlpmhfovrden_in;
  wire gt2_rxlpmlfhold_in;
  wire gt2_rxlpmlfovrden_in;
  wire gt2_rxlpmreset_in;
  wire [1:0]gt2_rxnotintable_out;
  wire gt2_rxpcsreset_in;
  wire gt2_rxpmareset_in;
  wire gt2_rxpmaresetdone_out;
  wire gt2_rxpolarity_in;
  wire gt2_rxprbscntreset_in;
  wire gt2_rxprbserr_out;
  wire [2:0]gt2_rxprbssel_in;
  wire [2:0]gt2_rxrate_in;
  wire gt2_rxresetdone_out;
  wire [3:0]gt2_txdiffctrl_in;
  wire gt2_txdlysresetdone_out;
  wire gt2_txinhibit_in;
  wire gt2_txpcsreset_in;
  wire gt2_txphaligndone_out;
  wire gt2_txphinitdone_out;
  wire gt2_txpmareset_in;
  wire gt2_txpolarity_in;
  wire [4:0]gt2_txpostcursor_in;
  wire gt2_txprbsforceerr_in;
  wire [2:0]gt2_txprbssel_in;
  wire [4:0]gt2_txprecursor_in;
  wire gt2_txresetdone_out;
  wire [14:0]gt3_dmonitorout_out;
  wire gt3_drp_busy;
  wire [8:0]gt3_drpaddr;
  wire [15:0]gt3_drpdi;
  wire [15:0]gt3_drpdo;
  wire gt3_drpen;
  wire gt3_drprdy;
  wire gt3_drpwe;
  wire gt3_eyescandataerror_out;
  wire gt3_eyescanreset_in;
  wire gt3_eyescantrigger_in;
  wire [2:0]gt3_loopback_in;
  wire [2:0]gt3_rxbufstatus_out;
  wire gt3_rxcdrhold_in;
  wire gt3_rxcommadet_out;
  wire [1:0]gt3_rxdisperr_out;
  wire gt3_rxlpmhfhold_in;
  wire gt3_rxlpmhfovrden_in;
  wire gt3_rxlpmlfhold_in;
  wire gt3_rxlpmlfovrden_in;
  wire gt3_rxlpmreset_in;
  wire [1:0]gt3_rxnotintable_out;
  wire gt3_rxpcsreset_in;
  wire gt3_rxpmareset_in;
  wire gt3_rxpmaresetdone_out;
  wire gt3_rxpolarity_in;
  wire gt3_rxprbscntreset_in;
  wire gt3_rxprbserr_out;
  wire [2:0]gt3_rxprbssel_in;
  wire [2:0]gt3_rxrate_in;
  wire gt3_rxresetdone_out;
  wire [3:0]gt3_txdiffctrl_in;
  wire gt3_txdlysresetdone_out;
  wire gt3_txinhibit_in;
  wire gt3_txpcsreset_in;
  wire gt3_txphaligndone_out;
  wire gt3_txphinitdone_out;
  wire gt3_txpmareset_in;
  wire gt3_txpolarity_in;
  wire [4:0]gt3_txpostcursor_in;
  wire gt3_txprbsforceerr_in;
  wire [2:0]gt3_txprbssel_in;
  wire [4:0]gt3_txprecursor_in;
  wire gt3_txresetdone_out;
  wire gt_qplllock_out;
  wire refclk;
  wire reset;
  wire [3:0]signal_detect;
  wire [7:0]status_vector;
  wire xaui_rx_l0_n;
  wire xaui_rx_l0_p;
  wire xaui_rx_l1_n;
  wire xaui_rx_l1_p;
  wire xaui_rx_l2_n;
  wire xaui_rx_l2_p;
  wire xaui_rx_l3_n;
  wire xaui_rx_l3_p;
  wire xaui_tx_l0_n;
  wire xaui_tx_l0_p;
  wire xaui_tx_l1_n;
  wire xaui_tx_l1_p;
  wire xaui_tx_l2_n;
  wire xaui_tx_l2_p;
  wire xaui_tx_l3_n;
  wire xaui_tx_l3_p;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  (* downgradeipidentifiedwarnings = "yes" *) 
  xaui_0_xaui_0_block U0
       (.clk156_lock(clk156_lock),
        .clk156_out(clk156_out),
        .configuration_vector(configuration_vector),
        .dclk(dclk),
        .debug(debug),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drp_busy(gt0_drp_busy),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_rxbufstatus_out(gt0_rxbufstatus_out),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxdisperr_out(gt0_rxdisperr_out),
        .gt0_rxlpmhfhold_in(gt0_rxlpmhfhold_in),
        .gt0_rxlpmhfovrden_in(gt0_rxlpmhfovrden_in),
        .gt0_rxlpmlfhold_in(gt0_rxlpmlfhold_in),
        .gt0_rxlpmlfovrden_in(gt0_rxlpmlfovrden_in),
        .gt0_rxlpmreset_in(gt0_rxlpmreset_in),
        .gt0_rxnotintable_out(gt0_rxnotintable_out),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpmaresetdone_out(gt0_rxpmaresetdone_out),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txdlysresetdone_out(gt0_txdlysresetdone_out),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txphaligndone_out(gt0_txphaligndone_out),
        .gt0_txphinitdone_out(gt0_txphinitdone_out),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt0_txresetdone_out(gt0_txresetdone_out),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drp_busy(gt1_drp_busy),
        .gt1_drpaddr(gt1_drpaddr),
        .gt1_drpdi(gt1_drpdi),
        .gt1_drpdo(gt1_drpdo),
        .gt1_drpen(gt1_drpen),
        .gt1_drprdy(gt1_drprdy),
        .gt1_drpwe(gt1_drpwe),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rxbufstatus_out(gt1_rxbufstatus_out),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxdisperr_out(gt1_rxdisperr_out),
        .gt1_rxlpmhfhold_in(gt1_rxlpmhfhold_in),
        .gt1_rxlpmhfovrden_in(gt1_rxlpmhfovrden_in),
        .gt1_rxlpmlfhold_in(gt1_rxlpmlfhold_in),
        .gt1_rxlpmlfovrden_in(gt1_rxlpmlfovrden_in),
        .gt1_rxlpmreset_in(gt1_rxlpmreset_in),
        .gt1_rxnotintable_out(gt1_rxnotintable_out),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .gt1_rxpmaresetdone_out(gt1_rxpmaresetdone_out),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txdlysresetdone_out(gt1_txdlysresetdone_out),
        .gt1_txinhibit_in(gt1_txinhibit_in),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txphaligndone_out(gt1_txphaligndone_out),
        .gt1_txphinitdone_out(gt1_txphinitdone_out),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt1_txresetdone_out(gt1_txresetdone_out),
        .gt2_dmonitorout_out(gt2_dmonitorout_out),
        .gt2_drp_busy(gt2_drp_busy),
        .gt2_drpaddr(gt2_drpaddr),
        .gt2_drpdi(gt2_drpdi),
        .gt2_drpdo(gt2_drpdo),
        .gt2_drpen(gt2_drpen),
        .gt2_drprdy(gt2_drprdy),
        .gt2_drpwe(gt2_drpwe),
        .gt2_eyescandataerror_out(gt2_eyescandataerror_out),
        .gt2_eyescanreset_in(gt2_eyescanreset_in),
        .gt2_eyescantrigger_in(gt2_eyescantrigger_in),
        .gt2_loopback_in(gt2_loopback_in),
        .gt2_rxbufstatus_out(gt2_rxbufstatus_out),
        .gt2_rxcdrhold_in(gt2_rxcdrhold_in),
        .gt2_rxcommadet_out(gt2_rxcommadet_out),
        .gt2_rxdisperr_out(gt2_rxdisperr_out),
        .gt2_rxlpmhfhold_in(gt2_rxlpmhfhold_in),
        .gt2_rxlpmhfovrden_in(gt2_rxlpmhfovrden_in),
        .gt2_rxlpmlfhold_in(gt2_rxlpmlfhold_in),
        .gt2_rxlpmlfovrden_in(gt2_rxlpmlfovrden_in),
        .gt2_rxlpmreset_in(gt2_rxlpmreset_in),
        .gt2_rxnotintable_out(gt2_rxnotintable_out),
        .gt2_rxpcsreset_in(gt2_rxpcsreset_in),
        .gt2_rxpmareset_in(gt2_rxpmareset_in),
        .gt2_rxpmaresetdone_out(gt2_rxpmaresetdone_out),
        .gt2_rxpolarity_in(gt2_rxpolarity_in),
        .gt2_rxprbscntreset_in(gt2_rxprbscntreset_in),
        .gt2_rxprbserr_out(gt2_rxprbserr_out),
        .gt2_rxprbssel_in(gt2_rxprbssel_in),
        .gt2_rxrate_in(gt2_rxrate_in),
        .gt2_rxresetdone_out(gt2_rxresetdone_out),
        .gt2_txdiffctrl_in(gt2_txdiffctrl_in),
        .gt2_txdlysresetdone_out(gt2_txdlysresetdone_out),
        .gt2_txinhibit_in(gt2_txinhibit_in),
        .gt2_txpcsreset_in(gt2_txpcsreset_in),
        .gt2_txphaligndone_out(gt2_txphaligndone_out),
        .gt2_txphinitdone_out(gt2_txphinitdone_out),
        .gt2_txpmareset_in(gt2_txpmareset_in),
        .gt2_txpolarity_in(gt2_txpolarity_in),
        .gt2_txpostcursor_in(gt2_txpostcursor_in),
        .gt2_txprbsforceerr_in(gt2_txprbsforceerr_in),
        .gt2_txprbssel_in(gt2_txprbssel_in),
        .gt2_txprecursor_in(gt2_txprecursor_in),
        .gt2_txresetdone_out(gt2_txresetdone_out),
        .gt3_dmonitorout_out(gt3_dmonitorout_out),
        .gt3_drp_busy(gt3_drp_busy),
        .gt3_drpaddr(gt3_drpaddr),
        .gt3_drpdi(gt3_drpdi),
        .gt3_drpdo(gt3_drpdo),
        .gt3_drpen(gt3_drpen),
        .gt3_drprdy(gt3_drprdy),
        .gt3_drpwe(gt3_drpwe),
        .gt3_eyescandataerror_out(gt3_eyescandataerror_out),
        .gt3_eyescanreset_in(gt3_eyescanreset_in),
        .gt3_eyescantrigger_in(gt3_eyescantrigger_in),
        .gt3_loopback_in(gt3_loopback_in),
        .gt3_rxbufstatus_out(gt3_rxbufstatus_out),
        .gt3_rxcdrhold_in(gt3_rxcdrhold_in),
        .gt3_rxcommadet_out(gt3_rxcommadet_out),
        .gt3_rxdisperr_out(gt3_rxdisperr_out),
        .gt3_rxlpmhfhold_in(gt3_rxlpmhfhold_in),
        .gt3_rxlpmhfovrden_in(gt3_rxlpmhfovrden_in),
        .gt3_rxlpmlfhold_in(gt3_rxlpmlfhold_in),
        .gt3_rxlpmlfovrden_in(gt3_rxlpmlfovrden_in),
        .gt3_rxlpmreset_in(gt3_rxlpmreset_in),
        .gt3_rxnotintable_out(gt3_rxnotintable_out),
        .gt3_rxpcsreset_in(gt3_rxpcsreset_in),
        .gt3_rxpmareset_in(gt3_rxpmareset_in),
        .gt3_rxpmaresetdone_out(gt3_rxpmaresetdone_out),
        .gt3_rxpolarity_in(gt3_rxpolarity_in),
        .gt3_rxprbscntreset_in(gt3_rxprbscntreset_in),
        .gt3_rxprbserr_out(gt3_rxprbserr_out),
        .gt3_rxprbssel_in(gt3_rxprbssel_in),
        .gt3_rxrate_in(gt3_rxrate_in),
        .gt3_rxresetdone_out(gt3_rxresetdone_out),
        .gt3_txdiffctrl_in(gt3_txdiffctrl_in),
        .gt3_txdlysresetdone_out(gt3_txdlysresetdone_out),
        .gt3_txinhibit_in(gt3_txinhibit_in),
        .gt3_txpcsreset_in(gt3_txpcsreset_in),
        .gt3_txphaligndone_out(gt3_txphaligndone_out),
        .gt3_txphinitdone_out(gt3_txphinitdone_out),
        .gt3_txpmareset_in(gt3_txpmareset_in),
        .gt3_txpolarity_in(gt3_txpolarity_in),
        .gt3_txpostcursor_in(gt3_txpostcursor_in),
        .gt3_txprbsforceerr_in(gt3_txprbsforceerr_in),
        .gt3_txprbssel_in(gt3_txprbssel_in),
        .gt3_txprecursor_in(gt3_txprecursor_in),
        .gt3_txresetdone_out(gt3_txresetdone_out),
        .gt_qplllock_out(gt_qplllock_out),
        .refclk(refclk),
        .reset(reset),
        .signal_detect(signal_detect),
        .status_vector(status_vector),
        .xaui_rx_l0_n(xaui_rx_l0_n),
        .xaui_rx_l0_p(xaui_rx_l0_p),
        .xaui_rx_l1_n(xaui_rx_l1_n),
        .xaui_rx_l1_p(xaui_rx_l1_p),
        .xaui_rx_l2_n(xaui_rx_l2_n),
        .xaui_rx_l2_p(xaui_rx_l2_p),
        .xaui_rx_l3_n(xaui_rx_l3_n),
        .xaui_rx_l3_p(xaui_rx_l3_p),
        .xaui_tx_l0_n(xaui_tx_l0_n),
        .xaui_tx_l0_p(xaui_tx_l0_p),
        .xaui_tx_l1_n(xaui_tx_l1_n),
        .xaui_tx_l1_p(xaui_tx_l1_p),
        .xaui_tx_l2_n(xaui_tx_l2_n),
        .xaui_tx_l2_p(xaui_tx_l2_p),
        .xaui_tx_l3_n(xaui_tx_l3_n),
        .xaui_tx_l3_p(xaui_tx_l3_p),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule

(* downgradeipidentifiedwarnings = "yes" *) 
module xaui_0_xaui_0_block
   (dclk,
    reset,
    clk156_out,
    clk156_lock,
    refclk,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    xaui_tx_l0_p,
    xaui_tx_l0_n,
    xaui_tx_l1_p,
    xaui_tx_l1_n,
    xaui_tx_l2_p,
    xaui_tx_l2_n,
    xaui_tx_l3_p,
    xaui_tx_l3_n,
    xaui_rx_l0_p,
    xaui_rx_l0_n,
    xaui_rx_l1_p,
    xaui_rx_l1_n,
    xaui_rx_l2_p,
    xaui_rx_l2_n,
    xaui_rx_l3_p,
    xaui_rx_l3_n,
    signal_detect,
    debug,
    gt0_drpaddr,
    gt0_drpen,
    gt0_drpdi,
    gt0_drpdo,
    gt0_drprdy,
    gt0_drpwe,
    gt0_drp_busy,
    gt0_txpmareset_in,
    gt0_txpcsreset_in,
    gt0_txresetdone_out,
    gt0_rxpmareset_in,
    gt0_rxpcsreset_in,
    gt0_rxpmaresetdone_out,
    gt0_rxresetdone_out,
    gt0_rxbufstatus_out,
    gt0_txphaligndone_out,
    gt0_txphinitdone_out,
    gt0_txdlysresetdone_out,
    gt_qplllock_out,
    gt0_eyescantrigger_in,
    gt0_eyescanreset_in,
    gt0_eyescandataerror_out,
    gt0_rxrate_in,
    gt0_loopback_in,
    gt0_rxpolarity_in,
    gt0_txpolarity_in,
    gt0_rxlpmreset_in,
    gt0_rxlpmhfhold_in,
    gt0_rxlpmhfovrden_in,
    gt0_rxlpmlfhold_in,
    gt0_rxlpmlfovrden_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt0_txdiffctrl_in,
    gt0_txinhibit_in,
    gt0_rxprbscntreset_in,
    gt0_rxprbserr_out,
    gt0_rxprbssel_in,
    gt0_txprbssel_in,
    gt0_txprbsforceerr_in,
    gt0_rxcdrhold_in,
    gt0_dmonitorout_out,
    gt0_rxdisperr_out,
    gt0_rxnotintable_out,
    gt0_rxcommadet_out,
    gt1_drpaddr,
    gt1_drpen,
    gt1_drpdi,
    gt1_drpdo,
    gt1_drprdy,
    gt1_drpwe,
    gt1_drp_busy,
    gt1_txpmareset_in,
    gt1_txpcsreset_in,
    gt1_txresetdone_out,
    gt1_rxpmareset_in,
    gt1_rxpcsreset_in,
    gt1_rxpmaresetdone_out,
    gt1_rxresetdone_out,
    gt1_rxbufstatus_out,
    gt1_txphaligndone_out,
    gt1_txphinitdone_out,
    gt1_txdlysresetdone_out,
    gt1_eyescantrigger_in,
    gt1_eyescanreset_in,
    gt1_eyescandataerror_out,
    gt1_rxrate_in,
    gt1_loopback_in,
    gt1_rxpolarity_in,
    gt1_txpolarity_in,
    gt1_rxlpmreset_in,
    gt1_rxlpmhfhold_in,
    gt1_rxlpmhfovrden_in,
    gt1_rxlpmlfhold_in,
    gt1_rxlpmlfovrden_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt1_txdiffctrl_in,
    gt1_txinhibit_in,
    gt1_rxprbscntreset_in,
    gt1_rxprbserr_out,
    gt1_rxprbssel_in,
    gt1_txprbssel_in,
    gt1_txprbsforceerr_in,
    gt1_rxcdrhold_in,
    gt1_dmonitorout_out,
    gt1_rxdisperr_out,
    gt1_rxnotintable_out,
    gt1_rxcommadet_out,
    gt2_drpaddr,
    gt2_drpen,
    gt2_drpdi,
    gt2_drpdo,
    gt2_drprdy,
    gt2_drpwe,
    gt2_drp_busy,
    gt2_txpmareset_in,
    gt2_txpcsreset_in,
    gt2_txresetdone_out,
    gt2_rxpmareset_in,
    gt2_rxpcsreset_in,
    gt2_rxpmaresetdone_out,
    gt2_rxresetdone_out,
    gt2_rxbufstatus_out,
    gt2_txphaligndone_out,
    gt2_txphinitdone_out,
    gt2_txdlysresetdone_out,
    gt2_eyescantrigger_in,
    gt2_eyescanreset_in,
    gt2_eyescandataerror_out,
    gt2_rxrate_in,
    gt2_loopback_in,
    gt2_rxpolarity_in,
    gt2_txpolarity_in,
    gt2_rxlpmreset_in,
    gt2_rxlpmhfhold_in,
    gt2_rxlpmhfovrden_in,
    gt2_rxlpmlfhold_in,
    gt2_rxlpmlfovrden_in,
    gt2_txpostcursor_in,
    gt2_txprecursor_in,
    gt2_txdiffctrl_in,
    gt2_txinhibit_in,
    gt2_rxprbscntreset_in,
    gt2_rxprbserr_out,
    gt2_rxprbssel_in,
    gt2_txprbssel_in,
    gt2_txprbsforceerr_in,
    gt2_rxcdrhold_in,
    gt2_dmonitorout_out,
    gt2_rxdisperr_out,
    gt2_rxnotintable_out,
    gt2_rxcommadet_out,
    gt3_drpaddr,
    gt3_drpen,
    gt3_drpdi,
    gt3_drpdo,
    gt3_drprdy,
    gt3_drpwe,
    gt3_drp_busy,
    gt3_txpmareset_in,
    gt3_txpcsreset_in,
    gt3_txresetdone_out,
    gt3_rxpmareset_in,
    gt3_rxpcsreset_in,
    gt3_rxpmaresetdone_out,
    gt3_rxresetdone_out,
    gt3_rxbufstatus_out,
    gt3_txphaligndone_out,
    gt3_txphinitdone_out,
    gt3_txdlysresetdone_out,
    gt3_eyescantrigger_in,
    gt3_eyescanreset_in,
    gt3_eyescandataerror_out,
    gt3_rxrate_in,
    gt3_loopback_in,
    gt3_rxpolarity_in,
    gt3_txpolarity_in,
    gt3_rxlpmreset_in,
    gt3_rxlpmhfhold_in,
    gt3_rxlpmhfovrden_in,
    gt3_rxlpmlfhold_in,
    gt3_rxlpmlfovrden_in,
    gt3_txpostcursor_in,
    gt3_txprecursor_in,
    gt3_txdiffctrl_in,
    gt3_txinhibit_in,
    gt3_rxprbscntreset_in,
    gt3_rxprbserr_out,
    gt3_rxprbssel_in,
    gt3_txprbssel_in,
    gt3_txprbsforceerr_in,
    gt3_rxcdrhold_in,
    gt3_dmonitorout_out,
    gt3_rxdisperr_out,
    gt3_rxnotintable_out,
    gt3_rxcommadet_out,
    configuration_vector,
    status_vector);
  input dclk;
  input reset;
  output clk156_out;
  output clk156_lock;
  input refclk;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output xaui_tx_l0_p;
  output xaui_tx_l0_n;
  output xaui_tx_l1_p;
  output xaui_tx_l1_n;
  output xaui_tx_l2_p;
  output xaui_tx_l2_n;
  output xaui_tx_l3_p;
  output xaui_tx_l3_n;
  input xaui_rx_l0_p;
  input xaui_rx_l0_n;
  input xaui_rx_l1_p;
  input xaui_rx_l1_n;
  input xaui_rx_l2_p;
  input xaui_rx_l2_n;
  input xaui_rx_l3_p;
  input xaui_rx_l3_n;
  input [3:0]signal_detect;
  output [5:0]debug;
  input [8:0]gt0_drpaddr;
  input gt0_drpen;
  input [15:0]gt0_drpdi;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  input gt0_drpwe;
  output gt0_drp_busy;
  input gt0_txpmareset_in;
  input gt0_txpcsreset_in;
  output gt0_txresetdone_out;
  input gt0_rxpmareset_in;
  input gt0_rxpcsreset_in;
  output gt0_rxpmaresetdone_out;
  output gt0_rxresetdone_out;
  output [2:0]gt0_rxbufstatus_out;
  output gt0_txphaligndone_out;
  output gt0_txphinitdone_out;
  output gt0_txdlysresetdone_out;
  output gt_qplllock_out;
  input gt0_eyescantrigger_in;
  input gt0_eyescanreset_in;
  output gt0_eyescandataerror_out;
  input [2:0]gt0_rxrate_in;
  input [2:0]gt0_loopback_in;
  input gt0_rxpolarity_in;
  input gt0_txpolarity_in;
  input gt0_rxlpmreset_in;
  input gt0_rxlpmhfhold_in;
  input gt0_rxlpmhfovrden_in;
  input gt0_rxlpmlfhold_in;
  input gt0_rxlpmlfovrden_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [3:0]gt0_txdiffctrl_in;
  input gt0_txinhibit_in;
  input gt0_rxprbscntreset_in;
  output gt0_rxprbserr_out;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_txprbssel_in;
  input gt0_txprbsforceerr_in;
  input gt0_rxcdrhold_in;
  output [14:0]gt0_dmonitorout_out;
  output [1:0]gt0_rxdisperr_out;
  output [1:0]gt0_rxnotintable_out;
  output gt0_rxcommadet_out;
  input [8:0]gt1_drpaddr;
  input gt1_drpen;
  input [15:0]gt1_drpdi;
  output [15:0]gt1_drpdo;
  output gt1_drprdy;
  input gt1_drpwe;
  output gt1_drp_busy;
  input gt1_txpmareset_in;
  input gt1_txpcsreset_in;
  output gt1_txresetdone_out;
  input gt1_rxpmareset_in;
  input gt1_rxpcsreset_in;
  output gt1_rxpmaresetdone_out;
  output gt1_rxresetdone_out;
  output [2:0]gt1_rxbufstatus_out;
  output gt1_txphaligndone_out;
  output gt1_txphinitdone_out;
  output gt1_txdlysresetdone_out;
  input gt1_eyescantrigger_in;
  input gt1_eyescanreset_in;
  output gt1_eyescandataerror_out;
  input [2:0]gt1_rxrate_in;
  input [2:0]gt1_loopback_in;
  input gt1_rxpolarity_in;
  input gt1_txpolarity_in;
  input gt1_rxlpmreset_in;
  input gt1_rxlpmhfhold_in;
  input gt1_rxlpmhfovrden_in;
  input gt1_rxlpmlfhold_in;
  input gt1_rxlpmlfovrden_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [3:0]gt1_txdiffctrl_in;
  input gt1_txinhibit_in;
  input gt1_rxprbscntreset_in;
  output gt1_rxprbserr_out;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_txprbssel_in;
  input gt1_txprbsforceerr_in;
  input gt1_rxcdrhold_in;
  output [14:0]gt1_dmonitorout_out;
  output [1:0]gt1_rxdisperr_out;
  output [1:0]gt1_rxnotintable_out;
  output gt1_rxcommadet_out;
  input [8:0]gt2_drpaddr;
  input gt2_drpen;
  input [15:0]gt2_drpdi;
  output [15:0]gt2_drpdo;
  output gt2_drprdy;
  input gt2_drpwe;
  output gt2_drp_busy;
  input gt2_txpmareset_in;
  input gt2_txpcsreset_in;
  output gt2_txresetdone_out;
  input gt2_rxpmareset_in;
  input gt2_rxpcsreset_in;
  output gt2_rxpmaresetdone_out;
  output gt2_rxresetdone_out;
  output [2:0]gt2_rxbufstatus_out;
  output gt2_txphaligndone_out;
  output gt2_txphinitdone_out;
  output gt2_txdlysresetdone_out;
  input gt2_eyescantrigger_in;
  input gt2_eyescanreset_in;
  output gt2_eyescandataerror_out;
  input [2:0]gt2_rxrate_in;
  input [2:0]gt2_loopback_in;
  input gt2_rxpolarity_in;
  input gt2_txpolarity_in;
  input gt2_rxlpmreset_in;
  input gt2_rxlpmhfhold_in;
  input gt2_rxlpmhfovrden_in;
  input gt2_rxlpmlfhold_in;
  input gt2_rxlpmlfovrden_in;
  input [4:0]gt2_txpostcursor_in;
  input [4:0]gt2_txprecursor_in;
  input [3:0]gt2_txdiffctrl_in;
  input gt2_txinhibit_in;
  input gt2_rxprbscntreset_in;
  output gt2_rxprbserr_out;
  input [2:0]gt2_rxprbssel_in;
  input [2:0]gt2_txprbssel_in;
  input gt2_txprbsforceerr_in;
  input gt2_rxcdrhold_in;
  output [14:0]gt2_dmonitorout_out;
  output [1:0]gt2_rxdisperr_out;
  output [1:0]gt2_rxnotintable_out;
  output gt2_rxcommadet_out;
  input [8:0]gt3_drpaddr;
  input gt3_drpen;
  input [15:0]gt3_drpdi;
  output [15:0]gt3_drpdo;
  output gt3_drprdy;
  input gt3_drpwe;
  output gt3_drp_busy;
  input gt3_txpmareset_in;
  input gt3_txpcsreset_in;
  output gt3_txresetdone_out;
  input gt3_rxpmareset_in;
  input gt3_rxpcsreset_in;
  output gt3_rxpmaresetdone_out;
  output gt3_rxresetdone_out;
  output [2:0]gt3_rxbufstatus_out;
  output gt3_txphaligndone_out;
  output gt3_txphinitdone_out;
  output gt3_txdlysresetdone_out;
  input gt3_eyescantrigger_in;
  input gt3_eyescanreset_in;
  output gt3_eyescandataerror_out;
  input [2:0]gt3_rxrate_in;
  input [2:0]gt3_loopback_in;
  input gt3_rxpolarity_in;
  input gt3_txpolarity_in;
  input gt3_rxlpmreset_in;
  input gt3_rxlpmhfhold_in;
  input gt3_rxlpmhfovrden_in;
  input gt3_rxlpmlfhold_in;
  input gt3_rxlpmlfovrden_in;
  input [4:0]gt3_txpostcursor_in;
  input [4:0]gt3_txprecursor_in;
  input [3:0]gt3_txdiffctrl_in;
  input gt3_txinhibit_in;
  input gt3_rxprbscntreset_in;
  output gt3_rxprbserr_out;
  input [2:0]gt3_rxprbssel_in;
  input [2:0]gt3_txprbssel_in;
  input gt3_txprbsforceerr_in;
  input gt3_rxcdrhold_in;
  output [14:0]gt3_dmonitorout_out;
  output [1:0]gt3_rxdisperr_out;
  output [1:0]gt3_rxnotintable_out;
  output gt3_rxcommadet_out;
  input [6:0]configuration_vector;
  output [7:0]status_vector;

  wire [2:0]bufStatus;
  wire clk156_lock;
  wire clk156_out;
  wire [6:0]configuration_vector;
  wire [3:0]core_mgt_rx_reset_reord;
  wire data_out;
  wire dclk;
  wire dclk_mgt_rx_reset_inprocess;
  wire dclk_mgt_rx_reset_inprocess0;
  wire dclk_mgt_rx_reset_stretched;
  wire dclk_mgt_rx_reset_waiting_resetdone;
  wire [3:0]dclk_mgt_rxresetdone;
  wire [5:0]debug;
  wire done;
  wire [14:0]gt0_dmonitorout_out;
  wire gt0_drp_busy;
  wire [8:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_pll0reset_in;
  wire [2:0]gt0_rxbufstatus_out;
  wire gt0_rxcdrhold_in;
  wire [1:0]gt0_rxchariscomma_out;
  wire [1:0]gt0_rxcharisk_out;
  wire gt0_rxcommadet_out;
  wire [15:0]gt0_rxdata_out;
  wire [1:0]gt0_rxdisperr_out;
  wire gt0_rxlpmhfhold_in;
  wire gt0_rxlpmhfovrden_in;
  wire gt0_rxlpmlfhold_in;
  wire gt0_rxlpmlfovrden_in;
  wire gt0_rxlpmreset_in;
  wire gt0_rxmcommaalignen_in;
  wire [1:0]gt0_rxnotintable_out;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset;
  wire gt0_rxpmareset_in;
  wire gt0_rxpmaresetdone_out;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxresetdone_out;
  wire [1:0]gt0_txcharisk_in;
  wire [15:0]gt0_txdata_in;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlysresetdone_out;
  wire gt0_txinhibit_in;
  wire gt0_txoutclk_i;
  wire gt0_txpcsreset_in;
  wire gt0_txphaligndone_out;
  wire gt0_txphinitdone_out;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_txresetdone_out;
  wire [14:0]gt1_dmonitorout_out;
  wire gt1_drp_busy;
  wire [8:0]gt1_drpaddr;
  wire [15:0]gt1_drpdi;
  wire [15:0]gt1_drpdo;
  wire gt1_drpen;
  wire gt1_drprdy;
  wire gt1_drpwe;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire [2:0]gt1_loopback_in;
  wire [2:0]gt1_rxbufstatus_out;
  wire gt1_rxcdrhold_in;
  wire [1:0]gt1_rxchariscomma_out;
  wire [1:0]gt1_rxcharisk_out;
  wire gt1_rxcommadet_out;
  wire [15:0]gt1_rxdata_out;
  wire [1:0]gt1_rxdisperr_out;
  wire gt1_rxlpmhfovrden_in;
  wire gt1_rxlpmlfovrden_in;
  wire gt1_rxlpmreset_in;
  wire gt1_rxmcommaalignen_in;
  wire [1:0]gt1_rxnotintable_out;
  wire gt1_rxpcsreset_in;
  wire gt1_rxpmareset;
  wire gt1_rxpmareset_in;
  wire gt1_rxpmaresetdone_out;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxresetdone_out;
  wire [1:0]gt1_txcharisk_in;
  wire [15:0]gt1_txdata_in;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txdlysreset_in;
  wire gt1_txdlysresetdone_out;
  wire gt1_txpcsreset_in;
  wire gt1_txphalign_in;
  wire gt1_txphaligndone_out;
  wire gt1_txphinit_in;
  wire gt1_txphinitdone_out;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt1_txresetdone_out;
  wire [14:0]gt2_dmonitorout_out;
  wire gt2_drp_busy;
  wire [8:0]gt2_drpaddr;
  wire [15:0]gt2_drpdi;
  wire [15:0]gt2_drpdo;
  wire gt2_drpen;
  wire gt2_drprdy;
  wire gt2_drpwe;
  wire gt2_eyescandataerror_out;
  wire gt2_eyescanreset_in;
  wire gt2_eyescantrigger_in;
  wire [2:0]gt2_loopback_in;
  wire [2:0]gt2_rxbufstatus_out;
  wire gt2_rxcdrhold_in;
  wire [1:0]gt2_rxchariscomma_out;
  wire [1:0]gt2_rxcharisk_out;
  wire gt2_rxcommadet_out;
  wire [15:0]gt2_rxdata_out;
  wire [1:0]gt2_rxdisperr_out;
  wire gt2_rxlpmhfhold_in;
  wire gt2_rxlpmhfovrden_in;
  wire gt2_rxlpmlfhold_in;
  wire gt2_rxlpmlfovrden_in;
  wire gt2_rxlpmreset_in;
  wire [1:0]gt2_rxnotintable_out;
  wire gt2_rxpcsreset_in;
  wire gt2_rxpmareset;
  wire gt2_rxpmareset_in;
  wire gt2_rxpmaresetdone_out;
  wire gt2_rxpolarity_in;
  wire gt2_rxprbscntreset_in;
  wire gt2_rxprbserr_out;
  wire [2:0]gt2_rxprbssel_in;
  wire [2:0]gt2_rxrate_in;
  wire gt2_rxresetdone_out;
  wire [3:0]gt2_txdiffctrl_in;
  wire gt2_txdlysreset_in;
  wire gt2_txdlysresetdone_out;
  wire gt2_txpcsreset_in;
  wire gt2_txphalign_in;
  wire gt2_txphaligndone_out;
  wire gt2_txphinit_in;
  wire gt2_txphinitdone_out;
  wire gt2_txpmareset_in;
  wire gt2_txpolarity_in;
  wire [4:0]gt2_txpostcursor_in;
  wire gt2_txprbsforceerr_in;
  wire [2:0]gt2_txprbssel_in;
  wire [4:0]gt2_txprecursor_in;
  wire gt2_txresetdone_out;
  wire [14:0]gt3_dmonitorout_out;
  wire gt3_drp_busy;
  wire [8:0]gt3_drpaddr;
  wire [15:0]gt3_drpdi;
  wire [15:0]gt3_drpdo;
  wire gt3_drpen;
  wire gt3_drprdy;
  wire gt3_drpwe;
  wire gt3_eyescandataerror_out;
  wire gt3_eyescanreset_in;
  wire gt3_eyescantrigger_in;
  wire [2:0]gt3_loopback_in;
  wire [2:0]gt3_rxbufstatus_out;
  wire gt3_rxcdrhold_in;
  wire [1:0]gt3_rxchariscomma_out;
  wire [1:0]gt3_rxcharisk_out;
  wire gt3_rxcommadet_out;
  wire [15:0]gt3_rxdata_out;
  wire [1:0]gt3_rxdisperr_out;
  wire gt3_rxlpmhfhold_in;
  wire gt3_rxlpmhfovrden_in;
  wire gt3_rxlpmlfhold_in;
  wire gt3_rxlpmlfovrden_in;
  wire gt3_rxlpmreset_in;
  wire gt3_rxmcommaalignen_in;
  wire [1:0]gt3_rxnotintable_out;
  wire gt3_rxpcsreset_in;
  wire gt3_rxpmareset;
  wire gt3_rxpmareset_in;
  wire gt3_rxpmaresetdone_out;
  wire gt3_rxpolarity_in;
  wire gt3_rxprbscntreset_in;
  wire gt3_rxprbserr_out;
  wire [2:0]gt3_rxprbssel_in;
  wire [2:0]gt3_rxrate_in;
  wire gt3_rxresetdone_out;
  wire [1:0]gt3_txcharisk_in;
  wire [15:0]gt3_txdata_in;
  wire [3:0]gt3_txdiffctrl_in;
  wire gt3_txdlysreset_in;
  wire gt3_txdlysresetdone_out;
  wire gt3_txpcsreset_in;
  wire gt3_txphalign_in;
  wire gt3_txphaligndone_out;
  wire gt3_txphinit_in;
  wire gt3_txphinitdone_out;
  wire gt3_txpmareset_in;
  wire gt3_txpolarity_in;
  wire [4:0]gt3_txpostcursor_in;
  wire gt3_txprbsforceerr_in;
  wire [2:0]gt3_txprbssel_in;
  wire [4:0]gt3_txprecursor_in;
  wire gt3_txresetdone_out;
  wire gt_qplllock_out;
  wire gt_wrapper_i_n_64;
  wire gt_wrapper_i_n_66;
  wire gt_wrapper_i_n_68;
  wire gt_wrapper_i_n_70;
  wire [7:0]mgt_codecomma;
  wire [7:0]mgt_codevalid;
  wire mgt_rx_reset_pulse_stretcher_i_n_1;
  wire [7:0]mgt_rxcharisk;
  wire [63:0]mgt_rxdata;
  wire [7:0]mgt_rxdisperr_reg;
  wire [7:0]mgt_rxnotintable_reg;
  wire mgt_rxresetdone_3_sync_i_n_1;
  wire p_0_in;
  wire [3:0]p_3_out;
  wire refclk;
  wire reset;
  wire reset156;
  wire reset_count_done_sync_i_n_0;
  wire reset_counter_i_n_1;
  wire reset_counter_i_n_2;
  wire rxprbs_in_use;
  wire rxprbs_in_use0;
  wire rxprbs_in_use_i_2_n_0;
  wire rxprbs_in_use_i_3_n_0;
  wire [3:0]signal_detect;
  wire [7:0]status_vector;
  wire txsync_i_n_1;
  wire txsync_i_n_11;
  wire txsync_i_n_2;
  wire txsync_i_n_6;
  wire txsync_i_n_7;
  wire uclk_cbm_rx_reset;
  wire uclk_chbond_counter;
  wire \uclk_chbond_counter[0]_i_3_n_0 ;
  wire \uclk_chbond_counter[0]_i_4_n_0 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_0 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_1 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_2 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_3 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_4 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_5 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_6 ;
  wire \uclk_chbond_counter_reg[0]_i_2_n_7 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_1 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_2 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_3 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_4 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_5 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_6 ;
  wire \uclk_chbond_counter_reg[12]_i_1_n_7 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_0 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_1 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_2 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_3 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_4 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_5 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_6 ;
  wire \uclk_chbond_counter_reg[4]_i_1_n_7 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_0 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_1 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_2 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_3 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_4 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_5 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_6 ;
  wire \uclk_chbond_counter_reg[8]_i_1_n_7 ;
  wire \uclk_chbond_counter_reg_n_0_[0] ;
  wire \uclk_chbond_counter_reg_n_0_[10] ;
  wire \uclk_chbond_counter_reg_n_0_[11] ;
  wire \uclk_chbond_counter_reg_n_0_[12] ;
  wire \uclk_chbond_counter_reg_n_0_[13] ;
  wire \uclk_chbond_counter_reg_n_0_[14] ;
  wire \uclk_chbond_counter_reg_n_0_[1] ;
  wire \uclk_chbond_counter_reg_n_0_[2] ;
  wire \uclk_chbond_counter_reg_n_0_[3] ;
  wire \uclk_chbond_counter_reg_n_0_[4] ;
  wire \uclk_chbond_counter_reg_n_0_[5] ;
  wire \uclk_chbond_counter_reg_n_0_[6] ;
  wire \uclk_chbond_counter_reg_n_0_[7] ;
  wire \uclk_chbond_counter_reg_n_0_[8] ;
  wire \uclk_chbond_counter_reg_n_0_[9] ;
  wire uclk_loopback_reset;
  wire uclk_loopback_reset0;
  wire uclk_mgt_enchansync;
  wire uclk_mgt_enchansync_reg;
  wire uclk_mgt_loopback;
  wire uclk_mgt_loopback_reg;
  wire uclk_mgt_powerdown;
  wire uclk_mgt_powerdown_falling;
  wire uclk_mgt_powerdown_falling0;
  wire uclk_mgt_powerdown_r;
  wire uclk_mgt_rx_reset;
  wire uclk_mgt_rx_reset0;
  wire uclk_mgt_rx_reset5;
  wire uclk_mgt_rxbuf_reset0;
  wire \uclk_mgt_rxbuf_reset[0]_i_2_n_0 ;
  wire \uclk_mgt_rxbuf_reset[0]_i_3_n_0 ;
  wire \uclk_mgt_rxbuf_reset_reg_n_0_[0] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[0] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[10] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[11] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[1] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[2] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[6] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[7] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[8] ;
  wire \uclk_mgt_rxbufstatus_reg_reg_n_0_[9] ;
  wire uclk_mgt_tx_reset;
  wire uclk_mgt_tx_reset0;
  wire [3:0]uclk_mgt_txresetdone_reg;
  wire [3:0]uclk_signal_detect_reord;
  wire \uclk_sync_counter[0]_i_1_n_0 ;
  wire \uclk_sync_counter[0]_i_3_n_0 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_0 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_1 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_2 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_3 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_4 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_5 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_6 ;
  wire \uclk_sync_counter_reg[0]_i_2_n_7 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_1 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_2 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_3 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_4 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_5 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_6 ;
  wire \uclk_sync_counter_reg[12]_i_1_n_7 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_0 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_1 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_2 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_3 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_4 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_5 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_6 ;
  wire \uclk_sync_counter_reg[4]_i_1_n_7 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_0 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_1 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_2 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_3 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_4 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_5 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_6 ;
  wire \uclk_sync_counter_reg[8]_i_1_n_7 ;
  wire \uclk_sync_counter_reg_n_0_[0] ;
  wire \uclk_sync_counter_reg_n_0_[10] ;
  wire \uclk_sync_counter_reg_n_0_[11] ;
  wire \uclk_sync_counter_reg_n_0_[12] ;
  wire \uclk_sync_counter_reg_n_0_[13] ;
  wire \uclk_sync_counter_reg_n_0_[14] ;
  wire \uclk_sync_counter_reg_n_0_[1] ;
  wire \uclk_sync_counter_reg_n_0_[2] ;
  wire \uclk_sync_counter_reg_n_0_[3] ;
  wire \uclk_sync_counter_reg_n_0_[4] ;
  wire \uclk_sync_counter_reg_n_0_[5] ;
  wire \uclk_sync_counter_reg_n_0_[6] ;
  wire \uclk_sync_counter_reg_n_0_[7] ;
  wire \uclk_sync_counter_reg_n_0_[8] ;
  wire \uclk_sync_counter_reg_n_0_[9] ;
  wire uclk_txsync_start_phase_align_reg_n_0;
  wire xaui_0_core_n_120;
  wire xaui_0_core_n_121;
  wire xaui_0_core_n_122;
  wire xaui_0_core_n_123;
  wire xaui_0_core_n_124;
  wire xaui_0_core_n_125;
  wire xaui_0_core_n_126;
  wire xaui_0_core_n_127;
  wire xaui_0_core_n_128;
  wire xaui_0_core_n_129;
  wire xaui_0_core_n_130;
  wire xaui_0_core_n_131;
  wire xaui_0_core_n_132;
  wire xaui_0_core_n_133;
  wire xaui_0_core_n_134;
  wire xaui_0_core_n_135;
  wire xaui_0_core_n_142;
  wire xaui_0_core_n_143;
  wire xaui_0_core_n_147;
  wire xaui_rx_l0_n;
  wire xaui_rx_l0_p;
  wire xaui_rx_l1_n;
  wire xaui_rx_l1_p;
  wire xaui_rx_l2_n;
  wire xaui_rx_l2_p;
  wire xaui_rx_l3_n;
  wire xaui_rx_l3_p;
  wire xaui_tx_l0_n;
  wire xaui_tx_l0_p;
  wire xaui_tx_l1_n;
  wire xaui_tx_l1_p;
  wire xaui_tx_l2_n;
  wire xaui_tx_l2_p;
  wire xaui_tx_l3_n;
  wire xaui_tx_l3_p;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;
  wire [3:3]\NLW_uclk_chbond_counter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_uclk_sync_counter_reg[12]_i_1_CO_UNCONNECTED ;
  wire NLW_xaui_0_core_mdio_out_UNCONNECTED;
  wire NLW_xaui_0_core_mdio_tri_UNCONNECTED;
  wire NLW_xaui_0_core_soft_reset_UNCONNECTED;

  FDRE \core_mgt_rx_reset_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(p_3_out[0]),
        .Q(core_mgt_rx_reset_reord[3]),
        .R(1'b0));
  FDRE \core_mgt_rx_reset_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(p_3_out[1]),
        .Q(core_mgt_rx_reset_reord[2]),
        .R(1'b0));
  FDRE \core_mgt_rx_reset_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(core_mgt_rx_reset_reord[0]),
        .R(1'b0));
  FDRE \core_mgt_rx_reset_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(p_3_out[3]),
        .Q(core_mgt_rx_reset_reord[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    dclk_mgt_rx_reset_inprocess_reg
       (.C(dclk),
        .CE(1'b1),
        .D(reset_counter_i_n_1),
        .Q(dclk_mgt_rx_reset_inprocess),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    dclk_mgt_rx_reset_waiting_resetdone_reg
       (.C(dclk),
        .CE(1'b1),
        .D(reset_counter_i_n_2),
        .Q(dclk_mgt_rx_reset_waiting_resetdone),
        .R(1'b0));
  xaui_0_xaui_0_gt_wrapper gt_wrapper_i
       (.AR(gt0_pll0reset_in),
        .CLK(clk156_out),
        .D(p_3_out),
        .dclk(dclk),
        .dclk_0(gt_wrapper_i_n_64),
        .dclk_1(gt_wrapper_i_n_66),
        .dclk_10({gt0_rxnotintable_out,gt1_rxnotintable_out,gt3_rxnotintable_out,gt2_rxnotintable_out}),
        .dclk_2(gt_wrapper_i_n_68),
        .dclk_3(gt_wrapper_i_n_70),
        .dclk_4({gt3_txresetdone_out,gt2_txresetdone_out,gt0_txresetdone_out,gt1_txresetdone_out}),
        .dclk_5({gt3_rxbufstatus_out,gt2_rxbufstatus_out,gt1_rxbufstatus_out,gt0_rxbufstatus_out}),
        .dclk_6({gt0_rxdata_out,gt1_rxdata_out,gt3_rxdata_out,gt2_rxdata_out}),
        .dclk_7({gt0_rxchariscomma_out,gt1_rxchariscomma_out,gt3_rxchariscomma_out,gt2_rxchariscomma_out}),
        .dclk_8({gt0_rxcharisk_out,gt1_rxcharisk_out,gt3_rxcharisk_out,gt2_rxcharisk_out}),
        .dclk_9({gt0_rxdisperr_out,gt1_rxdisperr_out,gt3_rxdisperr_out,gt2_rxdisperr_out}),
        .dclk_mgt_rx_reset_inprocess(dclk_mgt_rx_reset_inprocess),
        .drp_op_done_o_reg(mgt_rx_reset_pulse_stretcher_i_n_1),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drp_busy(gt0_drp_busy),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescandataerror_out_0(\uclk_mgt_rxbuf_reset_reg_n_0_[0] ),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxlpmhfhold_in(gt0_rxlpmhfhold_in),
        .gt0_rxlpmhfovrden_in(gt0_rxlpmhfovrden_in),
        .gt0_rxlpmlfhold_in(gt0_rxlpmlfhold_in),
        .gt0_rxlpmlfovrden_in(gt0_rxlpmlfovrden_in),
        .gt0_rxlpmreset_in(gt0_rxlpmreset_in),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset),
        .gt0_rxpmaresetdone_out(gt0_rxpmaresetdone_out),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txdlyen_in(txsync_i_n_1),
        .gt0_txdlysreset_in(txsync_i_n_6),
        .gt0_txdlysresetdone_out(gt0_txdlysresetdone_out),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt0_txoutclk_out(gt0_txoutclk_i),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txphalign_in(txsync_i_n_11),
        .gt0_txphaligndone_out(gt0_txphaligndone_out),
        .gt0_txphinit_in(txsync_i_n_7),
        .gt0_txphinitdone_out(gt0_txphinitdone_out),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drp_busy(gt1_drp_busy),
        .gt1_drpaddr(gt1_drpaddr),
        .gt1_drpdi(gt1_drpdi),
        .gt1_drpdo(gt1_drpdo),
        .gt1_drpen(gt1_drpen),
        .gt1_drprdy(gt1_drprdy),
        .gt1_drpwe(gt1_drpwe),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxlpmhfovrden_in(gt1_rxlpmhfovrden_in),
        .gt1_rxlpmlfovrden_in(gt1_rxlpmlfovrden_in),
        .gt1_rxlpmreset_in(gt1_rxlpmreset_in),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpmareset_in(gt1_rxpmareset),
        .gt1_rxpmaresetdone_out(gt1_rxpmaresetdone_out),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txdlysreset_in(gt1_txdlysreset_in),
        .gt1_txdlysresetdone_out(gt1_txdlysresetdone_out),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txphalign_in(gt1_txphalign_in),
        .gt1_txphaligndone_out(gt1_txphaligndone_out),
        .gt1_txphinit_in(gt1_txphinit_in),
        .gt1_txphinitdone_out(gt1_txphinitdone_out),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt2_dmonitorout_out(gt2_dmonitorout_out),
        .gt2_drp_busy(gt2_drp_busy),
        .gt2_drpaddr(gt2_drpaddr),
        .gt2_drpdi(gt2_drpdi),
        .gt2_drpdo(gt2_drpdo),
        .gt2_drpen(gt2_drpen),
        .gt2_drprdy(gt2_drprdy),
        .gt2_drpwe(gt2_drpwe),
        .gt2_eyescandataerror_out(gt2_eyescandataerror_out),
        .gt2_eyescanreset_in(gt2_eyescanreset_in),
        .gt2_eyescantrigger_in(gt2_eyescantrigger_in),
        .gt2_loopback_in(gt2_loopback_in),
        .gt2_rxcdrhold_in(gt2_rxcdrhold_in),
        .gt2_rxcommadet_out(gt2_rxcommadet_out),
        .gt2_rxlpmhfhold_in(gt2_rxlpmhfhold_in),
        .gt2_rxlpmhfovrden_in(gt2_rxlpmhfovrden_in),
        .gt2_rxlpmlfhold_in(gt2_rxlpmlfhold_in),
        .gt2_rxlpmlfovrden_in(gt2_rxlpmlfovrden_in),
        .gt2_rxlpmreset_in(gt2_rxlpmreset_in),
        .gt2_rxpcsreset_in(gt2_rxpcsreset_in),
        .gt2_rxpmareset_in(gt2_rxpmareset),
        .gt2_rxpmaresetdone_out(gt2_rxpmaresetdone_out),
        .gt2_rxpolarity_in(gt2_rxpolarity_in),
        .gt2_rxprbscntreset_in(gt2_rxprbscntreset_in),
        .gt2_rxprbserr_out(gt2_rxprbserr_out),
        .gt2_rxprbssel_in(gt2_rxprbssel_in),
        .gt2_rxrate_in(gt2_rxrate_in),
        .gt2_rxresetdone_out(gt2_rxresetdone_out),
        .gt2_txdiffctrl_in(gt2_txdiffctrl_in),
        .gt2_txdlysreset_in(gt2_txdlysreset_in),
        .gt2_txdlysresetdone_out(gt2_txdlysresetdone_out),
        .gt2_txpcsreset_in(gt2_txpcsreset_in),
        .gt2_txphalign_in(gt2_txphalign_in),
        .gt2_txphaligndone_out(gt2_txphaligndone_out),
        .gt2_txphinit_in(gt2_txphinit_in),
        .gt2_txphinitdone_out(gt2_txphinitdone_out),
        .gt2_txpmareset_in(gt2_txpmareset_in),
        .gt2_txpolarity_in(gt2_txpolarity_in),
        .gt2_txpostcursor_in(gt2_txpostcursor_in),
        .gt2_txprbsforceerr_in(gt2_txprbsforceerr_in),
        .gt2_txprbssel_in(gt2_txprbssel_in),
        .gt2_txprecursor_in(gt2_txprecursor_in),
        .gt3_dmonitorout_out(gt3_dmonitorout_out),
        .gt3_drp_busy(gt3_drp_busy),
        .gt3_drpaddr(gt3_drpaddr),
        .gt3_drpdi(gt3_drpdi),
        .gt3_drpdo(gt3_drpdo),
        .gt3_drpen(gt3_drpen),
        .gt3_drprdy(gt3_drprdy),
        .gt3_drpwe(gt3_drpwe),
        .gt3_eyescandataerror_out(gt3_eyescandataerror_out),
        .gt3_eyescanreset_in(gt3_eyescanreset_in),
        .gt3_eyescantrigger_in(gt3_eyescantrigger_in),
        .gt3_loopback_in(gt3_loopback_in),
        .gt3_rxcdrhold_in(gt3_rxcdrhold_in),
        .gt3_rxchbonden_in(uclk_mgt_enchansync_reg),
        .gt3_rxcommadet_out(gt3_rxcommadet_out),
        .gt3_rxlpmhfhold_in(gt3_rxlpmhfhold_in),
        .gt3_rxlpmhfovrden_in(gt3_rxlpmhfovrden_in),
        .gt3_rxlpmlfhold_in(gt3_rxlpmlfhold_in),
        .gt3_rxlpmlfovrden_in(gt3_rxlpmlfovrden_in),
        .gt3_rxlpmreset_in(gt3_rxlpmreset_in),
        .gt3_rxpcsreset_in(gt3_rxpcsreset_in),
        .gt3_rxpmareset_in(gt3_rxpmareset),
        .gt3_rxpmaresetdone_out(gt3_rxpmaresetdone_out),
        .gt3_rxpolarity_in(gt3_rxpolarity_in),
        .gt3_rxprbscntreset_in(gt3_rxprbscntreset_in),
        .gt3_rxprbserr_out(gt3_rxprbserr_out),
        .gt3_rxprbssel_in(gt3_rxprbssel_in),
        .gt3_rxrate_in(gt3_rxrate_in),
        .gt3_rxresetdone_out(gt3_rxresetdone_out),
        .gt3_txdiffctrl_in(gt3_txdiffctrl_in),
        .gt3_txdlysreset_in(gt3_txdlysreset_in),
        .gt3_txdlysresetdone_out(gt3_txdlysresetdone_out),
        .gt3_txelecidle_in(uclk_mgt_powerdown_r),
        .gt3_txpcsreset_in(gt3_txpcsreset_in),
        .gt3_txphalign_in(gt3_txphalign_in),
        .gt3_txphaligndone_out(gt3_txphaligndone_out),
        .gt3_txphinit_in(gt3_txphinit_in),
        .gt3_txphinitdone_out(gt3_txphinitdone_out),
        .gt3_txpmareset_in(gt3_txpmareset_in),
        .gt3_txpolarity_in(gt3_txpolarity_in),
        .gt3_txpostcursor_in(gt3_txpostcursor_in),
        .gt3_txprbsforceerr_in(gt3_txprbsforceerr_in),
        .gt3_txprbssel_in(gt3_txprbssel_in),
        .gt3_txprecursor_in(gt3_txprecursor_in),
        .gt3_txuserrdy_in(clk156_lock),
        .gt_qplllock_out(gt_qplllock_out),
        .mgt_enable_align({gt0_rxmcommaalignen_in,gt1_rxmcommaalignen_in,gt3_rxmcommaalignen_in,xaui_0_core_n_147}),
        .mgt_txcharisk({gt0_txcharisk_in,gt1_txcharisk_in,gt3_txcharisk_in,xaui_0_core_n_142,xaui_0_core_n_143}),
        .mgt_txdata({gt0_txdata_in,gt1_txdata_in,gt3_txdata_in,xaui_0_core_n_120,xaui_0_core_n_121,xaui_0_core_n_122,xaui_0_core_n_123,xaui_0_core_n_124,xaui_0_core_n_125,xaui_0_core_n_126,xaui_0_core_n_127,xaui_0_core_n_128,xaui_0_core_n_129,xaui_0_core_n_130,xaui_0_core_n_131,xaui_0_core_n_132,xaui_0_core_n_133,xaui_0_core_n_134,xaui_0_core_n_135}),
        .refclk(refclk),
        .uclk_mgt_loopback_reg(uclk_mgt_loopback_reg),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset),
        .xaui_rx_l0_n(xaui_rx_l0_n),
        .xaui_rx_l0_p(xaui_rx_l0_p),
        .xaui_rx_l1_n(xaui_rx_l1_n),
        .xaui_rx_l1_p(xaui_rx_l1_p),
        .xaui_rx_l2_n(xaui_rx_l2_n),
        .xaui_rx_l2_p(xaui_rx_l2_p),
        .xaui_rx_l3_n(xaui_rx_l3_n),
        .xaui_rx_l3_p(xaui_rx_l3_p),
        .xaui_tx_l0_n(xaui_tx_l0_n),
        .xaui_tx_l0_p(xaui_tx_l0_p),
        .xaui_tx_l1_n(xaui_tx_l1_n),
        .xaui_tx_l1_p(xaui_tx_l1_p),
        .xaui_tx_l2_n(xaui_tx_l2_n),
        .xaui_tx_l2_p(xaui_tx_l2_p),
        .xaui_tx_l3_n(xaui_tx_l3_n),
        .xaui_tx_l3_p(xaui_tx_l3_p));
  FDRE \mgt_codecomma_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxchariscomma_out[0]),
        .Q(mgt_codecomma[0]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxchariscomma_out[1]),
        .Q(mgt_codecomma[1]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxchariscomma_out[0]),
        .Q(mgt_codecomma[2]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxchariscomma_out[1]),
        .Q(mgt_codecomma[3]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxchariscomma_out[0]),
        .Q(mgt_codecomma[4]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxchariscomma_out[1]),
        .Q(mgt_codecomma[5]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxchariscomma_out[0]),
        .Q(mgt_codecomma[6]),
        .R(1'b0));
  FDRE \mgt_codecomma_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxchariscomma_out[1]),
        .Q(mgt_codecomma[7]),
        .R(1'b0));
  xaui_0_xaui_0_pulse_stretcher mgt_rx_reset_pulse_stretcher_i
       (.AR(uclk_mgt_rx_reset),
        .dclk(dclk),
        .dclk_mgt_rx_reset_inprocess(dclk_mgt_rx_reset_inprocess),
        .out(dclk_mgt_rx_reset_stretched),
        .\sync_r_reg[0]_0 (mgt_rx_reset_pulse_stretcher_i_n_1));
  FDRE \mgt_rxcharisk_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxcharisk_out[0]),
        .Q(mgt_rxcharisk[0]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxcharisk_out[1]),
        .Q(mgt_rxcharisk[1]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxcharisk_out[0]),
        .Q(mgt_rxcharisk[2]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxcharisk_out[1]),
        .Q(mgt_rxcharisk[3]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxcharisk_out[0]),
        .Q(mgt_rxcharisk[4]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxcharisk_out[1]),
        .Q(mgt_rxcharisk[5]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxcharisk_out[0]),
        .Q(mgt_rxcharisk[6]),
        .R(1'b0));
  FDRE \mgt_rxcharisk_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxcharisk_out[1]),
        .Q(mgt_rxcharisk[7]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[0]),
        .Q(mgt_rxdata[0]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[10] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[10]),
        .Q(mgt_rxdata[10]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[11] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[11]),
        .Q(mgt_rxdata[11]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[12] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[12]),
        .Q(mgt_rxdata[12]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[13] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[13]),
        .Q(mgt_rxdata[13]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[14] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[14]),
        .Q(mgt_rxdata[14]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[15] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[15]),
        .Q(mgt_rxdata[15]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[16] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[0]),
        .Q(mgt_rxdata[16]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[17] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[1]),
        .Q(mgt_rxdata[17]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[18] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[2]),
        .Q(mgt_rxdata[18]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[19] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[3]),
        .Q(mgt_rxdata[19]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[1]),
        .Q(mgt_rxdata[1]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[20] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[4]),
        .Q(mgt_rxdata[20]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[21] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[5]),
        .Q(mgt_rxdata[21]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[22] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[6]),
        .Q(mgt_rxdata[22]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[23] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[7]),
        .Q(mgt_rxdata[23]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[24] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[8]),
        .Q(mgt_rxdata[24]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[25] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[9]),
        .Q(mgt_rxdata[25]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[26] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[10]),
        .Q(mgt_rxdata[26]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[27] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[11]),
        .Q(mgt_rxdata[27]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[28] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[12]),
        .Q(mgt_rxdata[28]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[29] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[13]),
        .Q(mgt_rxdata[29]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[2]),
        .Q(mgt_rxdata[2]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[30] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[14]),
        .Q(mgt_rxdata[30]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[31] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdata_out[15]),
        .Q(mgt_rxdata[31]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[32] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[0]),
        .Q(mgt_rxdata[32]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[33] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[1]),
        .Q(mgt_rxdata[33]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[34] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[2]),
        .Q(mgt_rxdata[34]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[35] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[3]),
        .Q(mgt_rxdata[35]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[36] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[4]),
        .Q(mgt_rxdata[36]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[37] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[5]),
        .Q(mgt_rxdata[37]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[38] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[6]),
        .Q(mgt_rxdata[38]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[39] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[7]),
        .Q(mgt_rxdata[39]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[3]),
        .Q(mgt_rxdata[3]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[40] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[8]),
        .Q(mgt_rxdata[40]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[41] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[9]),
        .Q(mgt_rxdata[41]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[42] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[10]),
        .Q(mgt_rxdata[42]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[43] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[11]),
        .Q(mgt_rxdata[43]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[44] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[12]),
        .Q(mgt_rxdata[44]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[45] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[13]),
        .Q(mgt_rxdata[45]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[46] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[14]),
        .Q(mgt_rxdata[46]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[47] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdata_out[15]),
        .Q(mgt_rxdata[47]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[48] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[0]),
        .Q(mgt_rxdata[48]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[49] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[1]),
        .Q(mgt_rxdata[49]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[4]),
        .Q(mgt_rxdata[4]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[50] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[2]),
        .Q(mgt_rxdata[50]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[51] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[3]),
        .Q(mgt_rxdata[51]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[52] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[4]),
        .Q(mgt_rxdata[52]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[53] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[5]),
        .Q(mgt_rxdata[53]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[54] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[6]),
        .Q(mgt_rxdata[54]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[55] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[7]),
        .Q(mgt_rxdata[55]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[56] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[8]),
        .Q(mgt_rxdata[56]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[57] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[9]),
        .Q(mgt_rxdata[57]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[58] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[10]),
        .Q(mgt_rxdata[58]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[59] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[11]),
        .Q(mgt_rxdata[59]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[5]),
        .Q(mgt_rxdata[5]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[60] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[12]),
        .Q(mgt_rxdata[60]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[61] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[13]),
        .Q(mgt_rxdata[61]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[62] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[14]),
        .Q(mgt_rxdata[62]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[63] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdata_out[15]),
        .Q(mgt_rxdata[63]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[6]),
        .Q(mgt_rxdata[6]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[7]),
        .Q(mgt_rxdata[7]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[8] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[8]),
        .Q(mgt_rxdata[8]),
        .R(1'b0));
  FDRE \mgt_rxdata_reg_reg[9] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdata_out[9]),
        .Q(mgt_rxdata[9]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdisperr_out[0]),
        .Q(mgt_rxdisperr_reg[0]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxdisperr_out[1]),
        .Q(mgt_rxdisperr_reg[1]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdisperr_out[0]),
        .Q(mgt_rxdisperr_reg[2]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxdisperr_out[1]),
        .Q(mgt_rxdisperr_reg[3]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdisperr_out[0]),
        .Q(mgt_rxdisperr_reg[4]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxdisperr_out[1]),
        .Q(mgt_rxdisperr_reg[5]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdisperr_out[0]),
        .Q(mgt_rxdisperr_reg[6]),
        .R(1'b0));
  FDRE \mgt_rxdisperr_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxdisperr_out[1]),
        .Q(mgt_rxdisperr_reg[7]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxnotintable_out[0]),
        .Q(mgt_rxnotintable_reg[0]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxnotintable_out[1]),
        .Q(mgt_rxnotintable_reg[1]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxnotintable_out[0]),
        .Q(mgt_rxnotintable_reg[2]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxnotintable_out[1]),
        .Q(mgt_rxnotintable_reg[3]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxnotintable_out[0]),
        .Q(mgt_rxnotintable_reg[4]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxnotintable_out[1]),
        .Q(mgt_rxnotintable_reg[5]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxnotintable_out[0]),
        .Q(mgt_rxnotintable_reg[6]),
        .R(1'b0));
  FDRE \mgt_rxnotintable_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxnotintable_out[1]),
        .Q(mgt_rxnotintable_reg[7]),
        .R(1'b0));
  xaui_0_xaui_0_ff_synchronizer mgt_rxresetdone_0_sync_i
       (.dclk(dclk),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .out(dclk_mgt_rxresetdone[0]));
  xaui_0_xaui_0_ff_synchronizer_0 mgt_rxresetdone_1_sync_i
       (.dclk(dclk),
        .dclk_mgt_rx_reset_inprocess0(dclk_mgt_rx_reset_inprocess0),
        .dclk_mgt_rx_reset_waiting_resetdone(dclk_mgt_rx_reset_waiting_resetdone),
        .dclk_mgt_rxresetdone({dclk_mgt_rxresetdone[3:2],dclk_mgt_rxresetdone[0]}),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .out(dclk_mgt_rxresetdone[1]));
  xaui_0_xaui_0_ff_synchronizer_1 mgt_rxresetdone_2_sync_i
       (.dclk(dclk),
        .gt2_rxresetdone_out(gt2_rxresetdone_out),
        .out(dclk_mgt_rxresetdone[2]));
  xaui_0_xaui_0_ff_synchronizer_2 mgt_rxresetdone_3_sync_i
       (.dclk(dclk),
        .dclk_mgt_rx_reset_inprocess(dclk_mgt_rx_reset_inprocess),
        .dclk_mgt_rx_reset_inprocess_reg(mgt_rxresetdone_3_sync_i_n_1),
        .dclk_mgt_rx_reset_waiting_resetdone(dclk_mgt_rx_reset_waiting_resetdone),
        .dclk_mgt_rxresetdone(dclk_mgt_rxresetdone[2:0]),
        .gt3_rxresetdone_out(gt3_rxresetdone_out),
        .out(dclk_mgt_rxresetdone[3]));
  xaui_0_xaui_0_ff_synchronizer_3 plllocked_sync_i
       (.CLK(clk156_out),
        .gt_qplllock_out(gt_qplllock_out),
        .out(clk156_lock),
        .uclk_mgt_rx_reset5(uclk_mgt_rx_reset5));
  xaui_0_xaui_0_ff_synchronizer_4 reset_count_done_sync_i
       (.CLK(clk156_out),
        .Q(uclk_mgt_txresetdone_reg),
        .S(p_0_in),
        .out(reset156),
        .\sync1_r_reg[0]_0 (done),
        .uclk_cbm_rx_reset(uclk_cbm_rx_reset),
        .uclk_loopback_reset(uclk_loopback_reset),
        .uclk_mgt_powerdown_falling(uclk_mgt_powerdown_falling),
        .uclk_mgt_rx_reset0(uclk_mgt_rx_reset0),
        .uclk_mgt_tx_reset0(uclk_mgt_tx_reset0),
        .uclk_mgt_tx_reset_reg(clk156_lock),
        .uclk_txsync_start_phase_align_reg(reset_count_done_sync_i_n_0),
        .uclk_txsync_start_phase_align_reg_0(uclk_txsync_start_phase_align_reg_n_0));
  xaui_0_xaui_0_reset_counter reset_counter_i
       (.AR(gt0_pll0reset_in),
        .D(done),
        .\count_reg[7]_0 (reset_counter_i_n_1),
        .\count_reg[7]_1 (reset_counter_i_n_2),
        .dclk(dclk),
        .dclk_mgt_rx_reset_inprocess(dclk_mgt_rx_reset_inprocess),
        .dclk_mgt_rx_reset_inprocess0(dclk_mgt_rx_reset_inprocess0),
        .dclk_mgt_rx_reset_inprocess_reg(dclk_mgt_rx_reset_stretched),
        .dclk_mgt_rx_reset_waiting_resetdone_reg(mgt_rxresetdone_3_sync_i_n_1),
        .out(data_out));
  xaui_0_xaui_0_ff_synchronizer_5 reset_sync_i
       (.dclk(dclk),
        .out(data_out),
        .reset(reset));
  xaui_0_xaui_0_ff_synchronizer_6 rxpmareset_sync0_i
       (.dclk(dclk),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .out(gt0_rxpmareset));
  xaui_0_xaui_0_ff_synchronizer_7 rxpmareset_sync1_i
       (.dclk(dclk),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .out(gt1_rxpmareset));
  xaui_0_xaui_0_ff_synchronizer_8 rxpmareset_sync2_i
       (.dclk(dclk),
        .gt2_rxpmareset_in(gt2_rxpmareset_in),
        .out(gt2_rxpmareset));
  xaui_0_xaui_0_ff_synchronizer_9 rxpmareset_sync3_i
       (.dclk(dclk),
        .gt3_rxpmareset_in(gt3_rxpmareset_in),
        .out(gt3_rxpmareset));
  LUT2 #(
    .INIT(4'hE)) 
    rxprbs_in_use_i_1
       (.I0(rxprbs_in_use_i_2_n_0),
        .I1(rxprbs_in_use_i_3_n_0),
        .O(rxprbs_in_use0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    rxprbs_in_use_i_2
       (.I0(gt0_rxprbssel_in[2]),
        .I1(gt0_rxprbssel_in[0]),
        .I2(gt0_rxprbssel_in[1]),
        .I3(gt3_rxprbssel_in[2]),
        .I4(gt3_rxprbssel_in[0]),
        .I5(gt3_rxprbssel_in[1]),
        .O(rxprbs_in_use_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    rxprbs_in_use_i_3
       (.I0(gt2_rxprbssel_in[2]),
        .I1(gt2_rxprbssel_in[0]),
        .I2(gt2_rxprbssel_in[1]),
        .I3(gt1_rxprbssel_in[2]),
        .I4(gt1_rxprbssel_in[0]),
        .I5(gt1_rxprbssel_in[1]),
        .O(rxprbs_in_use_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxprbs_in_use_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(rxprbs_in_use0),
        .Q(rxprbs_in_use),
        .R(1'b0));
  xaui_0_xaui_0_ff_synchronizer_10 signal_detect_0_sync_i
       (.CLK(clk156_out),
        .out(uclk_signal_detect_reord[3]),
        .signal_detect(signal_detect[0]));
  xaui_0_xaui_0_ff_synchronizer_11 signal_detect_1_sync_i
       (.CLK(clk156_out),
        .out(uclk_signal_detect_reord[2]),
        .signal_detect(signal_detect[1]));
  xaui_0_xaui_0_ff_synchronizer_12 signal_detect_2_sync_i
       (.CLK(clk156_out),
        .out(uclk_signal_detect_reord[0]),
        .signal_detect(signal_detect[2]));
  xaui_0_xaui_0_ff_synchronizer_13 signal_detect_3_sync_i
       (.CLK(clk156_out),
        .out(uclk_signal_detect_reord[1]),
        .signal_detect(signal_detect[3]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual txsync_i
       (.CLK(clk156_out),
        .\TXDLYSRESET_reg[3]_0 (uclk_txsync_start_phase_align_reg_n_0),
        .debug(debug[0]),
        .gt0_txdlyen_in(txsync_i_n_1),
        .gt0_txdlysreset_in(txsync_i_n_6),
        .gt0_txdlysresetdone_out(gt0_txdlysresetdone_out),
        .gt0_txphalign_in(txsync_i_n_11),
        .gt0_txphaligndone_out(gt0_txphaligndone_out),
        .gt0_txphinit_in(txsync_i_n_7),
        .gt0_txphinitdone_out(gt0_txphinitdone_out),
        .gt1_txdlysreset_in(gt1_txdlysreset_in),
        .gt1_txdlysresetdone_out(gt1_txdlysresetdone_out),
        .gt1_txphalign_in(gt1_txphalign_in),
        .gt1_txphaligndone_out(gt1_txphaligndone_out),
        .gt1_txphinit_in(gt1_txphinit_in),
        .gt1_txphinitdone_out(gt1_txphinitdone_out),
        .gt2_txdlysreset_in(gt2_txdlysreset_in),
        .gt2_txdlysresetdone_out(gt2_txdlysresetdone_out),
        .gt2_txphalign_in(gt2_txphalign_in),
        .gt2_txphaligndone_out(gt2_txphaligndone_out),
        .gt2_txphinit_in(gt2_txphinit_in),
        .gt2_txphinitdone_out(gt2_txphinitdone_out),
        .gt3_txdlysreset_in(gt3_txdlysreset_in),
        .gt3_txdlysresetdone_out(gt3_txdlysresetdone_out),
        .gt3_txphalign_in(gt3_txphalign_in),
        .gt3_txphaligndone_out(gt3_txphaligndone_out),
        .gt3_txphinit_in(gt3_txphinit_in),
        .gt3_txphinitdone_out(gt3_txphinitdone_out),
        .mgt_tx_reset(txsync_i_n_2),
        .\stretch_r_reg[1] (gt_wrapper_i_n_64),
        .\stretch_r_reg[1]_0 (gt_wrapper_i_n_66),
        .\stretch_r_reg[1]_1 (gt_wrapper_i_n_68),
        .\stretch_r_reg[1]_2 (gt_wrapper_i_n_70),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \uclk_chbond_counter[0]_i_1 
       (.I0(\uclk_chbond_counter[0]_i_3_n_0 ),
        .I1(debug[5]),
        .I2(rxprbs_in_use),
        .I3(uclk_cbm_rx_reset),
        .O(uclk_chbond_counter));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \uclk_chbond_counter[0]_i_3 
       (.I0(debug[3]),
        .I1(debug[2]),
        .I2(debug[1]),
        .I3(debug[4]),
        .O(\uclk_chbond_counter[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \uclk_chbond_counter[0]_i_4 
       (.I0(\uclk_chbond_counter_reg_n_0_[0] ),
        .O(\uclk_chbond_counter[0]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[0]_i_2_n_7 ),
        .Q(\uclk_chbond_counter_reg_n_0_[0] ),
        .R(uclk_chbond_counter));
  CARRY4 \uclk_chbond_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\uclk_chbond_counter_reg[0]_i_2_n_0 ,\uclk_chbond_counter_reg[0]_i_2_n_1 ,\uclk_chbond_counter_reg[0]_i_2_n_2 ,\uclk_chbond_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\uclk_chbond_counter_reg[0]_i_2_n_4 ,\uclk_chbond_counter_reg[0]_i_2_n_5 ,\uclk_chbond_counter_reg[0]_i_2_n_6 ,\uclk_chbond_counter_reg[0]_i_2_n_7 }),
        .S({\uclk_chbond_counter_reg_n_0_[3] ,\uclk_chbond_counter_reg_n_0_[2] ,\uclk_chbond_counter_reg_n_0_[1] ,\uclk_chbond_counter[0]_i_4_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[10] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[8]_i_1_n_5 ),
        .Q(\uclk_chbond_counter_reg_n_0_[10] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[11] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[8]_i_1_n_4 ),
        .Q(\uclk_chbond_counter_reg_n_0_[11] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[12] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[12]_i_1_n_7 ),
        .Q(\uclk_chbond_counter_reg_n_0_[12] ),
        .R(uclk_chbond_counter));
  CARRY4 \uclk_chbond_counter_reg[12]_i_1 
       (.CI(\uclk_chbond_counter_reg[8]_i_1_n_0 ),
        .CO({\NLW_uclk_chbond_counter_reg[12]_i_1_CO_UNCONNECTED [3],\uclk_chbond_counter_reg[12]_i_1_n_1 ,\uclk_chbond_counter_reg[12]_i_1_n_2 ,\uclk_chbond_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_chbond_counter_reg[12]_i_1_n_4 ,\uclk_chbond_counter_reg[12]_i_1_n_5 ,\uclk_chbond_counter_reg[12]_i_1_n_6 ,\uclk_chbond_counter_reg[12]_i_1_n_7 }),
        .S({uclk_cbm_rx_reset,\uclk_chbond_counter_reg_n_0_[14] ,\uclk_chbond_counter_reg_n_0_[13] ,\uclk_chbond_counter_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[13] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[12]_i_1_n_6 ),
        .Q(\uclk_chbond_counter_reg_n_0_[13] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[14] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[12]_i_1_n_5 ),
        .Q(\uclk_chbond_counter_reg_n_0_[14] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[15] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[12]_i_1_n_4 ),
        .Q(uclk_cbm_rx_reset),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[0]_i_2_n_6 ),
        .Q(\uclk_chbond_counter_reg_n_0_[1] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[0]_i_2_n_5 ),
        .Q(\uclk_chbond_counter_reg_n_0_[2] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[0]_i_2_n_4 ),
        .Q(\uclk_chbond_counter_reg_n_0_[3] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[4]_i_1_n_7 ),
        .Q(\uclk_chbond_counter_reg_n_0_[4] ),
        .R(uclk_chbond_counter));
  CARRY4 \uclk_chbond_counter_reg[4]_i_1 
       (.CI(\uclk_chbond_counter_reg[0]_i_2_n_0 ),
        .CO({\uclk_chbond_counter_reg[4]_i_1_n_0 ,\uclk_chbond_counter_reg[4]_i_1_n_1 ,\uclk_chbond_counter_reg[4]_i_1_n_2 ,\uclk_chbond_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_chbond_counter_reg[4]_i_1_n_4 ,\uclk_chbond_counter_reg[4]_i_1_n_5 ,\uclk_chbond_counter_reg[4]_i_1_n_6 ,\uclk_chbond_counter_reg[4]_i_1_n_7 }),
        .S({\uclk_chbond_counter_reg_n_0_[7] ,\uclk_chbond_counter_reg_n_0_[6] ,\uclk_chbond_counter_reg_n_0_[5] ,\uclk_chbond_counter_reg_n_0_[4] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[4]_i_1_n_6 ),
        .Q(\uclk_chbond_counter_reg_n_0_[5] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[4]_i_1_n_5 ),
        .Q(\uclk_chbond_counter_reg_n_0_[6] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[4]_i_1_n_4 ),
        .Q(\uclk_chbond_counter_reg_n_0_[7] ),
        .R(uclk_chbond_counter));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[8] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[8]_i_1_n_7 ),
        .Q(\uclk_chbond_counter_reg_n_0_[8] ),
        .R(uclk_chbond_counter));
  CARRY4 \uclk_chbond_counter_reg[8]_i_1 
       (.CI(\uclk_chbond_counter_reg[4]_i_1_n_0 ),
        .CO({\uclk_chbond_counter_reg[8]_i_1_n_0 ,\uclk_chbond_counter_reg[8]_i_1_n_1 ,\uclk_chbond_counter_reg[8]_i_1_n_2 ,\uclk_chbond_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_chbond_counter_reg[8]_i_1_n_4 ,\uclk_chbond_counter_reg[8]_i_1_n_5 ,\uclk_chbond_counter_reg[8]_i_1_n_6 ,\uclk_chbond_counter_reg[8]_i_1_n_7 }),
        .S({\uclk_chbond_counter_reg_n_0_[11] ,\uclk_chbond_counter_reg_n_0_[10] ,\uclk_chbond_counter_reg_n_0_[9] ,\uclk_chbond_counter_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_chbond_counter_reg[9] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_chbond_counter_reg[8]_i_1_n_6 ),
        .Q(\uclk_chbond_counter_reg_n_0_[9] ),
        .R(uclk_chbond_counter));
  LUT2 #(
    .INIT(4'h2)) 
    uclk_loopback_reset_i_1
       (.I0(uclk_mgt_loopback_reg),
        .I1(uclk_mgt_loopback),
        .O(uclk_loopback_reset0));
  FDRE uclk_loopback_reset_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_loopback_reset0),
        .Q(uclk_loopback_reset),
        .R(1'b0));
  FDRE uclk_mgt_enchansync_reg_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_enchansync),
        .Q(uclk_mgt_enchansync_reg),
        .R(1'b0));
  FDRE uclk_mgt_loopback_reg_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_loopback),
        .Q(uclk_mgt_loopback_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    uclk_mgt_powerdown_falling_i_1
       (.I0(uclk_mgt_powerdown_r),
        .I1(uclk_mgt_powerdown),
        .O(uclk_mgt_powerdown_falling0));
  FDCE uclk_mgt_powerdown_falling_reg
       (.C(clk156_out),
        .CE(1'b1),
        .CLR(reset156),
        .D(uclk_mgt_powerdown_falling0),
        .Q(uclk_mgt_powerdown_falling));
  FDRE uclk_mgt_powerdown_r_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_powerdown),
        .Q(uclk_mgt_powerdown_r),
        .R(1'b0));
  FDRE uclk_mgt_rx_reset_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_rx_reset0),
        .Q(uclk_mgt_rx_reset),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFEEEEE)) 
    \uclk_mgt_rxbuf_reset[0]_i_1 
       (.I0(\uclk_mgt_rxbuf_reset[0]_i_2_n_0 ),
        .I1(\uclk_mgt_rxbuf_reset[0]_i_3_n_0 ),
        .I2(\uclk_mgt_rxbufstatus_reg_reg_n_0_[7] ),
        .I3(\uclk_mgt_rxbufstatus_reg_reg_n_0_[6] ),
        .I4(\uclk_mgt_rxbufstatus_reg_reg_n_0_[8] ),
        .O(uclk_mgt_rxbuf_reset0));
  LUT4 #(
    .INIT(16'hAEEA)) 
    \uclk_mgt_rxbuf_reset[0]_i_2 
       (.I0(uclk_cbm_rx_reset),
        .I1(\uclk_mgt_rxbufstatus_reg_reg_n_0_[2] ),
        .I2(\uclk_mgt_rxbufstatus_reg_reg_n_0_[0] ),
        .I3(\uclk_mgt_rxbufstatus_reg_reg_n_0_[1] ),
        .O(\uclk_mgt_rxbuf_reset[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2828FF28FF282828)) 
    \uclk_mgt_rxbuf_reset[0]_i_3 
       (.I0(bufStatus[2]),
        .I1(bufStatus[0]),
        .I2(bufStatus[1]),
        .I3(\uclk_mgt_rxbufstatus_reg_reg_n_0_[11] ),
        .I4(\uclk_mgt_rxbufstatus_reg_reg_n_0_[9] ),
        .I5(\uclk_mgt_rxbufstatus_reg_reg_n_0_[10] ),
        .O(\uclk_mgt_rxbuf_reset[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_mgt_rxbuf_reset_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_rxbuf_reset0),
        .Q(\uclk_mgt_rxbuf_reset_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxbufstatus_out[0]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[10] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxbufstatus_out[1]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[11] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxbufstatus_out[2]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxbufstatus_out[1]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_rxbufstatus_out[2]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxbufstatus_out[0]),
        .Q(bufStatus[0]),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxbufstatus_out[1]),
        .Q(bufStatus[1]),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_rxbufstatus_out[2]),
        .Q(bufStatus[2]),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxbufstatus_out[0]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxbufstatus_out[1]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[8] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_rxbufstatus_out[2]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \uclk_mgt_rxbufstatus_reg_reg[9] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_rxbufstatus_out[0]),
        .Q(\uclk_mgt_rxbufstatus_reg_reg_n_0_[9] ),
        .R(1'b0));
  FDRE uclk_mgt_tx_reset_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(uclk_mgt_tx_reset0),
        .Q(uclk_mgt_tx_reset),
        .R(1'b0));
  FDRE \uclk_mgt_txresetdone_reg_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt1_txresetdone_out),
        .Q(uclk_mgt_txresetdone_reg[0]),
        .R(1'b0));
  FDRE \uclk_mgt_txresetdone_reg_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt0_txresetdone_out),
        .Q(uclk_mgt_txresetdone_reg[1]),
        .R(1'b0));
  FDRE \uclk_mgt_txresetdone_reg_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt2_txresetdone_out),
        .Q(uclk_mgt_txresetdone_reg[2]),
        .R(1'b0));
  FDRE \uclk_mgt_txresetdone_reg_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(gt3_txresetdone_out),
        .Q(uclk_mgt_txresetdone_reg[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \uclk_sync_counter[0]_i_1 
       (.I0(\uclk_chbond_counter[0]_i_3_n_0 ),
        .I1(uclk_mgt_powerdown),
        .I2(rxprbs_in_use),
        .I3(p_0_in),
        .O(\uclk_sync_counter[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \uclk_sync_counter[0]_i_3 
       (.I0(\uclk_sync_counter_reg_n_0_[0] ),
        .O(\uclk_sync_counter[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[0] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[0]_i_2_n_7 ),
        .Q(\uclk_sync_counter_reg_n_0_[0] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  CARRY4 \uclk_sync_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\uclk_sync_counter_reg[0]_i_2_n_0 ,\uclk_sync_counter_reg[0]_i_2_n_1 ,\uclk_sync_counter_reg[0]_i_2_n_2 ,\uclk_sync_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\uclk_sync_counter_reg[0]_i_2_n_4 ,\uclk_sync_counter_reg[0]_i_2_n_5 ,\uclk_sync_counter_reg[0]_i_2_n_6 ,\uclk_sync_counter_reg[0]_i_2_n_7 }),
        .S({\uclk_sync_counter_reg_n_0_[3] ,\uclk_sync_counter_reg_n_0_[2] ,\uclk_sync_counter_reg_n_0_[1] ,\uclk_sync_counter[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[10] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[8]_i_1_n_5 ),
        .Q(\uclk_sync_counter_reg_n_0_[10] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[11] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[8]_i_1_n_4 ),
        .Q(\uclk_sync_counter_reg_n_0_[11] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[12] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[12]_i_1_n_7 ),
        .Q(\uclk_sync_counter_reg_n_0_[12] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  CARRY4 \uclk_sync_counter_reg[12]_i_1 
       (.CI(\uclk_sync_counter_reg[8]_i_1_n_0 ),
        .CO({\NLW_uclk_sync_counter_reg[12]_i_1_CO_UNCONNECTED [3],\uclk_sync_counter_reg[12]_i_1_n_1 ,\uclk_sync_counter_reg[12]_i_1_n_2 ,\uclk_sync_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_sync_counter_reg[12]_i_1_n_4 ,\uclk_sync_counter_reg[12]_i_1_n_5 ,\uclk_sync_counter_reg[12]_i_1_n_6 ,\uclk_sync_counter_reg[12]_i_1_n_7 }),
        .S({p_0_in,\uclk_sync_counter_reg_n_0_[14] ,\uclk_sync_counter_reg_n_0_[13] ,\uclk_sync_counter_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[13] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[12]_i_1_n_6 ),
        .Q(\uclk_sync_counter_reg_n_0_[13] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[14] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[12]_i_1_n_5 ),
        .Q(\uclk_sync_counter_reg_n_0_[14] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[15] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[12]_i_1_n_4 ),
        .Q(p_0_in),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[1] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[0]_i_2_n_6 ),
        .Q(\uclk_sync_counter_reg_n_0_[1] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[2] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[0]_i_2_n_5 ),
        .Q(\uclk_sync_counter_reg_n_0_[2] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[3] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[0]_i_2_n_4 ),
        .Q(\uclk_sync_counter_reg_n_0_[3] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[4] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[4]_i_1_n_7 ),
        .Q(\uclk_sync_counter_reg_n_0_[4] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  CARRY4 \uclk_sync_counter_reg[4]_i_1 
       (.CI(\uclk_sync_counter_reg[0]_i_2_n_0 ),
        .CO({\uclk_sync_counter_reg[4]_i_1_n_0 ,\uclk_sync_counter_reg[4]_i_1_n_1 ,\uclk_sync_counter_reg[4]_i_1_n_2 ,\uclk_sync_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_sync_counter_reg[4]_i_1_n_4 ,\uclk_sync_counter_reg[4]_i_1_n_5 ,\uclk_sync_counter_reg[4]_i_1_n_6 ,\uclk_sync_counter_reg[4]_i_1_n_7 }),
        .S({\uclk_sync_counter_reg_n_0_[7] ,\uclk_sync_counter_reg_n_0_[6] ,\uclk_sync_counter_reg_n_0_[5] ,\uclk_sync_counter_reg_n_0_[4] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[5] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[4]_i_1_n_6 ),
        .Q(\uclk_sync_counter_reg_n_0_[5] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[6] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[4]_i_1_n_5 ),
        .Q(\uclk_sync_counter_reg_n_0_[6] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[7] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[4]_i_1_n_4 ),
        .Q(\uclk_sync_counter_reg_n_0_[7] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[8] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[8]_i_1_n_7 ),
        .Q(\uclk_sync_counter_reg_n_0_[8] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  CARRY4 \uclk_sync_counter_reg[8]_i_1 
       (.CI(\uclk_sync_counter_reg[4]_i_1_n_0 ),
        .CO({\uclk_sync_counter_reg[8]_i_1_n_0 ,\uclk_sync_counter_reg[8]_i_1_n_1 ,\uclk_sync_counter_reg[8]_i_1_n_2 ,\uclk_sync_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\uclk_sync_counter_reg[8]_i_1_n_4 ,\uclk_sync_counter_reg[8]_i_1_n_5 ,\uclk_sync_counter_reg[8]_i_1_n_6 ,\uclk_sync_counter_reg[8]_i_1_n_7 }),
        .S({\uclk_sync_counter_reg_n_0_[11] ,\uclk_sync_counter_reg_n_0_[10] ,\uclk_sync_counter_reg_n_0_[9] ,\uclk_sync_counter_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \uclk_sync_counter_reg[9] 
       (.C(clk156_out),
        .CE(1'b1),
        .D(\uclk_sync_counter_reg[8]_i_1_n_6 ),
        .Q(\uclk_sync_counter_reg_n_0_[9] ),
        .R(\uclk_sync_counter[0]_i_1_n_0 ));
  FDRE uclk_txsync_start_phase_align_reg
       (.C(clk156_out),
        .CE(1'b1),
        .D(reset_count_done_sync_i_n_0),
        .Q(uclk_txsync_start_phase_align_reg_n_0),
        .R(1'b0));
  (* C_FAMILY = "artix7" *) 
  (* C_HAS_MDIO = "FALSE" *) 
  (* c_is_dxaui = "FALSE" *) 
  xaui_0_xaui_v12_3_6_top xaui_0_core
       (.align_status(debug[5]),
        .configuration_vector(configuration_vector),
        .mdc(1'b0),
        .mdio_in(1'b0),
        .mdio_out(NLW_xaui_0_core_mdio_out_UNCONNECTED),
        .mdio_tri(NLW_xaui_0_core_mdio_tri_UNCONNECTED),
        .mgt_codecomma(mgt_codecomma),
        .mgt_codevalid(mgt_codevalid),
        .mgt_enable_align({gt0_rxmcommaalignen_in,gt1_rxmcommaalignen_in,gt3_rxmcommaalignen_in,xaui_0_core_n_147}),
        .mgt_enchansync(uclk_mgt_enchansync),
        .mgt_loopback(uclk_mgt_loopback),
        .mgt_powerdown(uclk_mgt_powerdown),
        .mgt_rx_reset(core_mgt_rx_reset_reord),
        .mgt_rxcharisk(mgt_rxcharisk),
        .mgt_rxdata(mgt_rxdata),
        .mgt_rxlock({clk156_lock,1'b0,1'b0,1'b0}),
        .mgt_tx_reset({1'b0,txsync_i_n_2,1'b0,1'b0}),
        .mgt_txcharisk({gt0_txcharisk_in,gt1_txcharisk_in,gt3_txcharisk_in,xaui_0_core_n_142,xaui_0_core_n_143}),
        .mgt_txdata({gt0_txdata_in,gt1_txdata_in,gt3_txdata_in,xaui_0_core_n_120,xaui_0_core_n_121,xaui_0_core_n_122,xaui_0_core_n_123,xaui_0_core_n_124,xaui_0_core_n_125,xaui_0_core_n_126,xaui_0_core_n_127,xaui_0_core_n_128,xaui_0_core_n_129,xaui_0_core_n_130,xaui_0_core_n_131,xaui_0_core_n_132,xaui_0_core_n_133,xaui_0_core_n_134,xaui_0_core_n_135}),
        .prtad({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .reset(reset156),
        .signal_detect(uclk_signal_detect_reord),
        .soft_reset(NLW_xaui_0_core_soft_reset_UNCONNECTED),
        .status_vector(status_vector),
        .sync_status({debug[1],debug[2],debug[4:3]}),
        .type_sel({1'b0,1'b0}),
        .usrclk(clk156_out),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_1
       (.I0(mgt_rxnotintable_reg[7]),
        .I1(mgt_rxdisperr_reg[7]),
        .O(mgt_codevalid[7]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_2
       (.I0(mgt_rxnotintable_reg[6]),
        .I1(mgt_rxdisperr_reg[6]),
        .O(mgt_codevalid[6]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_3
       (.I0(mgt_rxnotintable_reg[5]),
        .I1(mgt_rxdisperr_reg[5]),
        .O(mgt_codevalid[5]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_4
       (.I0(mgt_rxnotintable_reg[4]),
        .I1(mgt_rxdisperr_reg[4]),
        .O(mgt_codevalid[4]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_5
       (.I0(mgt_rxnotintable_reg[3]),
        .I1(mgt_rxdisperr_reg[3]),
        .O(mgt_codevalid[3]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_6
       (.I0(mgt_rxnotintable_reg[2]),
        .I1(mgt_rxdisperr_reg[2]),
        .O(mgt_codevalid[2]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_7
       (.I0(mgt_rxnotintable_reg[1]),
        .I1(mgt_rxdisperr_reg[1]),
        .O(mgt_codevalid[1]));
  LUT2 #(
    .INIT(4'h1)) 
    xaui_0_core_i_8
       (.I0(mgt_rxnotintable_reg[0]),
        .I1(mgt_rxdisperr_reg[0]),
        .O(mgt_codevalid[0]));
  xaui_0_xaui_0_cl_clocking xaui_cl_clocking_i
       (.CLK(clk156_out),
        .gt0_txoutclk_out(gt0_txoutclk_i));
  xaui_0_xaui_0_cl_resets xaui_cl_resets_i
       (.CLK(clk156_out),
        .out(reset156),
        .reset(reset),
        .uclk_mgt_rx_reset5(uclk_mgt_rx_reset5));
endmodule

module xaui_0_xaui_0_cl_clocking
   (CLK,
    gt0_txoutclk_out);
  output CLK;
  input gt0_txoutclk_out;

  wire CLK;
  wire gt0_txoutclk_out;

  (* box_type = "PRIMITIVE" *) 
  BUFG clk156_bufg_i
       (.I(gt0_txoutclk_out),
        .O(CLK));
endmodule

module xaui_0_xaui_0_cl_resets
   (out,
    uclk_mgt_rx_reset5,
    CLK,
    reset);
  output out;
  input uclk_mgt_rx_reset5;
  input CLK;
  input reset;

  wire CLK;
  wire reset;
  (* async_reg = "true" *) wire reset156_r1;
  (* async_reg = "true" *) wire reset156_r2;
  (* async_reg = "true" *) wire reset156_r3;
  wire uclk_mgt_rx_reset5;

  assign out = reset156_r3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE reset156_r1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(uclk_mgt_rx_reset5),
        .PRE(reset),
        .Q(reset156_r1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE reset156_r2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset156_r1),
        .PRE(reset),
        .Q(reset156_r2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE reset156_r3_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reset156_r2),
        .PRE(reset),
        .Q(reset156_r3));
endmodule

module xaui_0_xaui_0_ff_synchronizer
   (out,
    dclk,
    gt0_rxresetdone_out);
  output [0:0]out;
  input dclk;
  input gt0_rxresetdone_out;

  wire dclk;
  wire gt0_rxresetdone_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt0_rxresetdone_out),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_0
   (out,
    dclk_mgt_rx_reset_inprocess0,
    dclk_mgt_rx_reset_waiting_resetdone,
    dclk_mgt_rxresetdone,
    dclk,
    gt1_rxresetdone_out);
  output [0:0]out;
  output dclk_mgt_rx_reset_inprocess0;
  input dclk_mgt_rx_reset_waiting_resetdone;
  input [2:0]dclk_mgt_rxresetdone;
  input dclk;
  input gt1_rxresetdone_out;

  wire dclk;
  wire dclk_mgt_rx_reset_inprocess0;
  wire dclk_mgt_rx_reset_waiting_resetdone;
  wire [2:0]dclk_mgt_rxresetdone;
  wire gt1_rxresetdone_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  LUT5 #(
    .INIT(32'h80000000)) 
    dclk_mgt_rx_reset_inprocess_i_2
       (.I0(dclk_mgt_rx_reset_waiting_resetdone),
        .I1(sync1_r[2]),
        .I2(dclk_mgt_rxresetdone[0]),
        .I3(dclk_mgt_rxresetdone[1]),
        .I4(dclk_mgt_rxresetdone[2]),
        .O(dclk_mgt_rx_reset_inprocess0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt1_rxresetdone_out),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_1
   (out,
    dclk,
    gt2_rxresetdone_out);
  output [0:0]out;
  input dclk;
  input gt2_rxresetdone_out;

  wire dclk;
  wire gt2_rxresetdone_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt2_rxresetdone_out),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_10
   (out,
    CLK,
    signal_detect);
  output [0:0]out;
  input CLK;
  input [0:0]signal_detect;

  wire CLK;
  wire [0:0]signal_detect;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_11
   (out,
    CLK,
    signal_detect);
  output [0:0]out;
  input CLK;
  input [0:0]signal_detect;

  wire CLK;
  wire [0:0]signal_detect;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_12
   (out,
    CLK,
    signal_detect);
  output [0:0]out;
  input CLK;
  input [0:0]signal_detect;

  wire CLK;
  wire [0:0]signal_detect;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_13
   (out,
    CLK,
    signal_detect);
  output [0:0]out;
  input CLK;
  input [0:0]signal_detect;

  wire CLK;
  wire [0:0]signal_detect;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(signal_detect),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_2
   (out,
    dclk_mgt_rx_reset_inprocess_reg,
    dclk_mgt_rx_reset_inprocess,
    dclk_mgt_rxresetdone,
    dclk_mgt_rx_reset_waiting_resetdone,
    dclk,
    gt3_rxresetdone_out);
  output [0:0]out;
  output dclk_mgt_rx_reset_inprocess_reg;
  input dclk_mgt_rx_reset_inprocess;
  input [2:0]dclk_mgt_rxresetdone;
  input dclk_mgt_rx_reset_waiting_resetdone;
  input dclk;
  input gt3_rxresetdone_out;

  wire dclk;
  wire dclk_mgt_rx_reset_inprocess;
  wire dclk_mgt_rx_reset_inprocess_reg;
  wire dclk_mgt_rx_reset_waiting_resetdone;
  wire [2:0]dclk_mgt_rxresetdone;
  wire gt3_rxresetdone_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  LUT6 #(
    .INIT(64'h3FFFFFFF00000002)) 
    dclk_mgt_rx_reset_waiting_resetdone_i_2
       (.I0(dclk_mgt_rx_reset_inprocess),
        .I1(sync1_r[2]),
        .I2(dclk_mgt_rxresetdone[2]),
        .I3(dclk_mgt_rxresetdone[0]),
        .I4(dclk_mgt_rxresetdone[1]),
        .I5(dclk_mgt_rx_reset_waiting_resetdone),
        .O(dclk_mgt_rx_reset_inprocess_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt3_rxresetdone_out),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_3
   (out,
    uclk_mgt_rx_reset5,
    CLK,
    gt_qplllock_out);
  output [0:0]out;
  output uclk_mgt_rx_reset5;
  input CLK;
  input gt_qplllock_out;

  wire CLK;
  wire gt_qplllock_out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  wire uclk_mgt_rx_reset5;

  assign out[0] = sync1_r[2];
  LUT1 #(
    .INIT(2'h1)) 
    reset156_r1_i_1
       (.I0(sync1_r[2]),
        .O(uclk_mgt_rx_reset5));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_qplllock_out),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_4
   (uclk_txsync_start_phase_align_reg,
    uclk_mgt_rx_reset0,
    uclk_mgt_tx_reset0,
    uclk_txsync_start_phase_align_reg_0,
    Q,
    uclk_loopback_reset,
    uclk_cbm_rx_reset,
    S,
    out,
    uclk_mgt_tx_reset_reg,
    uclk_mgt_powerdown_falling,
    CLK,
    \sync1_r_reg[0]_0 );
  output uclk_txsync_start_phase_align_reg;
  output uclk_mgt_rx_reset0;
  output uclk_mgt_tx_reset0;
  input uclk_txsync_start_phase_align_reg_0;
  input [3:0]Q;
  input uclk_loopback_reset;
  input uclk_cbm_rx_reset;
  input [0:0]S;
  input out;
  input [0:0]uclk_mgt_tx_reset_reg;
  input uclk_mgt_powerdown_falling;
  input CLK;
  input [0:0]\sync1_r_reg[0]_0 ;

  wire CLK;
  wire [3:0]Q;
  wire [0:0]S;
  wire out;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  wire [0:0]\sync1_r_reg[0]_0 ;
  wire uclk_cbm_rx_reset;
  wire uclk_loopback_reset;
  wire uclk_mgt_powerdown_falling;
  wire uclk_mgt_rx_reset0;
  wire uclk_mgt_tx_reset0;
  wire [0:0]uclk_mgt_tx_reset_reg;
  wire uclk_txsync_start_phase_align_reg;
  wire uclk_txsync_start_phase_align_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\sync1_r_reg[0]_0 ),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFEAAAA)) 
    uclk_mgt_rx_reset_i_1
       (.I0(uclk_mgt_tx_reset0),
        .I1(uclk_loopback_reset),
        .I2(uclk_cbm_rx_reset),
        .I3(S),
        .I4(sync1_r[2]),
        .O(uclk_mgt_rx_reset0));
  LUT4 #(
    .INIT(16'hAA8A)) 
    uclk_mgt_tx_reset_i_1
       (.I0(sync1_r[2]),
        .I1(out),
        .I2(uclk_mgt_tx_reset_reg),
        .I3(uclk_mgt_powerdown_falling),
        .O(uclk_mgt_tx_reset0));
  LUT6 #(
    .INIT(64'hC000AAAA0000AAAA)) 
    uclk_txsync_start_phase_align_i_1
       (.I0(uclk_txsync_start_phase_align_reg_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(sync1_r[2]),
        .I5(Q[1]),
        .O(uclk_txsync_start_phase_align_reg));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_5
   (out,
    dclk,
    reset);
  output [0:0]out;
  input dclk;
  input reset;

  wire dclk;
  wire reset;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(reset),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_6
   (out,
    dclk,
    gt0_rxpmareset_in);
  output [0:0]out;
  input dclk;
  input gt0_rxpmareset_in;

  wire dclk;
  wire gt0_rxpmareset_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt0_rxpmareset_in),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_7
   (out,
    dclk,
    gt1_rxpmareset_in);
  output [0:0]out;
  input dclk;
  input gt1_rxpmareset_in;

  wire dclk;
  wire gt1_rxpmareset_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt1_rxpmareset_in),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_8
   (out,
    dclk,
    gt2_rxpmareset_in);
  output [0:0]out;
  input dclk;
  input gt2_rxpmareset_in;

  wire dclk;
  wire gt2_rxpmareset_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt2_rxpmareset_in),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_ff_synchronizer" *) 
module xaui_0_xaui_0_ff_synchronizer_9
   (out,
    dclk,
    gt3_rxpmareset_in);
  output [0:0]out;
  input dclk;
  input gt3_rxpmareset_in;

  wire dclk;
  wire gt3_rxpmareset_in;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;

  assign out[0] = sync1_r[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(gt3_rxpmareset_in),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[0]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[2]),
        .R(1'b0));
endmodule

module xaui_0_xaui_0_gt_wrapper
   (gt0_drpdo,
    gt1_drpdo,
    gt2_drpdo,
    gt3_drpdo,
    dclk_0,
    gt0_txphinitdone_out,
    dclk_1,
    gt1_txphinitdone_out,
    dclk_2,
    gt2_txphinitdone_out,
    dclk_3,
    gt3_txphinitdone_out,
    D,
    gt0_rxresetdone_out,
    gt1_rxresetdone_out,
    gt2_rxresetdone_out,
    gt3_rxresetdone_out,
    gt0_rxpmaresetdone_out,
    gt0_eyescandataerror_out,
    xaui_tx_l0_n,
    xaui_tx_l0_p,
    gt0_rxcommadet_out,
    gt0_rxprbserr_out,
    gt0_txdlysresetdone_out,
    gt0_txoutclk_out,
    gt0_txphaligndone_out,
    dclk_4,
    gt0_dmonitorout_out,
    dclk_5,
    dclk_6,
    dclk_7,
    dclk_8,
    dclk_9,
    dclk_10,
    gt1_rxpmaresetdone_out,
    gt1_eyescandataerror_out,
    xaui_tx_l1_n,
    xaui_tx_l1_p,
    gt1_rxcommadet_out,
    gt1_rxprbserr_out,
    gt1_txdlysresetdone_out,
    gt1_txphaligndone_out,
    gt1_dmonitorout_out,
    gt2_rxpmaresetdone_out,
    gt2_eyescandataerror_out,
    xaui_tx_l2_n,
    xaui_tx_l2_p,
    gt2_rxcommadet_out,
    gt2_rxprbserr_out,
    gt2_txdlysresetdone_out,
    gt2_txphaligndone_out,
    gt2_dmonitorout_out,
    gt3_rxpmaresetdone_out,
    gt3_eyescandataerror_out,
    xaui_tx_l3_n,
    xaui_tx_l3_p,
    gt3_rxcommadet_out,
    gt3_rxprbserr_out,
    gt3_txdlysresetdone_out,
    gt3_txphaligndone_out,
    gt3_dmonitorout_out,
    gt_qplllock_out,
    gt0_drp_busy,
    gt0_drprdy,
    gt1_drp_busy,
    gt1_drprdy,
    gt2_drp_busy,
    gt2_drprdy,
    gt3_drp_busy,
    gt3_drprdy,
    uclk_mgt_loopback_reg,
    gt0_loopback_in,
    gt1_loopback_in,
    gt2_loopback_in,
    gt3_loopback_in,
    gt0_eyescandataerror_out_0,
    dclk_mgt_rx_reset_inprocess,
    dclk,
    AR,
    gt0_rxrate_in,
    CLK,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    xaui_rx_l0_n,
    xaui_rx_l0_p,
    uclk_mgt_tx_reset,
    gt0_rxcdrhold_in,
    gt3_rxchbonden_in,
    gt0_rxlpmhfhold_in,
    gt0_rxlpmhfovrden_in,
    gt0_rxlpmlfhold_in,
    gt0_rxlpmlfovrden_in,
    gt0_rxlpmreset_in,
    mgt_enable_align,
    gt0_rxpcsreset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt3_txuserrdy_in,
    gt0_txdlyen_in,
    gt0_txdlysreset_in,
    gt3_txelecidle_in,
    gt0_txinhibit_in,
    gt0_txpcsreset_in,
    gt0_txphalign_in,
    gt0_txphinit_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_rxprbssel_in,
    gt0_txprbssel_in,
    mgt_txdata,
    mgt_txcharisk,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    gt1_rxrate_in,
    gt1_eyescanreset_in,
    gt1_eyescantrigger_in,
    xaui_rx_l1_n,
    xaui_rx_l1_p,
    gt1_rxcdrhold_in,
    gt1_rxlpmhfovrden_in,
    gt1_rxlpmlfovrden_in,
    gt1_rxlpmreset_in,
    gt1_rxpcsreset_in,
    gt1_rxpolarity_in,
    gt1_rxprbscntreset_in,
    gt1_txdlysreset_in,
    gt1_txpcsreset_in,
    gt1_txphalign_in,
    gt1_txphinit_in,
    gt1_txpmareset_in,
    gt1_txpolarity_in,
    gt1_txprbsforceerr_in,
    gt1_rxprbssel_in,
    gt1_txprbssel_in,
    gt1_txdiffctrl_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    gt2_rxrate_in,
    gt2_eyescanreset_in,
    gt2_eyescantrigger_in,
    xaui_rx_l2_n,
    xaui_rx_l2_p,
    gt2_rxcdrhold_in,
    gt2_rxlpmhfhold_in,
    gt2_rxlpmhfovrden_in,
    gt2_rxlpmlfhold_in,
    gt2_rxlpmlfovrden_in,
    gt2_rxlpmreset_in,
    gt2_rxpcsreset_in,
    gt2_rxpolarity_in,
    gt2_rxprbscntreset_in,
    gt2_txdlysreset_in,
    gt2_txpcsreset_in,
    gt2_txphalign_in,
    gt2_txphinit_in,
    gt2_txpmareset_in,
    gt2_txpolarity_in,
    gt2_txprbsforceerr_in,
    gt2_rxprbssel_in,
    gt2_txprbssel_in,
    gt2_txdiffctrl_in,
    gt2_txpostcursor_in,
    gt2_txprecursor_in,
    gt3_rxrate_in,
    gt3_eyescanreset_in,
    gt3_eyescantrigger_in,
    xaui_rx_l3_n,
    xaui_rx_l3_p,
    gt3_rxcdrhold_in,
    gt3_rxlpmhfhold_in,
    gt3_rxlpmhfovrden_in,
    gt3_rxlpmlfhold_in,
    gt3_rxlpmlfovrden_in,
    gt3_rxlpmreset_in,
    gt3_rxpcsreset_in,
    gt3_rxpolarity_in,
    gt3_rxprbscntreset_in,
    gt3_txdlysreset_in,
    gt3_txpcsreset_in,
    gt3_txphalign_in,
    gt3_txphinit_in,
    gt3_txpmareset_in,
    gt3_txpolarity_in,
    gt3_txprbsforceerr_in,
    gt3_rxprbssel_in,
    gt3_txprbssel_in,
    gt3_txdiffctrl_in,
    gt3_txpostcursor_in,
    gt3_txprecursor_in,
    refclk,
    drp_op_done_o_reg,
    gt0_rxpmareset_in,
    gt1_rxpmareset_in,
    gt2_rxpmareset_in,
    gt3_rxpmareset_in,
    gt0_drpdi,
    gt1_drpdi,
    gt2_drpdi,
    gt3_drpdi,
    gt0_drpaddr,
    gt0_drpwe,
    gt0_drpen,
    gt1_drpaddr,
    gt1_drpwe,
    gt1_drpen,
    gt2_drpaddr,
    gt2_drpwe,
    gt2_drpen,
    gt3_drpaddr,
    gt3_drpwe,
    gt3_drpen);
  output [15:0]gt0_drpdo;
  output [15:0]gt1_drpdo;
  output [15:0]gt2_drpdo;
  output [15:0]gt3_drpdo;
  output dclk_0;
  output gt0_txphinitdone_out;
  output dclk_1;
  output gt1_txphinitdone_out;
  output dclk_2;
  output gt2_txphinitdone_out;
  output dclk_3;
  output gt3_txphinitdone_out;
  output [3:0]D;
  output gt0_rxresetdone_out;
  output gt1_rxresetdone_out;
  output gt2_rxresetdone_out;
  output gt3_rxresetdone_out;
  output gt0_rxpmaresetdone_out;
  output gt0_eyescandataerror_out;
  output xaui_tx_l0_n;
  output xaui_tx_l0_p;
  output gt0_rxcommadet_out;
  output gt0_rxprbserr_out;
  output gt0_txdlysresetdone_out;
  output gt0_txoutclk_out;
  output gt0_txphaligndone_out;
  output [3:0]dclk_4;
  output [14:0]gt0_dmonitorout_out;
  output [11:0]dclk_5;
  output [63:0]dclk_6;
  output [7:0]dclk_7;
  output [7:0]dclk_8;
  output [7:0]dclk_9;
  output [7:0]dclk_10;
  output gt1_rxpmaresetdone_out;
  output gt1_eyescandataerror_out;
  output xaui_tx_l1_n;
  output xaui_tx_l1_p;
  output gt1_rxcommadet_out;
  output gt1_rxprbserr_out;
  output gt1_txdlysresetdone_out;
  output gt1_txphaligndone_out;
  output [14:0]gt1_dmonitorout_out;
  output gt2_rxpmaresetdone_out;
  output gt2_eyescandataerror_out;
  output xaui_tx_l2_n;
  output xaui_tx_l2_p;
  output gt2_rxcommadet_out;
  output gt2_rxprbserr_out;
  output gt2_txdlysresetdone_out;
  output gt2_txphaligndone_out;
  output [14:0]gt2_dmonitorout_out;
  output gt3_rxpmaresetdone_out;
  output gt3_eyescandataerror_out;
  output xaui_tx_l3_n;
  output xaui_tx_l3_p;
  output gt3_rxcommadet_out;
  output gt3_rxprbserr_out;
  output gt3_txdlysresetdone_out;
  output gt3_txphaligndone_out;
  output [14:0]gt3_dmonitorout_out;
  output gt_qplllock_out;
  output gt0_drp_busy;
  output gt0_drprdy;
  output gt1_drp_busy;
  output gt1_drprdy;
  output gt2_drp_busy;
  output gt2_drprdy;
  output gt3_drp_busy;
  output gt3_drprdy;
  input uclk_mgt_loopback_reg;
  input [2:0]gt0_loopback_in;
  input [2:0]gt1_loopback_in;
  input [2:0]gt2_loopback_in;
  input [2:0]gt3_loopback_in;
  input gt0_eyescandataerror_out_0;
  input dclk_mgt_rx_reset_inprocess;
  input dclk;
  input [0:0]AR;
  input [2:0]gt0_rxrate_in;
  input CLK;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input xaui_rx_l0_n;
  input xaui_rx_l0_p;
  input uclk_mgt_tx_reset;
  input gt0_rxcdrhold_in;
  input gt3_rxchbonden_in;
  input gt0_rxlpmhfhold_in;
  input gt0_rxlpmhfovrden_in;
  input gt0_rxlpmlfhold_in;
  input gt0_rxlpmlfovrden_in;
  input gt0_rxlpmreset_in;
  input [3:0]mgt_enable_align;
  input gt0_rxpcsreset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt3_txuserrdy_in;
  input gt0_txdlyen_in;
  input gt0_txdlysreset_in;
  input gt3_txelecidle_in;
  input gt0_txinhibit_in;
  input gt0_txpcsreset_in;
  input gt0_txphalign_in;
  input gt0_txphinit_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_txprbssel_in;
  input [63:0]mgt_txdata;
  input [7:0]mgt_txcharisk;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input [2:0]gt1_rxrate_in;
  input gt1_eyescanreset_in;
  input gt1_eyescantrigger_in;
  input xaui_rx_l1_n;
  input xaui_rx_l1_p;
  input gt1_rxcdrhold_in;
  input gt1_rxlpmhfovrden_in;
  input gt1_rxlpmlfovrden_in;
  input gt1_rxlpmreset_in;
  input gt1_rxpcsreset_in;
  input gt1_rxpolarity_in;
  input gt1_rxprbscntreset_in;
  input gt1_txdlysreset_in;
  input gt1_txpcsreset_in;
  input gt1_txphalign_in;
  input gt1_txphinit_in;
  input gt1_txpmareset_in;
  input gt1_txpolarity_in;
  input gt1_txprbsforceerr_in;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_txprbssel_in;
  input [3:0]gt1_txdiffctrl_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [2:0]gt2_rxrate_in;
  input gt2_eyescanreset_in;
  input gt2_eyescantrigger_in;
  input xaui_rx_l2_n;
  input xaui_rx_l2_p;
  input gt2_rxcdrhold_in;
  input gt2_rxlpmhfhold_in;
  input gt2_rxlpmhfovrden_in;
  input gt2_rxlpmlfhold_in;
  input gt2_rxlpmlfovrden_in;
  input gt2_rxlpmreset_in;
  input gt2_rxpcsreset_in;
  input gt2_rxpolarity_in;
  input gt2_rxprbscntreset_in;
  input gt2_txdlysreset_in;
  input gt2_txpcsreset_in;
  input gt2_txphalign_in;
  input gt2_txphinit_in;
  input gt2_txpmareset_in;
  input gt2_txpolarity_in;
  input gt2_txprbsforceerr_in;
  input [2:0]gt2_rxprbssel_in;
  input [2:0]gt2_txprbssel_in;
  input [3:0]gt2_txdiffctrl_in;
  input [4:0]gt2_txpostcursor_in;
  input [4:0]gt2_txprecursor_in;
  input [2:0]gt3_rxrate_in;
  input gt3_eyescanreset_in;
  input gt3_eyescantrigger_in;
  input xaui_rx_l3_n;
  input xaui_rx_l3_p;
  input gt3_rxcdrhold_in;
  input gt3_rxlpmhfhold_in;
  input gt3_rxlpmhfovrden_in;
  input gt3_rxlpmlfhold_in;
  input gt3_rxlpmlfovrden_in;
  input gt3_rxlpmreset_in;
  input gt3_rxpcsreset_in;
  input gt3_rxpolarity_in;
  input gt3_rxprbscntreset_in;
  input gt3_txdlysreset_in;
  input gt3_txpcsreset_in;
  input gt3_txphalign_in;
  input gt3_txphinit_in;
  input gt3_txpmareset_in;
  input gt3_txpolarity_in;
  input gt3_txprbsforceerr_in;
  input [2:0]gt3_rxprbssel_in;
  input [2:0]gt3_txprbssel_in;
  input [3:0]gt3_txdiffctrl_in;
  input [4:0]gt3_txpostcursor_in;
  input [4:0]gt3_txprecursor_in;
  input refclk;
  input drp_op_done_o_reg;
  input gt0_rxpmareset_in;
  input gt1_rxpmareset_in;
  input gt2_rxpmareset_in;
  input gt3_rxpmareset_in;
  input [15:0]gt0_drpdi;
  input [15:0]gt1_drpdi;
  input [15:0]gt2_drpdi;
  input [15:0]gt3_drpdi;
  input [8:0]gt0_drpaddr;
  input gt0_drpwe;
  input gt0_drpen;
  input [8:0]gt1_drpaddr;
  input gt1_drpwe;
  input gt1_drpen;
  input [8:0]gt2_drpaddr;
  input gt2_drpwe;
  input gt2_drpen;
  input [8:0]gt3_drpaddr;
  input gt3_drpwe;
  input gt3_drpen;

  wire [0:0]AR;
  wire CLK;
  wire [3:0]D;
  wire dclk;
  wire dclk_0;
  wire dclk_1;
  wire [7:0]dclk_10;
  wire dclk_2;
  wire dclk_3;
  wire [3:0]dclk_4;
  wire [11:0]dclk_5;
  wire [63:0]dclk_6;
  wire [7:0]dclk_7;
  wire [7:0]dclk_8;
  wire [7:0]dclk_9;
  wire dclk_mgt_rx_reset_inprocess;
  wire drp_op_done_o_reg;
  wire [14:0]gt0_dmonitorout_out;
  wire gt0_drp_busy;
  wire [8:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescandataerror_out_0;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire [2:0]gt0_loopback_in;
  wire gt0_pll0outclk_i;
  wire gt0_pll0outrefclk_i;
  wire gt0_pll1outclk_i;
  wire gt0_pll1outrefclk_i;
  wire gt0_rxcdrhold_in;
  wire gt0_rxcommadet_out;
  wire gt0_rxlpmhfhold_in;
  wire gt0_rxlpmhfovrden_in;
  wire gt0_rxlpmlfhold_in;
  wire gt0_rxlpmlfovrden_in;
  wire gt0_rxlpmreset_in;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpmaresetdone_out;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxresetdone_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlyen_in;
  wire gt0_txdlysreset_in;
  wire gt0_txdlysresetdone_out;
  wire gt0_txinhibit_in;
  wire gt0_txoutclk_out;
  wire gt0_txpcsreset_in;
  wire gt0_txphalign_in;
  wire gt0_txphaligndone_out;
  wire gt0_txphinit_in;
  wire gt0_txphinitdone_out;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt0_xaui_0_gt_wrapper_i_n_54;
  wire [14:0]gt1_dmonitorout_out;
  wire gt1_drp_busy;
  wire [8:0]gt1_drpaddr;
  wire [15:0]gt1_drpdi;
  wire [15:0]gt1_drpdo;
  wire gt1_drpen;
  wire gt1_drprdy;
  wire gt1_drpwe;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire [2:0]gt1_loopback_in;
  wire gt1_rxcdrhold_in;
  wire [3:0]gt1_rxchbondo_i;
  wire gt1_rxcommadet_out;
  wire gt1_rxlpmhfovrden_in;
  wire gt1_rxlpmlfovrden_in;
  wire gt1_rxlpmreset_in;
  wire gt1_rxpcsreset_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpmaresetdone_out;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxresetdone_out;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txdlysreset_in;
  wire gt1_txdlysresetdone_out;
  wire gt1_txpcsreset_in;
  wire gt1_txphalign_in;
  wire gt1_txphaligndone_out;
  wire gt1_txphinit_in;
  wire gt1_txphinitdone_out;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire [14:0]gt2_dmonitorout_out;
  wire gt2_drp_busy;
  wire [8:0]gt2_drpaddr;
  wire [15:0]gt2_drpdi;
  wire [15:0]gt2_drpdo;
  wire gt2_drpen;
  wire gt2_drprdy;
  wire gt2_drpwe;
  wire gt2_eyescandataerror_out;
  wire gt2_eyescanreset_in;
  wire gt2_eyescantrigger_in;
  wire [2:0]gt2_loopback_in;
  wire gt2_rxcdrhold_in;
  wire [3:0]gt2_rxchbondo_i;
  wire gt2_rxcommadet_out;
  wire gt2_rxlpmhfhold_in;
  wire gt2_rxlpmhfovrden_in;
  wire gt2_rxlpmlfhold_in;
  wire gt2_rxlpmlfovrden_in;
  wire gt2_rxlpmreset_in;
  wire gt2_rxpcsreset_in;
  wire gt2_rxpmareset_in;
  wire gt2_rxpmaresetdone_out;
  wire gt2_rxpolarity_in;
  wire gt2_rxprbscntreset_in;
  wire gt2_rxprbserr_out;
  wire [2:0]gt2_rxprbssel_in;
  wire [2:0]gt2_rxrate_in;
  wire gt2_rxresetdone_out;
  wire [3:0]gt2_txdiffctrl_in;
  wire gt2_txdlysreset_in;
  wire gt2_txdlysresetdone_out;
  wire gt2_txpcsreset_in;
  wire gt2_txphalign_in;
  wire gt2_txphaligndone_out;
  wire gt2_txphinit_in;
  wire gt2_txphinitdone_out;
  wire gt2_txpmareset_in;
  wire gt2_txpolarity_in;
  wire [4:0]gt2_txpostcursor_in;
  wire gt2_txprbsforceerr_in;
  wire [2:0]gt2_txprbssel_in;
  wire [4:0]gt2_txprecursor_in;
  wire [14:0]gt3_dmonitorout_out;
  wire gt3_drp_busy;
  wire [8:0]gt3_drpaddr;
  wire [15:0]gt3_drpdi;
  wire [15:0]gt3_drpdo;
  wire gt3_drpen;
  wire gt3_drprdy;
  wire gt3_drpwe;
  wire gt3_eyescandataerror_out;
  wire gt3_eyescanreset_in;
  wire gt3_eyescantrigger_in;
  wire [2:0]gt3_loopback_in;
  wire gt3_rxcdrhold_in;
  wire gt3_rxchbonden_in;
  wire gt3_rxcommadet_out;
  wire gt3_rxlpmhfhold_in;
  wire gt3_rxlpmhfovrden_in;
  wire gt3_rxlpmlfhold_in;
  wire gt3_rxlpmlfovrden_in;
  wire gt3_rxlpmreset_in;
  wire gt3_rxpcsreset_in;
  wire gt3_rxpmareset_in;
  wire gt3_rxpmaresetdone_out;
  wire gt3_rxpolarity_in;
  wire gt3_rxprbscntreset_in;
  wire gt3_rxprbserr_out;
  wire [2:0]gt3_rxprbssel_in;
  wire [2:0]gt3_rxrate_in;
  wire gt3_rxresetdone_out;
  wire [3:0]gt3_txdiffctrl_in;
  wire gt3_txdlysreset_in;
  wire gt3_txdlysresetdone_out;
  wire gt3_txelecidle_in;
  wire gt3_txpcsreset_in;
  wire gt3_txphalign_in;
  wire gt3_txphaligndone_out;
  wire gt3_txphinit_in;
  wire gt3_txphinitdone_out;
  wire gt3_txpmareset_in;
  wire gt3_txpolarity_in;
  wire [4:0]gt3_txpostcursor_in;
  wire gt3_txprbsforceerr_in;
  wire [2:0]gt3_txprbssel_in;
  wire [4:0]gt3_txprecursor_in;
  wire gt3_txuserrdy_in;
  wire gt_qplllock_out;
  wire gtpe2_common_0_i_n_5;
  wire \gtrxreset_seq_i/gtrxreset_ss ;
  wire [3:0]mgt_enable_align;
  wire [7:0]mgt_txcharisk;
  wire [63:0]mgt_txdata;
  wire refclk;
  wire uclk_mgt_loopback_reg;
  wire uclk_mgt_tx_reset;
  wire xaui_rx_l0_n;
  wire xaui_rx_l0_p;
  wire xaui_rx_l1_n;
  wire xaui_rx_l1_p;
  wire xaui_rx_l2_n;
  wire xaui_rx_l2_p;
  wire xaui_rx_l3_n;
  wire xaui_rx_l3_p;
  wire xaui_tx_l0_n;
  wire xaui_tx_l0_p;
  wire xaui_tx_l1_n;
  wire xaui_tx_l1_p;
  wire xaui_tx_l2_n;
  wire xaui_tx_l2_p;
  wire xaui_tx_l3_n;
  wire xaui_tx_l3_p;
  wire NLW_gtpe2_common_0_i_DRPRDY_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_PLL0FBCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_PLL1FBCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_PLL1LOCK_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_PLL1REFCLKLOST_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_REFCLKOUTMONITOR0_UNCONNECTED;
  wire NLW_gtpe2_common_0_i_REFCLKOUTMONITOR1_UNCONNECTED;
  wire [7:0]NLW_gtpe2_common_0_i_DMONITOROUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_common_0_i_DRPDO_UNCONNECTED;
  wire [15:0]NLW_gtpe2_common_0_i_PMARSVDOUT_UNCONNECTED;

  xaui_0_xaui_0_gt_wrapper_GT gt0_xaui_0_gt_wrapper_i
       (.AR(AR),
        .CLK(CLK),
        .D(D[0]),
        .RXCHBONDO(gt1_rxchbondo_i),
        .data_in(gt0_rxpmaresetdone_out),
        .dclk(dclk),
        .dclk_0(dclk_4[1]),
        .dclk_1(dclk_5[2:0]),
        .dclk_2(dclk_6[63:48]),
        .dclk_3(dclk_7[7:6]),
        .dclk_4(dclk_8[7:6]),
        .dclk_5(dclk_9[7:6]),
        .dclk_6(dclk_10[7:6]),
        .dclk_7(dclk_0),
        .dclk_mgt_rx_reset_inprocess(dclk_mgt_rx_reset_inprocess),
        .drp_op_done_o_reg(drp_op_done_o_reg),
        .gt0_dmonitorout_out(gt0_dmonitorout_out),
        .gt0_drp_busy(gt0_drp_busy),
        .gt0_drpaddr(gt0_drpaddr),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt0_eyescandataerror_out(gt0_eyescandataerror_out),
        .gt0_eyescandataerror_out_0(gt0_eyescandataerror_out_0),
        .gt0_eyescanreset_in(gt0_eyescanreset_in),
        .gt0_eyescantrigger_in(gt0_eyescantrigger_in),
        .gt0_loopback_in(gt0_loopback_in),
        .gt0_pll0outclk_i(gt0_pll0outclk_i),
        .gt0_pll0outrefclk_i(gt0_pll0outrefclk_i),
        .gt0_pll1outclk_i(gt0_pll1outclk_i),
        .gt0_pll1outrefclk_i(gt0_pll1outrefclk_i),
        .gt0_rxcdrhold_in(gt0_rxcdrhold_in),
        .gt0_rxcommadet_out(gt0_rxcommadet_out),
        .gt0_rxlpmhfhold_in(gt0_rxlpmhfhold_in),
        .gt0_rxlpmhfovrden_in(gt0_rxlpmhfovrden_in),
        .gt0_rxlpmlfhold_in(gt0_rxlpmlfhold_in),
        .gt0_rxlpmlfovrden_in(gt0_rxlpmlfovrden_in),
        .gt0_rxlpmreset_in(gt0_rxlpmreset_in),
        .gt0_rxpcsreset_in(gt0_rxpcsreset_in),
        .gt0_rxpmareset_in(gt0_rxpmareset_in),
        .gt0_rxpolarity_in(gt0_rxpolarity_in),
        .gt0_rxprbscntreset_in(gt0_rxprbscntreset_in),
        .gt0_rxprbserr_out(gt0_rxprbserr_out),
        .gt0_rxprbssel_in(gt0_rxprbssel_in),
        .gt0_rxrate_in(gt0_rxrate_in),
        .gt0_rxresetdone_out(gt0_rxresetdone_out),
        .gt0_txdiffctrl_in(gt0_txdiffctrl_in),
        .gt0_txdlyen_in(gt0_txdlyen_in),
        .gt0_txdlysreset_in(gt0_txdlysreset_in),
        .gt0_txdlysresetdone_out(gt0_txdlysresetdone_out),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt0_txoutclk_out(gt0_txoutclk_out),
        .gt0_txpcsreset_in(gt0_txpcsreset_in),
        .gt0_txphalign_in(gt0_txphalign_in),
        .gt0_txphaligndone_out(gt0_txphaligndone_out),
        .gt0_txphinit_in(gt0_txphinit_in),
        .gt0_txphinitdone_out(gt0_txphinitdone_out),
        .gt0_txpmareset_in(gt0_txpmareset_in),
        .gt0_txpolarity_in(gt0_txpolarity_in),
        .gt0_txpostcursor_in(gt0_txpostcursor_in),
        .gt0_txprbsforceerr_in(gt0_txprbsforceerr_in),
        .gt0_txprbssel_in(gt0_txprbssel_in),
        .gt0_txprecursor_in(gt0_txprecursor_in),
        .gt3_rxchbonden_in(gt3_rxchbonden_in),
        .gt3_txelecidle_in(gt3_txelecidle_in),
        .gt3_txuserrdy_in(gt3_txuserrdy_in),
        .gtrxreset_ss(\gtrxreset_seq_i/gtrxreset_ss ),
        .mgt_enable_align(mgt_enable_align[3]),
        .mgt_txcharisk(mgt_txcharisk[7:6]),
        .mgt_txdata(mgt_txdata[63:48]),
        .uclk_mgt_loopback_reg(uclk_mgt_loopback_reg),
        .\uclk_mgt_rxbuf_reset_reg[0] (gt0_xaui_0_gt_wrapper_i_n_54),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset),
        .xaui_rx_l0_n(xaui_rx_l0_n),
        .xaui_rx_l0_p(xaui_rx_l0_p),
        .xaui_tx_l0_n(xaui_tx_l0_n),
        .xaui_tx_l0_p(xaui_tx_l0_p));
  xaui_0_xaui_0_gt_wrapper_GT_24 gt1_xaui_0_gt_wrapper_i
       (.AR(AR),
        .CLK(CLK),
        .D(D[1]),
        .RXCHBONDO(gt1_rxchbondo_i),
        .data_in(gt1_rxpmaresetdone_out),
        .dclk(dclk),
        .dclk_0(dclk_4[0]),
        .dclk_1(dclk_5[5:3]),
        .dclk_2(dclk_6[47:32]),
        .dclk_3(dclk_7[5:4]),
        .dclk_4(dclk_8[5:4]),
        .dclk_5(dclk_9[5:4]),
        .dclk_6(dclk_10[5:4]),
        .dclk_7(dclk_1),
        .drp_op_done_o_reg(drp_op_done_o_reg),
        .gt0_pll0outclk_i(gt0_pll0outclk_i),
        .gt0_pll0outrefclk_i(gt0_pll0outrefclk_i),
        .gt0_pll1outclk_i(gt0_pll1outclk_i),
        .gt0_pll1outrefclk_i(gt0_pll1outrefclk_i),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt1_dmonitorout_out(gt1_dmonitorout_out),
        .gt1_drp_busy(gt1_drp_busy),
        .gt1_drpaddr(gt1_drpaddr),
        .gt1_drpdi(gt1_drpdi),
        .gt1_drpdo(gt1_drpdo),
        .gt1_drpen(gt1_drpen),
        .gt1_drprdy(gt1_drprdy),
        .gt1_drpwe(gt1_drpwe),
        .gt1_eyescandataerror_out(gt1_eyescandataerror_out),
        .gt1_eyescandataerror_out_0(gt0_xaui_0_gt_wrapper_i_n_54),
        .gt1_eyescandataerror_out_1(gt2_rxchbondo_i),
        .gt1_eyescanreset_in(gt1_eyescanreset_in),
        .gt1_eyescantrigger_in(gt1_eyescantrigger_in),
        .gt1_loopback_in(gt1_loopback_in),
        .gt1_rxcdrhold_in(gt1_rxcdrhold_in),
        .gt1_rxcommadet_out(gt1_rxcommadet_out),
        .gt1_rxlpmhfovrden_in(gt1_rxlpmhfovrden_in),
        .gt1_rxlpmlfovrden_in(gt1_rxlpmlfovrden_in),
        .gt1_rxlpmreset_in(gt1_rxlpmreset_in),
        .gt1_rxpcsreset_in(gt1_rxpcsreset_in),
        .gt1_rxpmareset_in(gt1_rxpmareset_in),
        .gt1_rxpolarity_in(gt1_rxpolarity_in),
        .gt1_rxprbscntreset_in(gt1_rxprbscntreset_in),
        .gt1_rxprbserr_out(gt1_rxprbserr_out),
        .gt1_rxprbssel_in(gt1_rxprbssel_in),
        .gt1_rxrate_in(gt1_rxrate_in),
        .gt1_rxresetdone_out(gt1_rxresetdone_out),
        .gt1_txdiffctrl_in(gt1_txdiffctrl_in),
        .gt1_txdlysreset_in(gt1_txdlysreset_in),
        .gt1_txdlysresetdone_out(gt1_txdlysresetdone_out),
        .gt1_txpcsreset_in(gt1_txpcsreset_in),
        .gt1_txphalign_in(gt1_txphalign_in),
        .gt1_txphaligndone_out(gt1_txphaligndone_out),
        .gt1_txphinit_in(gt1_txphinit_in),
        .gt1_txphinitdone_out(gt1_txphinitdone_out),
        .gt1_txpmareset_in(gt1_txpmareset_in),
        .gt1_txpolarity_in(gt1_txpolarity_in),
        .gt1_txpostcursor_in(gt1_txpostcursor_in),
        .gt1_txprbsforceerr_in(gt1_txprbsforceerr_in),
        .gt1_txprbssel_in(gt1_txprbssel_in),
        .gt1_txprecursor_in(gt1_txprecursor_in),
        .gt3_rxchbonden_in(gt3_rxchbonden_in),
        .gt3_txelecidle_in(gt3_txelecidle_in),
        .gt3_txuserrdy_in(gt3_txuserrdy_in),
        .gtrxreset_ss(\gtrxreset_seq_i/gtrxreset_ss ),
        .mgt_enable_align(mgt_enable_align[2]),
        .mgt_txcharisk(mgt_txcharisk[5:4]),
        .mgt_txdata(mgt_txdata[47:32]),
        .uclk_mgt_loopback_reg(uclk_mgt_loopback_reg),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset),
        .xaui_rx_l1_n(xaui_rx_l1_n),
        .xaui_rx_l1_p(xaui_rx_l1_p),
        .xaui_tx_l1_n(xaui_tx_l1_n),
        .xaui_tx_l1_p(xaui_tx_l1_p));
  xaui_0_xaui_0_gt_wrapper_GT_25 gt2_xaui_0_gt_wrapper_i
       (.AR(AR),
        .CLK(CLK),
        .D(D[2]),
        .data_in(gt2_rxpmaresetdone_out),
        .dclk(dclk),
        .dclk_0(dclk_4[2]),
        .dclk_1(dclk_5[8:6]),
        .dclk_2(dclk_6[15:0]),
        .dclk_3(dclk_7[1:0]),
        .dclk_4(dclk_8[1:0]),
        .dclk_5(gt2_rxchbondo_i),
        .dclk_6(dclk_9[1:0]),
        .dclk_7(dclk_10[1:0]),
        .dclk_8(dclk_2),
        .drp_op_done_o_reg(drp_op_done_o_reg),
        .gt0_pll0outclk_i(gt0_pll0outclk_i),
        .gt0_pll0outrefclk_i(gt0_pll0outrefclk_i),
        .gt0_pll1outclk_i(gt0_pll1outclk_i),
        .gt0_pll1outrefclk_i(gt0_pll1outrefclk_i),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt2_dmonitorout_out(gt2_dmonitorout_out),
        .gt2_drp_busy(gt2_drp_busy),
        .gt2_drpaddr(gt2_drpaddr),
        .gt2_drpdi(gt2_drpdi),
        .gt2_drpdo(gt2_drpdo),
        .gt2_drpen(gt2_drpen),
        .gt2_drprdy(gt2_drprdy),
        .gt2_drpwe(gt2_drpwe),
        .gt2_eyescandataerror_out(gt2_eyescandataerror_out),
        .gt2_eyescandataerror_out_0(gt0_xaui_0_gt_wrapper_i_n_54),
        .gt2_eyescanreset_in(gt2_eyescanreset_in),
        .gt2_eyescantrigger_in(gt2_eyescantrigger_in),
        .gt2_loopback_in(gt2_loopback_in),
        .gt2_rxcdrhold_in(gt2_rxcdrhold_in),
        .gt2_rxcommadet_out(gt2_rxcommadet_out),
        .gt2_rxlpmhfhold_in(gt2_rxlpmhfhold_in),
        .gt2_rxlpmhfovrden_in(gt2_rxlpmhfovrden_in),
        .gt2_rxlpmlfhold_in(gt2_rxlpmlfhold_in),
        .gt2_rxlpmlfovrden_in(gt2_rxlpmlfovrden_in),
        .gt2_rxlpmreset_in(gt2_rxlpmreset_in),
        .gt2_rxpcsreset_in(gt2_rxpcsreset_in),
        .gt2_rxpmareset_in(gt2_rxpmareset_in),
        .gt2_rxpolarity_in(gt2_rxpolarity_in),
        .gt2_rxprbscntreset_in(gt2_rxprbscntreset_in),
        .gt2_rxprbserr_out(gt2_rxprbserr_out),
        .gt2_rxprbssel_in(gt2_rxprbssel_in),
        .gt2_rxrate_in(gt2_rxrate_in),
        .gt2_rxresetdone_out(gt2_rxresetdone_out),
        .gt2_txdiffctrl_in(gt2_txdiffctrl_in),
        .gt2_txdlysreset_in(gt2_txdlysreset_in),
        .gt2_txdlysresetdone_out(gt2_txdlysresetdone_out),
        .gt2_txpcsreset_in(gt2_txpcsreset_in),
        .gt2_txphalign_in(gt2_txphalign_in),
        .gt2_txphaligndone_out(gt2_txphaligndone_out),
        .gt2_txphinit_in(gt2_txphinit_in),
        .gt2_txphinitdone_out(gt2_txphinitdone_out),
        .gt2_txpmareset_in(gt2_txpmareset_in),
        .gt2_txpolarity_in(gt2_txpolarity_in),
        .gt2_txpostcursor_in(gt2_txpostcursor_in),
        .gt2_txprbsforceerr_in(gt2_txprbsforceerr_in),
        .gt2_txprbssel_in(gt2_txprbssel_in),
        .gt2_txprecursor_in(gt2_txprecursor_in),
        .gt3_rxchbonden_in(gt3_rxchbonden_in),
        .gt3_txelecidle_in(gt3_txelecidle_in),
        .gt3_txuserrdy_in(gt3_txuserrdy_in),
        .gtrxreset_ss(\gtrxreset_seq_i/gtrxreset_ss ),
        .mgt_enable_align(mgt_enable_align[0]),
        .mgt_txcharisk(mgt_txcharisk[1:0]),
        .mgt_txdata(mgt_txdata[15:0]),
        .uclk_mgt_loopback_reg(uclk_mgt_loopback_reg),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset),
        .xaui_rx_l2_n(xaui_rx_l2_n),
        .xaui_rx_l2_p(xaui_rx_l2_p),
        .xaui_tx_l2_n(xaui_tx_l2_n),
        .xaui_tx_l2_p(xaui_tx_l2_p));
  xaui_0_xaui_0_gt_wrapper_GT_26 gt3_xaui_0_gt_wrapper_i
       (.AR(AR),
        .CLK(CLK),
        .D(D[3]),
        .data_in(gt3_rxpmaresetdone_out),
        .dclk(dclk),
        .dclk_0(dclk_4[3]),
        .dclk_1(dclk_5[11:9]),
        .dclk_2(dclk_6[31:16]),
        .dclk_3(dclk_7[3:2]),
        .dclk_4(dclk_8[3:2]),
        .dclk_5(dclk_9[3:2]),
        .dclk_6(dclk_10[3:2]),
        .dclk_7(dclk_3),
        .drp_op_done_o_reg(drp_op_done_o_reg),
        .gt0_pll0outclk_i(gt0_pll0outclk_i),
        .gt0_pll0outrefclk_i(gt0_pll0outrefclk_i),
        .gt0_pll1outclk_i(gt0_pll1outclk_i),
        .gt0_pll1outrefclk_i(gt0_pll1outrefclk_i),
        .gt0_txinhibit_in(gt0_txinhibit_in),
        .gt3_dmonitorout_out(gt3_dmonitorout_out),
        .gt3_drp_busy(gt3_drp_busy),
        .gt3_drpaddr(gt3_drpaddr),
        .gt3_drpdi(gt3_drpdi),
        .gt3_drpdo(gt3_drpdo),
        .gt3_drpen(gt3_drpen),
        .gt3_drprdy(gt3_drprdy),
        .gt3_drpwe(gt3_drpwe),
        .gt3_eyescandataerror_out(gt3_eyescandataerror_out),
        .gt3_eyescandataerror_out_0(gt0_xaui_0_gt_wrapper_i_n_54),
        .gt3_eyescandataerror_out_1(gt2_rxchbondo_i),
        .gt3_eyescanreset_in(gt3_eyescanreset_in),
        .gt3_eyescantrigger_in(gt3_eyescantrigger_in),
        .gt3_loopback_in(gt3_loopback_in),
        .gt3_rxcdrhold_in(gt3_rxcdrhold_in),
        .gt3_rxchbonden_in(gt3_rxchbonden_in),
        .gt3_rxcommadet_out(gt3_rxcommadet_out),
        .gt3_rxlpmhfhold_in(gt3_rxlpmhfhold_in),
        .gt3_rxlpmhfovrden_in(gt3_rxlpmhfovrden_in),
        .gt3_rxlpmlfhold_in(gt3_rxlpmlfhold_in),
        .gt3_rxlpmlfovrden_in(gt3_rxlpmlfovrden_in),
        .gt3_rxlpmreset_in(gt3_rxlpmreset_in),
        .gt3_rxpcsreset_in(gt3_rxpcsreset_in),
        .gt3_rxpmareset_in(gt3_rxpmareset_in),
        .gt3_rxpolarity_in(gt3_rxpolarity_in),
        .gt3_rxprbscntreset_in(gt3_rxprbscntreset_in),
        .gt3_rxprbserr_out(gt3_rxprbserr_out),
        .gt3_rxprbssel_in(gt3_rxprbssel_in),
        .gt3_rxrate_in(gt3_rxrate_in),
        .gt3_rxresetdone_out(gt3_rxresetdone_out),
        .gt3_txdiffctrl_in(gt3_txdiffctrl_in),
        .gt3_txdlysreset_in(gt3_txdlysreset_in),
        .gt3_txdlysresetdone_out(gt3_txdlysresetdone_out),
        .gt3_txelecidle_in(gt3_txelecidle_in),
        .gt3_txpcsreset_in(gt3_txpcsreset_in),
        .gt3_txphalign_in(gt3_txphalign_in),
        .gt3_txphaligndone_out(gt3_txphaligndone_out),
        .gt3_txphinit_in(gt3_txphinit_in),
        .gt3_txphinitdone_out(gt3_txphinitdone_out),
        .gt3_txpmareset_in(gt3_txpmareset_in),
        .gt3_txpolarity_in(gt3_txpolarity_in),
        .gt3_txpostcursor_in(gt3_txpostcursor_in),
        .gt3_txprbsforceerr_in(gt3_txprbsforceerr_in),
        .gt3_txprbssel_in(gt3_txprbssel_in),
        .gt3_txprecursor_in(gt3_txprecursor_in),
        .gt3_txuserrdy_in(gt3_txuserrdy_in),
        .gtrxreset_ss(\gtrxreset_seq_i/gtrxreset_ss ),
        .mgt_enable_align(mgt_enable_align[1]),
        .mgt_txcharisk(mgt_txcharisk[3:2]),
        .mgt_txdata(mgt_txdata[31:16]),
        .uclk_mgt_loopback_reg(uclk_mgt_loopback_reg),
        .uclk_mgt_tx_reset(uclk_mgt_tx_reset),
        .xaui_rx_l3_n(xaui_rx_l3_n),
        .xaui_rx_l3_p(xaui_rx_l3_p),
        .xaui_tx_l3_n(xaui_tx_l3_n),
        .xaui_tx_l3_p(xaui_tx_l3_p));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_COMMON #(
    .BIAS_CFG(64'h0000000000050001),
    .COMMON_CFG(32'h00000000),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK0_INVERTED(1'b0),
    .IS_GTGREFCLK1_INVERTED(1'b0),
    .IS_PLL0LOCKDETCLK_INVERTED(1'b0),
    .IS_PLL1LOCKDETCLK_INVERTED(1'b0),
    .PLL0_CFG(27'h01F03DC),
    .PLL0_DMON_CFG(1'b0),
    .PLL0_FBDIV(4),
    .PLL0_FBDIV_45(5),
    .PLL0_INIT_CFG(24'h00001E),
    .PLL0_LOCK_CFG(9'h1E8),
    .PLL0_REFCLK_DIV(1),
    .PLL1_CFG(27'h01F03DC),
    .PLL1_DMON_CFG(1'b0),
    .PLL1_FBDIV(1),
    .PLL1_FBDIV_45(4),
    .PLL1_INIT_CFG(24'h00001E),
    .PLL1_LOCK_CFG(9'h1E8),
    .PLL1_REFCLK_DIV(1),
    .PLL_CLKOUT_CFG(8'b00000000),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .SIM_PLL0REFCLK_SEL(3'b001),
    .SIM_PLL1REFCLK_SEL(3'b001),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_VERSION("2.0")) 
    gtpe2_common_0_i
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DMONITOROUT(NLW_gtpe2_common_0_i_DMONITOROUT_UNCONNECTED[7:0]),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO(NLW_gtpe2_common_0_i_DRPDO_UNCONNECTED[15:0]),
        .DRPEN(1'b0),
        .DRPRDY(NLW_gtpe2_common_0_i_DRPRDY_UNCONNECTED),
        .DRPWE(1'b0),
        .GTEASTREFCLK0(1'b0),
        .GTEASTREFCLK1(1'b0),
        .GTGREFCLK0(1'b0),
        .GTGREFCLK1(1'b0),
        .GTREFCLK0(refclk),
        .GTREFCLK1(1'b0),
        .GTWESTREFCLK0(1'b0),
        .GTWESTREFCLK1(1'b0),
        .PLL0FBCLKLOST(NLW_gtpe2_common_0_i_PLL0FBCLKLOST_UNCONNECTED),
        .PLL0LOCK(gt_qplllock_out),
        .PLL0LOCKDETCLK(dclk),
        .PLL0LOCKEN(1'b1),
        .PLL0OUTCLK(gt0_pll0outclk_i),
        .PLL0OUTREFCLK(gt0_pll0outrefclk_i),
        .PLL0PD(1'b0),
        .PLL0REFCLKLOST(gtpe2_common_0_i_n_5),
        .PLL0REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL0RESET(AR),
        .PLL1FBCLKLOST(NLW_gtpe2_common_0_i_PLL1FBCLKLOST_UNCONNECTED),
        .PLL1LOCK(NLW_gtpe2_common_0_i_PLL1LOCK_UNCONNECTED),
        .PLL1LOCKDETCLK(1'b0),
        .PLL1LOCKEN(1'b1),
        .PLL1OUTCLK(gt0_pll1outclk_i),
        .PLL1OUTREFCLK(gt0_pll1outrefclk_i),
        .PLL1PD(1'b1),
        .PLL1REFCLKLOST(NLW_gtpe2_common_0_i_PLL1REFCLKLOST_UNCONNECTED),
        .PLL1REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL1RESET(1'b0),
        .PLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PLLRSVD2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT(NLW_gtpe2_common_0_i_PMARSVDOUT_UNCONNECTED[15:0]),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(NLW_gtpe2_common_0_i_REFCLKOUTMONITOR0_UNCONNECTED),
        .REFCLKOUTMONITOR1(NLW_gtpe2_common_0_i_REFCLKOUTMONITOR1_UNCONNECTED));
endmodule

module xaui_0_xaui_0_gt_wrapper_GT
   (gt0_eyescandataerror_out,
    xaui_tx_l0_n,
    xaui_tx_l0_p,
    gt0_rxcommadet_out,
    data_in,
    gt0_rxprbserr_out,
    gt0_rxresetdone_out,
    gt0_txdlysresetdone_out,
    gt0_txoutclk_out,
    gt0_txphaligndone_out,
    gt0_txphinitdone_out,
    dclk_0,
    gt0_dmonitorout_out,
    dclk_1,
    dclk_2,
    dclk_3,
    dclk_4,
    dclk_5,
    dclk_6,
    \uclk_mgt_rxbuf_reset_reg[0] ,
    gtrxreset_ss,
    gt0_drpdo,
    D,
    gt0_drp_busy,
    gt0_drprdy,
    dclk_7,
    dclk,
    gt0_eyescanreset_in,
    gt0_eyescantrigger_in,
    xaui_rx_l0_n,
    xaui_rx_l0_p,
    uclk_mgt_tx_reset,
    gt0_pll0outclk_i,
    gt0_pll0outrefclk_i,
    gt0_pll1outclk_i,
    gt0_pll1outrefclk_i,
    gt0_rxcdrhold_in,
    gt3_rxchbonden_in,
    gt0_rxlpmhfhold_in,
    gt0_rxlpmhfovrden_in,
    gt0_rxlpmlfhold_in,
    gt0_rxlpmlfovrden_in,
    gt0_rxlpmreset_in,
    mgt_enable_align,
    gt0_rxpcsreset_in,
    gt0_rxpolarity_in,
    gt0_rxprbscntreset_in,
    gt3_txuserrdy_in,
    CLK,
    gt0_txdlyen_in,
    gt0_txdlysreset_in,
    gt3_txelecidle_in,
    gt0_txinhibit_in,
    gt0_txpcsreset_in,
    gt0_txphalign_in,
    gt0_txphinit_in,
    gt0_txpmareset_in,
    gt0_txpolarity_in,
    gt0_txprbsforceerr_in,
    gt0_loopback_in,
    gt0_rxprbssel_in,
    gt0_txprbssel_in,
    mgt_txdata,
    RXCHBONDO,
    mgt_txcharisk,
    gt0_txdiffctrl_in,
    gt0_txpostcursor_in,
    gt0_txprecursor_in,
    drp_op_done_o_reg,
    AR,
    gt0_rxpmareset_in,
    uclk_mgt_loopback_reg,
    gt0_eyescandataerror_out_0,
    dclk_mgt_rx_reset_inprocess,
    gt0_drpdi,
    gt0_drpaddr,
    gt0_drpwe,
    gt0_drpen,
    gt0_rxrate_in);
  output gt0_eyescandataerror_out;
  output xaui_tx_l0_n;
  output xaui_tx_l0_p;
  output gt0_rxcommadet_out;
  output data_in;
  output gt0_rxprbserr_out;
  output gt0_rxresetdone_out;
  output gt0_txdlysresetdone_out;
  output gt0_txoutclk_out;
  output gt0_txphaligndone_out;
  output gt0_txphinitdone_out;
  output [0:0]dclk_0;
  output [14:0]gt0_dmonitorout_out;
  output [2:0]dclk_1;
  output [15:0]dclk_2;
  output [1:0]dclk_3;
  output [1:0]dclk_4;
  output [1:0]dclk_5;
  output [1:0]dclk_6;
  output \uclk_mgt_rxbuf_reset_reg[0] ;
  output gtrxreset_ss;
  output [15:0]gt0_drpdo;
  output [0:0]D;
  output gt0_drp_busy;
  output gt0_drprdy;
  output dclk_7;
  input dclk;
  input gt0_eyescanreset_in;
  input gt0_eyescantrigger_in;
  input xaui_rx_l0_n;
  input xaui_rx_l0_p;
  input uclk_mgt_tx_reset;
  input gt0_pll0outclk_i;
  input gt0_pll0outrefclk_i;
  input gt0_pll1outclk_i;
  input gt0_pll1outrefclk_i;
  input gt0_rxcdrhold_in;
  input gt3_rxchbonden_in;
  input gt0_rxlpmhfhold_in;
  input gt0_rxlpmhfovrden_in;
  input gt0_rxlpmlfhold_in;
  input gt0_rxlpmlfovrden_in;
  input gt0_rxlpmreset_in;
  input [0:0]mgt_enable_align;
  input gt0_rxpcsreset_in;
  input gt0_rxpolarity_in;
  input gt0_rxprbscntreset_in;
  input gt3_txuserrdy_in;
  input CLK;
  input gt0_txdlyen_in;
  input gt0_txdlysreset_in;
  input gt3_txelecidle_in;
  input gt0_txinhibit_in;
  input gt0_txpcsreset_in;
  input gt0_txphalign_in;
  input gt0_txphinit_in;
  input gt0_txpmareset_in;
  input gt0_txpolarity_in;
  input gt0_txprbsforceerr_in;
  input [2:0]gt0_loopback_in;
  input [2:0]gt0_rxprbssel_in;
  input [2:0]gt0_txprbssel_in;
  input [15:0]mgt_txdata;
  input [3:0]RXCHBONDO;
  input [1:0]mgt_txcharisk;
  input [3:0]gt0_txdiffctrl_in;
  input [4:0]gt0_txpostcursor_in;
  input [4:0]gt0_txprecursor_in;
  input drp_op_done_o_reg;
  input [0:0]AR;
  input gt0_rxpmareset_in;
  input uclk_mgt_loopback_reg;
  input gt0_eyescandataerror_out_0;
  input dclk_mgt_rx_reset_inprocess;
  input [15:0]gt0_drpdi;
  input [8:0]gt0_drpaddr;
  input gt0_drpwe;
  input gt0_drpen;
  input [2:0]gt0_rxrate_in;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRPEN;
  wire DRPWE;
  wire GTRXRESET;
  wire [3:0]RXCHBONDO;
  wire RXPMARESET;
  wire [2:0]RXRATE;
  wire data_in;
  wire dclk;
  wire [0:0]dclk_0;
  wire [2:0]dclk_1;
  wire [15:0]dclk_2;
  wire [1:0]dclk_3;
  wire [1:0]dclk_4;
  wire [1:0]dclk_5;
  wire [1:0]dclk_6;
  wire dclk_7;
  wire dclk_mgt_rx_reset_inprocess;
  wire drp_busy_i1;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire [14:0]gt0_dmonitorout_out;
  wire gt0_drp_busy;
  wire [8:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescandataerror_out_0;
  wire gt0_eyescanreset_in;
  wire gt0_eyescantrigger_in;
  wire [2:0]gt0_loopback_in;
  wire [1:1]gt0_loopback_in3_out;
  wire gt0_pll0outclk_i;
  wire gt0_pll0outrefclk_i;
  wire gt0_pll1outclk_i;
  wire gt0_pll1outrefclk_i;
  wire gt0_rxcdrhold_in;
  wire gt0_rxcommadet_out;
  wire gt0_rxlpmhfhold_in;
  wire gt0_rxlpmhfovrden_in;
  wire gt0_rxlpmlfhold_in;
  wire gt0_rxlpmlfovrden_in;
  wire gt0_rxlpmreset_in;
  wire gt0_rxpcsreset_in;
  wire gt0_rxpmareset_in;
  wire gt0_rxpolarity_in;
  wire gt0_rxprbscntreset_in;
  wire gt0_rxprbserr_out;
  wire [2:0]gt0_rxprbssel_in;
  wire [2:0]gt0_rxrate_in;
  wire gt0_rxresetdone_out;
  wire [3:0]gt0_txdiffctrl_in;
  wire gt0_txdlyen_in;
  wire gt0_txdlysreset_in;
  wire gt0_txdlysresetdone_out;
  wire gt0_txinhibit_in;
  wire gt0_txoutclk_out;
  wire gt0_txpcsreset_in;
  wire gt0_txphalign_in;
  wire gt0_txphaligndone_out;
  wire gt0_txphinit_in;
  wire gt0_txphinitdone_out;
  wire gt0_txpmareset_in;
  wire gt0_txpolarity_in;
  wire [4:0]gt0_txpostcursor_in;
  wire gt0_txprbsforceerr_in;
  wire [2:0]gt0_txprbssel_in;
  wire [4:0]gt0_txprecursor_in;
  wire gt3_rxchbonden_in;
  wire gt3_txelecidle_in;
  wire gt3_txuserrdy_in;
  wire gtpe2_i_n_10;
  wire gtpe2_i_n_11;
  wire gtpe2_i_n_12;
  wire gtpe2_i_n_152;
  wire gtpe2_i_n_153;
  wire gtpe2_i_n_154;
  wire gtpe2_i_n_155;
  wire gtpe2_i_n_24;
  wire gtpe2_i_n_30;
  wire gtpe2_i_n_39;
  wire gtpe2_i_n_40;
  wire gtpe2_i_n_43;
  wire gtpe2_i_n_7;
  wire gtpe2_i_n_8;
  wire gtpe2_i_n_95;
  wire gtpe2_i_n_96;
  wire gtrxrate_seq_i_n_18;
  wire gtrxrate_seq_i_n_21;
  wire gtrxrate_seq_i_n_22;
  wire gtrxrate_seq_i_n_23;
  wire gtrxrate_seq_i_n_24;
  wire gtrxrate_seq_i_n_25;
  wire gtrxrate_seq_i_n_26;
  wire gtrxrate_seq_i_n_27;
  wire gtrxrate_seq_i_n_28;
  wire gtrxrate_seq_i_n_29;
  wire gtrxrate_seq_i_n_30;
  wire gtrxrate_seq_i_n_31;
  wire gtrxrate_seq_i_n_32;
  wire gtrxrate_seq_i_n_33;
  wire gtrxrate_seq_i_n_34;
  wire gtrxrate_seq_i_n_35;
  wire gtrxrate_seq_i_n_36;
  wire gtrxrate_seq_i_n_37;
  wire gtrxrate_seq_i_n_38;
  wire gtrxreset_seq_i_n_28;
  wire gtrxreset_ss;
  wire [0:0]mgt_enable_align;
  wire [1:0]mgt_txcharisk;
  wire [15:0]mgt_txdata;
  wire [2:0]rxrate_out;
  wire uclk_mgt_loopback_reg;
  wire \uclk_mgt_rxbuf_reset_reg[0] ;
  wire uclk_mgt_tx_reset;
  wire xaui_rx_l0_n;
  wire xaui_rx_l0_p;
  wire xaui_tx_l0_n;
  wire xaui_tx_l0_p;
  wire NLW_gtpe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED;
  wire NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gtpe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtpe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISK_UNCONNECTED;
  wire [31:16]NLW_gtpe2_i_RXDATA_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXDATAVALID_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXHEADER_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXSTATUS_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE/stretch_r[2]_i_1 
       (.I0(gt0_txphinitdone_out),
        .O(dclk_7));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_60 \cdc_rxrate_out[0].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[0]),
        .data_out(RXRATE[0]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_61 \cdc_rxrate_out[1].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[1]),
        .data_out(RXRATE[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_62 \cdc_rxrate_out[2].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[2]),
        .data_out(RXRATE[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \core_mgt_rx_reset[0]_i_1 
       (.I0(gt0_rxresetdone_out),
        .O(D));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxrate_seq_i_n_38),
        .Q(drp_busy_i1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxreset_seq_i_n_28),
        .Q(drp_busy_i2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    gt0_drp_busy_INST_0
       (.I0(drp_busy_i1),
        .I1(drp_busy_i2),
        .O(gt0_drp_busy));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(17),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE206001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b001001),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b0),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gtpe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(gt0_dmonitorout_out),
        .DRPADDR(DRPADDR),
        .DRPCLK(dclk),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPRDY(drprdy_i),
        .DRPWE(DRPWE),
        .EYESCANDATAERROR(gt0_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt0_eyescanreset_in),
        .EYESCANTRIGGER(gt0_eyescantrigger_in),
        .GTPRXN(xaui_rx_l0_n),
        .GTPRXP(xaui_rx_l0_p),
        .GTPTXN(xaui_tx_l0_n),
        .GTPTXP(xaui_tx_l0_p),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTRXRESET),
        .GTTXRESET(uclk_mgt_tx_reset),
        .LOOPBACK({gt0_loopback_in[2],gt0_loopback_in3_out,gt0_loopback_in[0]}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtpe2_i_PHYSTATUS_UNCONNECTED),
        .PLL0CLK(gt0_pll0outclk_i),
        .PLL0REFCLK(gt0_pll0outrefclk_i),
        .PLL1CLK(gt0_pll1outclk_i),
        .PLL1REFCLK(gt0_pll1outrefclk_i),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED),
        .PMARSVDOUT1(NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(\uclk_mgt_rxbuf_reset_reg[0] ),
        .RXBUFSTATUS(dclk_1),
        .RXBYTEISALIGNED(gtpe2_i_n_7),
        .RXBYTEREALIGN(gtpe2_i_n_8),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt0_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(gtpe2_i_n_10),
        .RXCHANISALIGNED(gtpe2_i_n_11),
        .RXCHANREALIGN(gtpe2_i_n_12),
        .RXCHARISCOMMA({NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED[3:2],dclk_3}),
        .RXCHARISK({NLW_gtpe2_i_RXCHARISK_UNCONNECTED[3:2],dclk_4}),
        .RXCHBONDEN(gt3_rxchbonden_in),
        .RXCHBONDI(RXCHBONDO),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({gtpe2_i_n_152,gtpe2_i_n_153,gtpe2_i_n_154,gtpe2_i_n_155}),
        .RXCHBONDSLAVE(1'b1),
        .RXCLKCORCNT({gtpe2_i_n_95,gtpe2_i_n_96}),
        .RXCOMINITDET(NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt0_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtpe2_i_RXDATA_UNCONNECTED[31:16],dclk_2}),
        .RXDATAVALID(NLW_gtpe2_i_RXDATAVALID_UNCONNECTED[1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR({NLW_gtpe2_i_RXDISPERR_UNCONNECTED[3:2],dclk_5}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtpe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtpe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMHFHOLD(gt0_rxlpmhfhold_in),
        .RXLPMHFOVRDEN(gt0_rxlpmhfovrden_in),
        .RXLPMLFHOLD(gt0_rxlpmlfhold_in),
        .RXLPMLFOVRDEN(gt0_rxlpmlfovrden_in),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(gt0_rxlpmreset_in),
        .RXMCOMMAALIGNEN(mgt_enable_align),
        .RXNOTINTABLE({NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED[3:2],dclk_6}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtpe2_i_n_24),
        .RXOUTCLKFABRIC(NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(mgt_enable_align),
        .RXPCSRESET(gt0_rxpcsreset_in),
        .RXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(RXPMARESET),
        .RXPMARESETDONE(data_in),
        .RXPOLARITY(gt0_rxpolarity_in),
        .RXPRBSCNTRESET(gt0_rxprbscntreset_in),
        .RXPRBSERR(gt0_rxprbserr_out),
        .RXPRBSSEL(gt0_rxprbssel_in),
        .RXRATE(RXRATE),
        .RXRATEDONE(gtpe2_i_n_30),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt0_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gtpe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(gt3_txuserrdy_in),
        .RXUSRCLK(CLK),
        .RXUSRCLK2(CLK),
        .RXVALID(NLW_gtpe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,mgt_txcharisk}),
        .TXCOMFINISH(NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mgt_txdata}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt0_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(gt0_txdlyen_in),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(gt0_txdlysreset_in),
        .TXDLYSRESETDONE(gt0_txdlysresetdone_out),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt3_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(gt0_txinhibit_in),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gt0_txoutclk_out),
        .TXOUTCLKFABRIC(gtpe2_i_n_39),
        .TXOUTCLKPCS(gtpe2_i_n_40),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt0_txpcsreset_in),
        .TXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(gt0_txphalign_in),
        .TXPHALIGNDONE(gt0_txphaligndone_out),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(gt0_txphinit_in),
        .TXPHINITDONE(gt0_txphinitdone_out),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt0_txpmareset_in),
        .TXPMARESETDONE(gtpe2_i_n_43),
        .TXPOLARITY(gt0_txpolarity_in),
        .TXPOSTCURSOR(gt0_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt0_txprbsforceerr_in),
        .TXPRBSSEL(gt0_txprbssel_in),
        .TXPRECURSOR(gt0_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtpe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(dclk_0),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(gt3_txuserrdy_in),
        .TXUSRCLK(CLK),
        .TXUSRCLK2(CLK));
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_20__2
       (.I0(uclk_mgt_loopback_reg),
        .I1(gt0_loopback_in[1]),
        .O(gt0_loopback_in3_out));
  LUT2 #(
    .INIT(4'h2)) 
    gtpe2_i_i_3__2
       (.I0(gt0_eyescandataerror_out_0),
        .I1(dclk_mgt_rx_reset_inprocess),
        .O(\uclk_mgt_rxbuf_reset_reg[0] ));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_63 gtrxrate_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[4],DRPADDR[0]}),
        .DRPDO(drpdo_i),
        .\FSM_sequential_state_reg[0]_0 (gtrxrate_seq_i_n_36),
        .\FSM_sequential_state_reg[0]_1 (gtrxrate_seq_i_n_37),
        .Q(rxrate_out),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i2(drp_busy_i2),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg(gtrxrate_seq_i_n_38),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drprdy_i(drprdy_i),
        .gt0_drpaddr({gt0_drpaddr[4],gt0_drpaddr[0]}),
        .gt0_drpdi(gt0_drpdi),
        .gt0_drpdo(gt0_drpdo),
        .gt0_drpen(gt0_drpen),
        .gt0_drprdy(gt0_drprdy),
        .gt0_drpwe(gt0_drpwe),
        .gt0_rxrate_in(gt0_rxrate_in),
        .\rd_data_reg[0]_0 (gtrxrate_seq_i_n_21),
        .\rd_data_reg[10]_0 (gtrxrate_seq_i_n_31),
        .\rd_data_reg[11]_0 (gtrxrate_seq_i_n_18),
        .\rd_data_reg[12]_0 (gtrxrate_seq_i_n_32),
        .\rd_data_reg[13]_0 (gtrxrate_seq_i_n_33),
        .\rd_data_reg[14]_0 (gtrxrate_seq_i_n_34),
        .\rd_data_reg[15]_0 (gtrxrate_seq_i_n_35),
        .\rd_data_reg[1]_0 (gtrxrate_seq_i_n_22),
        .\rd_data_reg[2]_0 (gtrxrate_seq_i_n_23),
        .\rd_data_reg[3]_0 (gtrxrate_seq_i_n_24),
        .\rd_data_reg[4]_0 (gtrxrate_seq_i_n_25),
        .\rd_data_reg[5]_0 (gtrxrate_seq_i_n_26),
        .\rd_data_reg[6]_0 (gtrxrate_seq_i_n_27),
        .\rd_data_reg[7]_0 (gtrxrate_seq_i_n_28),
        .\rd_data_reg[8]_0 (gtrxrate_seq_i_n_29),
        .\rd_data_reg[9]_0 (gtrxrate_seq_i_n_30));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_64 gtrxreset_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[8:5],DRPADDR[3:1]}),
        .DRPDO(drpdo_i),
        .GTRXRESET(GTRXRESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg_0(gtrxreset_seq_i_n_28),
        .drp_op_done_o_reg_1(drp_op_done_o_reg),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt0_drpaddr({gt0_drpaddr[8:5],gt0_drpaddr[3:1]}),
        .gtrxreset_ss_reg_0(gtrxreset_ss));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_65 rxpmarst_seq_i
       (.AR(AR),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPWE(DRPWE),
        .RXPMARESET(RXPMARESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i1(drp_busy_i1),
        .drp_op_done(drp_op_done),
        .drp_pma_busy(drp_pma_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt0_eyescandataerror_out(gtrxrate_seq_i_n_35),
        .gt0_eyescandataerror_out_0(gtrxrate_seq_i_n_34),
        .gt0_eyescandataerror_out_1(gtrxrate_seq_i_n_33),
        .gt0_eyescandataerror_out_10(gtrxrate_seq_i_n_24),
        .gt0_eyescandataerror_out_11(gtrxrate_seq_i_n_23),
        .gt0_eyescandataerror_out_12(gtrxrate_seq_i_n_22),
        .gt0_eyescandataerror_out_13(gtrxrate_seq_i_n_21),
        .gt0_eyescandataerror_out_14(gtrxrate_seq_i_n_36),
        .gt0_eyescandataerror_out_15(gtrxrate_seq_i_n_18),
        .gt0_eyescandataerror_out_16(gtrxrate_seq_i_n_37),
        .gt0_eyescandataerror_out_2(gtrxrate_seq_i_n_32),
        .gt0_eyescandataerror_out_3(gtrxrate_seq_i_n_31),
        .gt0_eyescandataerror_out_4(gtrxrate_seq_i_n_30),
        .gt0_eyescandataerror_out_5(gtrxrate_seq_i_n_29),
        .gt0_eyescandataerror_out_6(gtrxrate_seq_i_n_28),
        .gt0_eyescandataerror_out_7(gtrxrate_seq_i_n_27),
        .gt0_eyescandataerror_out_8(gtrxrate_seq_i_n_26),
        .gt0_eyescandataerror_out_9(gtrxrate_seq_i_n_25),
        .gt0_rxpmareset_in(gt0_rxpmareset_in));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT" *) 
module xaui_0_xaui_0_gt_wrapper_GT_24
   (gt1_eyescandataerror_out,
    xaui_tx_l1_n,
    xaui_tx_l1_p,
    gt1_rxcommadet_out,
    data_in,
    gt1_rxprbserr_out,
    gt1_rxresetdone_out,
    gt1_txdlysresetdone_out,
    gt1_txphaligndone_out,
    gt1_txphinitdone_out,
    dclk_0,
    gt1_dmonitorout_out,
    dclk_1,
    dclk_2,
    dclk_3,
    dclk_4,
    RXCHBONDO,
    dclk_5,
    dclk_6,
    gt1_drpdo,
    D,
    gt1_drp_busy,
    gt1_drprdy,
    dclk_7,
    dclk,
    gt1_eyescanreset_in,
    gt1_eyescantrigger_in,
    xaui_rx_l1_n,
    xaui_rx_l1_p,
    uclk_mgt_tx_reset,
    gt0_pll0outclk_i,
    gt0_pll0outrefclk_i,
    gt0_pll1outclk_i,
    gt0_pll1outrefclk_i,
    gt1_eyescandataerror_out_0,
    gt1_rxcdrhold_in,
    gt3_rxchbonden_in,
    gt1_rxlpmhfovrden_in,
    gt1_rxlpmlfovrden_in,
    gt1_rxlpmreset_in,
    mgt_enable_align,
    gt1_rxpcsreset_in,
    gt1_rxpolarity_in,
    gt1_rxprbscntreset_in,
    gt3_txuserrdy_in,
    CLK,
    gt1_txdlysreset_in,
    gt3_txelecidle_in,
    gt0_txinhibit_in,
    gt1_txpcsreset_in,
    gt1_txphalign_in,
    gt1_txphinit_in,
    gt1_txpmareset_in,
    gt1_txpolarity_in,
    gt1_txprbsforceerr_in,
    gt1_loopback_in,
    gt1_rxprbssel_in,
    gt1_txprbssel_in,
    mgt_txdata,
    gt1_eyescandataerror_out_1,
    mgt_txcharisk,
    gt1_txdiffctrl_in,
    gt1_txpostcursor_in,
    gt1_txprecursor_in,
    AR,
    gt1_rxpmareset_in,
    drp_op_done_o_reg,
    uclk_mgt_loopback_reg,
    gt1_drpdi,
    gtrxreset_ss,
    gt1_drpaddr,
    gt1_drpwe,
    gt1_drpen,
    gt1_rxrate_in);
  output gt1_eyescandataerror_out;
  output xaui_tx_l1_n;
  output xaui_tx_l1_p;
  output gt1_rxcommadet_out;
  output data_in;
  output gt1_rxprbserr_out;
  output gt1_rxresetdone_out;
  output gt1_txdlysresetdone_out;
  output gt1_txphaligndone_out;
  output gt1_txphinitdone_out;
  output [0:0]dclk_0;
  output [14:0]gt1_dmonitorout_out;
  output [2:0]dclk_1;
  output [15:0]dclk_2;
  output [1:0]dclk_3;
  output [1:0]dclk_4;
  output [3:0]RXCHBONDO;
  output [1:0]dclk_5;
  output [1:0]dclk_6;
  output [15:0]gt1_drpdo;
  output [0:0]D;
  output gt1_drp_busy;
  output gt1_drprdy;
  output dclk_7;
  input dclk;
  input gt1_eyescanreset_in;
  input gt1_eyescantrigger_in;
  input xaui_rx_l1_n;
  input xaui_rx_l1_p;
  input uclk_mgt_tx_reset;
  input gt0_pll0outclk_i;
  input gt0_pll0outrefclk_i;
  input gt0_pll1outclk_i;
  input gt0_pll1outrefclk_i;
  input gt1_eyescandataerror_out_0;
  input gt1_rxcdrhold_in;
  input gt3_rxchbonden_in;
  input gt1_rxlpmhfovrden_in;
  input gt1_rxlpmlfovrden_in;
  input gt1_rxlpmreset_in;
  input [0:0]mgt_enable_align;
  input gt1_rxpcsreset_in;
  input gt1_rxpolarity_in;
  input gt1_rxprbscntreset_in;
  input gt3_txuserrdy_in;
  input CLK;
  input gt1_txdlysreset_in;
  input gt3_txelecidle_in;
  input gt0_txinhibit_in;
  input gt1_txpcsreset_in;
  input gt1_txphalign_in;
  input gt1_txphinit_in;
  input gt1_txpmareset_in;
  input gt1_txpolarity_in;
  input gt1_txprbsforceerr_in;
  input [2:0]gt1_loopback_in;
  input [2:0]gt1_rxprbssel_in;
  input [2:0]gt1_txprbssel_in;
  input [15:0]mgt_txdata;
  input [3:0]gt1_eyescandataerror_out_1;
  input [1:0]mgt_txcharisk;
  input [3:0]gt1_txdiffctrl_in;
  input [4:0]gt1_txpostcursor_in;
  input [4:0]gt1_txprecursor_in;
  input [0:0]AR;
  input gt1_rxpmareset_in;
  input drp_op_done_o_reg;
  input uclk_mgt_loopback_reg;
  input [15:0]gt1_drpdi;
  input gtrxreset_ss;
  input [8:0]gt1_drpaddr;
  input gt1_drpwe;
  input gt1_drpen;
  input [2:0]gt1_rxrate_in;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRPEN;
  wire DRPWE;
  wire GTRXRESET;
  wire [3:0]RXCHBONDO;
  wire RXPMARESET;
  wire [2:0]RXRATE;
  wire data_in;
  wire dclk;
  wire [0:0]dclk_0;
  wire [2:0]dclk_1;
  wire [15:0]dclk_2;
  wire [1:0]dclk_3;
  wire [1:0]dclk_4;
  wire [1:0]dclk_5;
  wire [1:0]dclk_6;
  wire dclk_7;
  wire drp_busy_i1;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire gt0_pll0outclk_i;
  wire gt0_pll0outrefclk_i;
  wire gt0_pll1outclk_i;
  wire gt0_pll1outrefclk_i;
  wire gt0_txinhibit_in;
  wire [14:0]gt1_dmonitorout_out;
  wire gt1_drp_busy;
  wire [8:0]gt1_drpaddr;
  wire [15:0]gt1_drpdi;
  wire [15:0]gt1_drpdo;
  wire gt1_drpen;
  wire gt1_drprdy;
  wire gt1_drpwe;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescandataerror_out_0;
  wire [3:0]gt1_eyescandataerror_out_1;
  wire gt1_eyescanreset_in;
  wire gt1_eyescantrigger_in;
  wire [2:0]gt1_loopback_in;
  wire [1:1]gt1_loopback_in2_out;
  wire gt1_rxcdrhold_in;
  wire gt1_rxcommadet_out;
  wire gt1_rxlpmhfovrden_in;
  wire gt1_rxlpmlfovrden_in;
  wire gt1_rxlpmreset_in;
  wire gt1_rxpcsreset_in;
  wire gt1_rxpmareset_in;
  wire gt1_rxpolarity_in;
  wire gt1_rxprbscntreset_in;
  wire gt1_rxprbserr_out;
  wire [2:0]gt1_rxprbssel_in;
  wire [2:0]gt1_rxrate_in;
  wire gt1_rxresetdone_out;
  wire [3:0]gt1_txdiffctrl_in;
  wire gt1_txdlysreset_in;
  wire gt1_txdlysresetdone_out;
  wire gt1_txpcsreset_in;
  wire gt1_txphalign_in;
  wire gt1_txphaligndone_out;
  wire gt1_txphinit_in;
  wire gt1_txphinitdone_out;
  wire gt1_txpmareset_in;
  wire gt1_txpolarity_in;
  wire [4:0]gt1_txpostcursor_in;
  wire gt1_txprbsforceerr_in;
  wire [2:0]gt1_txprbssel_in;
  wire [4:0]gt1_txprecursor_in;
  wire gt3_rxchbonden_in;
  wire gt3_txelecidle_in;
  wire gt3_txuserrdy_in;
  wire gtpe2_i_n_10;
  wire gtpe2_i_n_11;
  wire gtpe2_i_n_12;
  wire gtpe2_i_n_24;
  wire gtpe2_i_n_30;
  wire gtpe2_i_n_38;
  wire gtpe2_i_n_39;
  wire gtpe2_i_n_40;
  wire gtpe2_i_n_43;
  wire gtpe2_i_n_7;
  wire gtpe2_i_n_8;
  wire gtpe2_i_n_95;
  wire gtpe2_i_n_96;
  wire gtrxrate_seq_i_n_18;
  wire gtrxrate_seq_i_n_21;
  wire gtrxrate_seq_i_n_22;
  wire gtrxrate_seq_i_n_23;
  wire gtrxrate_seq_i_n_24;
  wire gtrxrate_seq_i_n_25;
  wire gtrxrate_seq_i_n_26;
  wire gtrxrate_seq_i_n_27;
  wire gtrxrate_seq_i_n_28;
  wire gtrxrate_seq_i_n_29;
  wire gtrxrate_seq_i_n_30;
  wire gtrxrate_seq_i_n_31;
  wire gtrxrate_seq_i_n_32;
  wire gtrxrate_seq_i_n_33;
  wire gtrxrate_seq_i_n_34;
  wire gtrxrate_seq_i_n_35;
  wire gtrxrate_seq_i_n_36;
  wire gtrxrate_seq_i_n_37;
  wire gtrxrate_seq_i_n_38;
  wire gtrxreset_seq_i_n_27;
  wire gtrxreset_ss;
  wire [0:0]mgt_enable_align;
  wire [1:0]mgt_txcharisk;
  wire [15:0]mgt_txdata;
  wire [2:0]rxrate_out;
  wire uclk_mgt_loopback_reg;
  wire uclk_mgt_tx_reset;
  wire xaui_rx_l1_n;
  wire xaui_rx_l1_p;
  wire xaui_tx_l1_n;
  wire xaui_tx_l1_p;
  wire NLW_gtpe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED;
  wire NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gtpe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtpe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISK_UNCONNECTED;
  wire [31:16]NLW_gtpe2_i_RXDATA_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXDATAVALID_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXHEADER_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXSTATUS_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE/stretch_r[2]_i_1 
       (.I0(gt1_txphinitdone_out),
        .O(dclk_7));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_48 \cdc_rxrate_out[0].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[0]),
        .data_out(RXRATE[0]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_49 \cdc_rxrate_out[1].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[1]),
        .data_out(RXRATE[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_50 \cdc_rxrate_out[2].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[2]),
        .data_out(RXRATE[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \core_mgt_rx_reset[1]_i_1 
       (.I0(gt1_rxresetdone_out),
        .O(D));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxrate_seq_i_n_38),
        .Q(drp_busy_i1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxreset_seq_i_n_27),
        .Q(drp_busy_i2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    gt1_drp_busy_INST_0
       (.I0(drp_busy_i1),
        .I1(drp_busy_i2),
        .O(gt1_drp_busy));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(17),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE206001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b001001),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b0),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gtpe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(gt1_dmonitorout_out),
        .DRPADDR(DRPADDR),
        .DRPCLK(dclk),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPRDY(drprdy_i),
        .DRPWE(DRPWE),
        .EYESCANDATAERROR(gt1_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt1_eyescanreset_in),
        .EYESCANTRIGGER(gt1_eyescantrigger_in),
        .GTPRXN(xaui_rx_l1_n),
        .GTPRXP(xaui_rx_l1_p),
        .GTPTXN(xaui_tx_l1_n),
        .GTPTXP(xaui_tx_l1_p),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTRXRESET),
        .GTTXRESET(uclk_mgt_tx_reset),
        .LOOPBACK({gt1_loopback_in[2],gt1_loopback_in2_out,gt1_loopback_in[0]}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtpe2_i_PHYSTATUS_UNCONNECTED),
        .PLL0CLK(gt0_pll0outclk_i),
        .PLL0REFCLK(gt0_pll0outrefclk_i),
        .PLL1CLK(gt0_pll1outclk_i),
        .PLL1REFCLK(gt0_pll1outrefclk_i),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED),
        .PMARSVDOUT1(NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(gt1_eyescandataerror_out_0),
        .RXBUFSTATUS(dclk_1),
        .RXBYTEISALIGNED(gtpe2_i_n_7),
        .RXBYTEREALIGN(gtpe2_i_n_8),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt1_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(gtpe2_i_n_10),
        .RXCHANISALIGNED(gtpe2_i_n_11),
        .RXCHANREALIGN(gtpe2_i_n_12),
        .RXCHARISCOMMA({NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED[3:2],dclk_3}),
        .RXCHARISK({NLW_gtpe2_i_RXCHARISK_UNCONNECTED[3:2],dclk_4}),
        .RXCHBONDEN(gt3_rxchbonden_in),
        .RXCHBONDI(gt1_eyescandataerror_out_1),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b1}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO(RXCHBONDO),
        .RXCHBONDSLAVE(1'b1),
        .RXCLKCORCNT({gtpe2_i_n_95,gtpe2_i_n_96}),
        .RXCOMINITDET(NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt1_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtpe2_i_RXDATA_UNCONNECTED[31:16],dclk_2}),
        .RXDATAVALID(NLW_gtpe2_i_RXDATAVALID_UNCONNECTED[1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR({NLW_gtpe2_i_RXDISPERR_UNCONNECTED[3:2],dclk_5}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtpe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtpe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(gt1_rxlpmhfovrden_in),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFOVRDEN(gt1_rxlpmlfovrden_in),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(gt1_rxlpmreset_in),
        .RXMCOMMAALIGNEN(mgt_enable_align),
        .RXNOTINTABLE({NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED[3:2],dclk_6}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtpe2_i_n_24),
        .RXOUTCLKFABRIC(NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(mgt_enable_align),
        .RXPCSRESET(gt1_rxpcsreset_in),
        .RXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(RXPMARESET),
        .RXPMARESETDONE(data_in),
        .RXPOLARITY(gt1_rxpolarity_in),
        .RXPRBSCNTRESET(gt1_rxprbscntreset_in),
        .RXPRBSERR(gt1_rxprbserr_out),
        .RXPRBSSEL(gt1_rxprbssel_in),
        .RXRATE(RXRATE),
        .RXRATEDONE(gtpe2_i_n_30),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt1_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gtpe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(gt3_txuserrdy_in),
        .RXUSRCLK(CLK),
        .RXUSRCLK2(CLK),
        .RXVALID(NLW_gtpe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,mgt_txcharisk}),
        .TXCOMFINISH(NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mgt_txdata}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt1_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(gt1_txdlysreset_in),
        .TXDLYSRESETDONE(gt1_txdlysresetdone_out),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt3_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(gt0_txinhibit_in),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gtpe2_i_n_38),
        .TXOUTCLKFABRIC(gtpe2_i_n_39),
        .TXOUTCLKPCS(gtpe2_i_n_40),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt1_txpcsreset_in),
        .TXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(gt1_txphalign_in),
        .TXPHALIGNDONE(gt1_txphaligndone_out),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(gt1_txphinit_in),
        .TXPHINITDONE(gt1_txphinitdone_out),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt1_txpmareset_in),
        .TXPMARESETDONE(gtpe2_i_n_43),
        .TXPOLARITY(gt1_txpolarity_in),
        .TXPOSTCURSOR(gt1_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt1_txprbsforceerr_in),
        .TXPRBSSEL(gt1_txprbssel_in),
        .TXPRECURSOR(gt1_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtpe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(dclk_0),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(gt3_txuserrdy_in),
        .TXUSRCLK(CLK),
        .TXUSRCLK2(CLK));
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_19__0
       (.I0(uclk_mgt_loopback_reg),
        .I1(gt1_loopback_in[1]),
        .O(gt1_loopback_in2_out));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_51 gtrxrate_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[4],DRPADDR[0]}),
        .DRPDO(drpdo_i),
        .\FSM_sequential_state_reg[0]_0 (gtrxrate_seq_i_n_36),
        .\FSM_sequential_state_reg[0]_1 (gtrxrate_seq_i_n_37),
        .Q(rxrate_out),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i2(drp_busy_i2),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg(gtrxrate_seq_i_n_38),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drprdy_i(drprdy_i),
        .gt1_drpaddr({gt1_drpaddr[4],gt1_drpaddr[0]}),
        .gt1_drpdi(gt1_drpdi),
        .gt1_drpdo(gt1_drpdo),
        .gt1_drpen(gt1_drpen),
        .gt1_drprdy(gt1_drprdy),
        .gt1_drpwe(gt1_drpwe),
        .gt1_rxrate_in(gt1_rxrate_in),
        .\rd_data_reg[0]_0 (gtrxrate_seq_i_n_21),
        .\rd_data_reg[10]_0 (gtrxrate_seq_i_n_31),
        .\rd_data_reg[11]_0 (gtrxrate_seq_i_n_18),
        .\rd_data_reg[12]_0 (gtrxrate_seq_i_n_32),
        .\rd_data_reg[13]_0 (gtrxrate_seq_i_n_33),
        .\rd_data_reg[14]_0 (gtrxrate_seq_i_n_34),
        .\rd_data_reg[15]_0 (gtrxrate_seq_i_n_35),
        .\rd_data_reg[1]_0 (gtrxrate_seq_i_n_22),
        .\rd_data_reg[2]_0 (gtrxrate_seq_i_n_23),
        .\rd_data_reg[3]_0 (gtrxrate_seq_i_n_24),
        .\rd_data_reg[4]_0 (gtrxrate_seq_i_n_25),
        .\rd_data_reg[5]_0 (gtrxrate_seq_i_n_26),
        .\rd_data_reg[6]_0 (gtrxrate_seq_i_n_27),
        .\rd_data_reg[7]_0 (gtrxrate_seq_i_n_28),
        .\rd_data_reg[8]_0 (gtrxrate_seq_i_n_29),
        .\rd_data_reg[9]_0 (gtrxrate_seq_i_n_30));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_52 gtrxreset_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[8:5],DRPADDR[3:1]}),
        .DRPDO(drpdo_i),
        .GTRXRESET(GTRXRESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg_0(gtrxreset_seq_i_n_27),
        .drp_op_done_o_reg_1(drp_op_done_o_reg),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt1_drpaddr({gt1_drpaddr[8:5],gt1_drpaddr[3:1]}),
        .gtrxreset_ss(gtrxreset_ss));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_53 rxpmarst_seq_i
       (.AR(AR),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPWE(DRPWE),
        .RXPMARESET(RXPMARESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i1(drp_busy_i1),
        .drp_op_done(drp_op_done),
        .drp_pma_busy(drp_pma_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt1_eyescandataerror_out(gtrxrate_seq_i_n_35),
        .gt1_eyescandataerror_out_0(gtrxrate_seq_i_n_34),
        .gt1_eyescandataerror_out_1(gtrxrate_seq_i_n_33),
        .gt1_eyescandataerror_out_10(gtrxrate_seq_i_n_24),
        .gt1_eyescandataerror_out_11(gtrxrate_seq_i_n_23),
        .gt1_eyescandataerror_out_12(gtrxrate_seq_i_n_22),
        .gt1_eyescandataerror_out_13(gtrxrate_seq_i_n_21),
        .gt1_eyescandataerror_out_14(gtrxrate_seq_i_n_36),
        .gt1_eyescandataerror_out_15(gtrxrate_seq_i_n_18),
        .gt1_eyescandataerror_out_16(gtrxrate_seq_i_n_37),
        .gt1_eyescandataerror_out_2(gtrxrate_seq_i_n_32),
        .gt1_eyescandataerror_out_3(gtrxrate_seq_i_n_31),
        .gt1_eyescandataerror_out_4(gtrxrate_seq_i_n_30),
        .gt1_eyescandataerror_out_5(gtrxrate_seq_i_n_29),
        .gt1_eyescandataerror_out_6(gtrxrate_seq_i_n_28),
        .gt1_eyescandataerror_out_7(gtrxrate_seq_i_n_27),
        .gt1_eyescandataerror_out_8(gtrxrate_seq_i_n_26),
        .gt1_eyescandataerror_out_9(gtrxrate_seq_i_n_25),
        .gt1_rxpmareset_in(gt1_rxpmareset_in));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT" *) 
module xaui_0_xaui_0_gt_wrapper_GT_25
   (gt2_eyescandataerror_out,
    xaui_tx_l2_n,
    xaui_tx_l2_p,
    gt2_rxcommadet_out,
    data_in,
    gt2_rxprbserr_out,
    gt2_rxresetdone_out,
    gt2_txdlysresetdone_out,
    gt2_txphaligndone_out,
    gt2_txphinitdone_out,
    dclk_0,
    gt2_dmonitorout_out,
    dclk_1,
    dclk_2,
    dclk_3,
    dclk_4,
    dclk_5,
    dclk_6,
    dclk_7,
    gt2_drpdo,
    D,
    gt2_drp_busy,
    gt2_drprdy,
    dclk_8,
    dclk,
    gt2_eyescanreset_in,
    gt2_eyescantrigger_in,
    xaui_rx_l2_n,
    xaui_rx_l2_p,
    uclk_mgt_tx_reset,
    gt0_pll0outclk_i,
    gt0_pll0outrefclk_i,
    gt0_pll1outclk_i,
    gt0_pll1outrefclk_i,
    gt2_eyescandataerror_out_0,
    gt2_rxcdrhold_in,
    gt3_rxchbonden_in,
    gt2_rxlpmhfhold_in,
    gt2_rxlpmhfovrden_in,
    gt2_rxlpmlfhold_in,
    gt2_rxlpmlfovrden_in,
    gt2_rxlpmreset_in,
    mgt_enable_align,
    gt2_rxpcsreset_in,
    gt2_rxpolarity_in,
    gt2_rxprbscntreset_in,
    gt3_txuserrdy_in,
    CLK,
    gt2_txdlysreset_in,
    gt3_txelecidle_in,
    gt0_txinhibit_in,
    gt2_txpcsreset_in,
    gt2_txphalign_in,
    gt2_txphinit_in,
    gt2_txpmareset_in,
    gt2_txpolarity_in,
    gt2_txprbsforceerr_in,
    gt2_loopback_in,
    gt2_rxprbssel_in,
    gt2_txprbssel_in,
    mgt_txdata,
    mgt_txcharisk,
    gt2_txdiffctrl_in,
    gt2_txpostcursor_in,
    gt2_txprecursor_in,
    AR,
    gt2_rxpmareset_in,
    drp_op_done_o_reg,
    uclk_mgt_loopback_reg,
    gt2_drpdi,
    gtrxreset_ss,
    gt2_drpaddr,
    gt2_drpwe,
    gt2_drpen,
    gt2_rxrate_in);
  output gt2_eyescandataerror_out;
  output xaui_tx_l2_n;
  output xaui_tx_l2_p;
  output gt2_rxcommadet_out;
  output data_in;
  output gt2_rxprbserr_out;
  output gt2_rxresetdone_out;
  output gt2_txdlysresetdone_out;
  output gt2_txphaligndone_out;
  output gt2_txphinitdone_out;
  output [0:0]dclk_0;
  output [14:0]gt2_dmonitorout_out;
  output [2:0]dclk_1;
  output [15:0]dclk_2;
  output [1:0]dclk_3;
  output [1:0]dclk_4;
  output [3:0]dclk_5;
  output [1:0]dclk_6;
  output [1:0]dclk_7;
  output [15:0]gt2_drpdo;
  output [0:0]D;
  output gt2_drp_busy;
  output gt2_drprdy;
  output dclk_8;
  input dclk;
  input gt2_eyescanreset_in;
  input gt2_eyescantrigger_in;
  input xaui_rx_l2_n;
  input xaui_rx_l2_p;
  input uclk_mgt_tx_reset;
  input gt0_pll0outclk_i;
  input gt0_pll0outrefclk_i;
  input gt0_pll1outclk_i;
  input gt0_pll1outrefclk_i;
  input gt2_eyescandataerror_out_0;
  input gt2_rxcdrhold_in;
  input gt3_rxchbonden_in;
  input gt2_rxlpmhfhold_in;
  input gt2_rxlpmhfovrden_in;
  input gt2_rxlpmlfhold_in;
  input gt2_rxlpmlfovrden_in;
  input gt2_rxlpmreset_in;
  input [0:0]mgt_enable_align;
  input gt2_rxpcsreset_in;
  input gt2_rxpolarity_in;
  input gt2_rxprbscntreset_in;
  input gt3_txuserrdy_in;
  input CLK;
  input gt2_txdlysreset_in;
  input gt3_txelecidle_in;
  input gt0_txinhibit_in;
  input gt2_txpcsreset_in;
  input gt2_txphalign_in;
  input gt2_txphinit_in;
  input gt2_txpmareset_in;
  input gt2_txpolarity_in;
  input gt2_txprbsforceerr_in;
  input [2:0]gt2_loopback_in;
  input [2:0]gt2_rxprbssel_in;
  input [2:0]gt2_txprbssel_in;
  input [15:0]mgt_txdata;
  input [1:0]mgt_txcharisk;
  input [3:0]gt2_txdiffctrl_in;
  input [4:0]gt2_txpostcursor_in;
  input [4:0]gt2_txprecursor_in;
  input [0:0]AR;
  input gt2_rxpmareset_in;
  input drp_op_done_o_reg;
  input uclk_mgt_loopback_reg;
  input [15:0]gt2_drpdi;
  input gtrxreset_ss;
  input [8:0]gt2_drpaddr;
  input gt2_drpwe;
  input gt2_drpen;
  input [2:0]gt2_rxrate_in;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRPEN;
  wire DRPWE;
  wire GTRXRESET;
  wire RXPMARESET;
  wire [2:0]RXRATE;
  wire data_in;
  wire dclk;
  wire [0:0]dclk_0;
  wire [2:0]dclk_1;
  wire [15:0]dclk_2;
  wire [1:0]dclk_3;
  wire [1:0]dclk_4;
  wire [3:0]dclk_5;
  wire [1:0]dclk_6;
  wire [1:0]dclk_7;
  wire dclk_8;
  wire drp_busy_i1;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire gt0_pll0outclk_i;
  wire gt0_pll0outrefclk_i;
  wire gt0_pll1outclk_i;
  wire gt0_pll1outrefclk_i;
  wire gt0_txinhibit_in;
  wire [14:0]gt2_dmonitorout_out;
  wire gt2_drp_busy;
  wire [8:0]gt2_drpaddr;
  wire [15:0]gt2_drpdi;
  wire [15:0]gt2_drpdo;
  wire gt2_drpen;
  wire gt2_drprdy;
  wire gt2_drpwe;
  wire gt2_eyescandataerror_out;
  wire gt2_eyescandataerror_out_0;
  wire gt2_eyescanreset_in;
  wire gt2_eyescantrigger_in;
  wire [2:0]gt2_loopback_in;
  wire [1:1]gt2_loopback_in1_out;
  wire gt2_rxcdrhold_in;
  wire gt2_rxcommadet_out;
  wire gt2_rxlpmhfhold_in;
  wire gt2_rxlpmhfovrden_in;
  wire gt2_rxlpmlfhold_in;
  wire gt2_rxlpmlfovrden_in;
  wire gt2_rxlpmreset_in;
  wire gt2_rxpcsreset_in;
  wire gt2_rxpmareset_in;
  wire gt2_rxpolarity_in;
  wire gt2_rxprbscntreset_in;
  wire gt2_rxprbserr_out;
  wire [2:0]gt2_rxprbssel_in;
  wire [2:0]gt2_rxrate_in;
  wire gt2_rxresetdone_out;
  wire [3:0]gt2_txdiffctrl_in;
  wire gt2_txdlysreset_in;
  wire gt2_txdlysresetdone_out;
  wire gt2_txpcsreset_in;
  wire gt2_txphalign_in;
  wire gt2_txphaligndone_out;
  wire gt2_txphinit_in;
  wire gt2_txphinitdone_out;
  wire gt2_txpmareset_in;
  wire gt2_txpolarity_in;
  wire [4:0]gt2_txpostcursor_in;
  wire gt2_txprbsforceerr_in;
  wire [2:0]gt2_txprbssel_in;
  wire [4:0]gt2_txprecursor_in;
  wire gt3_rxchbonden_in;
  wire gt3_txelecidle_in;
  wire gt3_txuserrdy_in;
  wire gtpe2_i_n_10;
  wire gtpe2_i_n_11;
  wire gtpe2_i_n_12;
  wire gtpe2_i_n_24;
  wire gtpe2_i_n_30;
  wire gtpe2_i_n_38;
  wire gtpe2_i_n_39;
  wire gtpe2_i_n_40;
  wire gtpe2_i_n_43;
  wire gtpe2_i_n_7;
  wire gtpe2_i_n_8;
  wire gtpe2_i_n_95;
  wire gtpe2_i_n_96;
  wire gtrxrate_seq_i_n_18;
  wire gtrxrate_seq_i_n_21;
  wire gtrxrate_seq_i_n_22;
  wire gtrxrate_seq_i_n_23;
  wire gtrxrate_seq_i_n_24;
  wire gtrxrate_seq_i_n_25;
  wire gtrxrate_seq_i_n_26;
  wire gtrxrate_seq_i_n_27;
  wire gtrxrate_seq_i_n_28;
  wire gtrxrate_seq_i_n_29;
  wire gtrxrate_seq_i_n_30;
  wire gtrxrate_seq_i_n_31;
  wire gtrxrate_seq_i_n_32;
  wire gtrxrate_seq_i_n_33;
  wire gtrxrate_seq_i_n_34;
  wire gtrxrate_seq_i_n_35;
  wire gtrxrate_seq_i_n_36;
  wire gtrxrate_seq_i_n_37;
  wire gtrxrate_seq_i_n_38;
  wire gtrxreset_seq_i_n_27;
  wire gtrxreset_ss;
  wire [0:0]mgt_enable_align;
  wire [1:0]mgt_txcharisk;
  wire [15:0]mgt_txdata;
  wire [2:0]rxrate_out;
  wire uclk_mgt_loopback_reg;
  wire uclk_mgt_tx_reset;
  wire xaui_rx_l2_n;
  wire xaui_rx_l2_p;
  wire xaui_tx_l2_n;
  wire xaui_tx_l2_p;
  wire NLW_gtpe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED;
  wire NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gtpe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtpe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISK_UNCONNECTED;
  wire [31:16]NLW_gtpe2_i_RXDATA_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXDATAVALID_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXHEADER_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXSTATUS_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE/stretch_r[2]_i_1 
       (.I0(gt2_txphinitdone_out),
        .O(dclk_8));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_36 \cdc_rxrate_out[0].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[0]),
        .data_out(RXRATE[0]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_37 \cdc_rxrate_out[1].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[1]),
        .data_out(RXRATE[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_38 \cdc_rxrate_out[2].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[2]),
        .data_out(RXRATE[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \core_mgt_rx_reset[2]_i_1 
       (.I0(gt2_rxresetdone_out),
        .O(D));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxrate_seq_i_n_38),
        .Q(drp_busy_i1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxreset_seq_i_n_27),
        .Q(drp_busy_i2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    gt2_drp_busy_INST_0
       (.I0(drp_busy_i1),
        .I1(drp_busy_i2),
        .O(gt2_drp_busy));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(17),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE206001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b001001),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b0),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gtpe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(gt2_dmonitorout_out),
        .DRPADDR(DRPADDR),
        .DRPCLK(dclk),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPRDY(drprdy_i),
        .DRPWE(DRPWE),
        .EYESCANDATAERROR(gt2_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt2_eyescanreset_in),
        .EYESCANTRIGGER(gt2_eyescantrigger_in),
        .GTPRXN(xaui_rx_l2_n),
        .GTPRXP(xaui_rx_l2_p),
        .GTPTXN(xaui_tx_l2_n),
        .GTPTXP(xaui_tx_l2_p),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTRXRESET),
        .GTTXRESET(uclk_mgt_tx_reset),
        .LOOPBACK({gt2_loopback_in[2],gt2_loopback_in1_out,gt2_loopback_in[0]}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtpe2_i_PHYSTATUS_UNCONNECTED),
        .PLL0CLK(gt0_pll0outclk_i),
        .PLL0REFCLK(gt0_pll0outrefclk_i),
        .PLL1CLK(gt0_pll1outclk_i),
        .PLL1REFCLK(gt0_pll1outrefclk_i),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED),
        .PMARSVDOUT1(NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(gt2_eyescandataerror_out_0),
        .RXBUFSTATUS(dclk_1),
        .RXBYTEISALIGNED(gtpe2_i_n_7),
        .RXBYTEREALIGN(gtpe2_i_n_8),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt2_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(gtpe2_i_n_10),
        .RXCHANISALIGNED(gtpe2_i_n_11),
        .RXCHANREALIGN(gtpe2_i_n_12),
        .RXCHARISCOMMA({NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED[3:2],dclk_3}),
        .RXCHARISK({NLW_gtpe2_i_RXCHARISK_UNCONNECTED[3:2],dclk_4}),
        .RXCHBONDEN(gt3_rxchbonden_in),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b1,1'b0}),
        .RXCHBONDMASTER(1'b1),
        .RXCHBONDO(dclk_5),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT({gtpe2_i_n_95,gtpe2_i_n_96}),
        .RXCOMINITDET(NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt2_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtpe2_i_RXDATA_UNCONNECTED[31:16],dclk_2}),
        .RXDATAVALID(NLW_gtpe2_i_RXDATAVALID_UNCONNECTED[1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR({NLW_gtpe2_i_RXDISPERR_UNCONNECTED[3:2],dclk_6}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtpe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtpe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMHFHOLD(gt2_rxlpmhfhold_in),
        .RXLPMHFOVRDEN(gt2_rxlpmhfovrden_in),
        .RXLPMLFHOLD(gt2_rxlpmlfhold_in),
        .RXLPMLFOVRDEN(gt2_rxlpmlfovrden_in),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(gt2_rxlpmreset_in),
        .RXMCOMMAALIGNEN(mgt_enable_align),
        .RXNOTINTABLE({NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED[3:2],dclk_7}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtpe2_i_n_24),
        .RXOUTCLKFABRIC(NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(mgt_enable_align),
        .RXPCSRESET(gt2_rxpcsreset_in),
        .RXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(RXPMARESET),
        .RXPMARESETDONE(data_in),
        .RXPOLARITY(gt2_rxpolarity_in),
        .RXPRBSCNTRESET(gt2_rxprbscntreset_in),
        .RXPRBSERR(gt2_rxprbserr_out),
        .RXPRBSSEL(gt2_rxprbssel_in),
        .RXRATE(RXRATE),
        .RXRATEDONE(gtpe2_i_n_30),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt2_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gtpe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(gt3_txuserrdy_in),
        .RXUSRCLK(CLK),
        .RXUSRCLK2(CLK),
        .RXVALID(NLW_gtpe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,mgt_txcharisk}),
        .TXCOMFINISH(NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mgt_txdata}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt2_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(gt2_txdlysreset_in),
        .TXDLYSRESETDONE(gt2_txdlysresetdone_out),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt3_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(gt0_txinhibit_in),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gtpe2_i_n_38),
        .TXOUTCLKFABRIC(gtpe2_i_n_39),
        .TXOUTCLKPCS(gtpe2_i_n_40),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt2_txpcsreset_in),
        .TXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(gt2_txphalign_in),
        .TXPHALIGNDONE(gt2_txphaligndone_out),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(gt2_txphinit_in),
        .TXPHINITDONE(gt2_txphinitdone_out),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt2_txpmareset_in),
        .TXPMARESETDONE(gtpe2_i_n_43),
        .TXPOLARITY(gt2_txpolarity_in),
        .TXPOSTCURSOR(gt2_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt2_txprbsforceerr_in),
        .TXPRBSSEL(gt2_txprbssel_in),
        .TXPRECURSOR(gt2_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtpe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(dclk_0),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(gt3_txuserrdy_in),
        .TXUSRCLK(CLK),
        .TXUSRCLK2(CLK));
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_19__1
       (.I0(uclk_mgt_loopback_reg),
        .I1(gt2_loopback_in[1]),
        .O(gt2_loopback_in1_out));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_39 gtrxrate_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[4],DRPADDR[0]}),
        .DRPDO(drpdo_i),
        .\FSM_sequential_state_reg[0]_0 (gtrxrate_seq_i_n_36),
        .\FSM_sequential_state_reg[0]_1 (gtrxrate_seq_i_n_37),
        .Q(rxrate_out),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i2(drp_busy_i2),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg(gtrxrate_seq_i_n_38),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drprdy_i(drprdy_i),
        .gt2_drpaddr({gt2_drpaddr[4],gt2_drpaddr[0]}),
        .gt2_drpdi(gt2_drpdi),
        .gt2_drpdo(gt2_drpdo),
        .gt2_drpen(gt2_drpen),
        .gt2_drprdy(gt2_drprdy),
        .gt2_drpwe(gt2_drpwe),
        .gt2_rxrate_in(gt2_rxrate_in),
        .\rd_data_reg[0]_0 (gtrxrate_seq_i_n_21),
        .\rd_data_reg[10]_0 (gtrxrate_seq_i_n_31),
        .\rd_data_reg[11]_0 (gtrxrate_seq_i_n_18),
        .\rd_data_reg[12]_0 (gtrxrate_seq_i_n_32),
        .\rd_data_reg[13]_0 (gtrxrate_seq_i_n_33),
        .\rd_data_reg[14]_0 (gtrxrate_seq_i_n_34),
        .\rd_data_reg[15]_0 (gtrxrate_seq_i_n_35),
        .\rd_data_reg[1]_0 (gtrxrate_seq_i_n_22),
        .\rd_data_reg[2]_0 (gtrxrate_seq_i_n_23),
        .\rd_data_reg[3]_0 (gtrxrate_seq_i_n_24),
        .\rd_data_reg[4]_0 (gtrxrate_seq_i_n_25),
        .\rd_data_reg[5]_0 (gtrxrate_seq_i_n_26),
        .\rd_data_reg[6]_0 (gtrxrate_seq_i_n_27),
        .\rd_data_reg[7]_0 (gtrxrate_seq_i_n_28),
        .\rd_data_reg[8]_0 (gtrxrate_seq_i_n_29),
        .\rd_data_reg[9]_0 (gtrxrate_seq_i_n_30));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_40 gtrxreset_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[8:5],DRPADDR[3:1]}),
        .DRPDO(drpdo_i),
        .GTRXRESET(GTRXRESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg_0(gtrxreset_seq_i_n_27),
        .drp_op_done_o_reg_1(drp_op_done_o_reg),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt2_drpaddr({gt2_drpaddr[8:5],gt2_drpaddr[3:1]}),
        .gtrxreset_ss(gtrxreset_ss));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_41 rxpmarst_seq_i
       (.AR(AR),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPWE(DRPWE),
        .RXPMARESET(RXPMARESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i1(drp_busy_i1),
        .drp_op_done(drp_op_done),
        .drp_pma_busy(drp_pma_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt2_eyescandataerror_out(gtrxrate_seq_i_n_35),
        .gt2_eyescandataerror_out_0(gtrxrate_seq_i_n_34),
        .gt2_eyescandataerror_out_1(gtrxrate_seq_i_n_33),
        .gt2_eyescandataerror_out_10(gtrxrate_seq_i_n_24),
        .gt2_eyescandataerror_out_11(gtrxrate_seq_i_n_23),
        .gt2_eyescandataerror_out_12(gtrxrate_seq_i_n_22),
        .gt2_eyescandataerror_out_13(gtrxrate_seq_i_n_21),
        .gt2_eyescandataerror_out_14(gtrxrate_seq_i_n_36),
        .gt2_eyescandataerror_out_15(gtrxrate_seq_i_n_18),
        .gt2_eyescandataerror_out_16(gtrxrate_seq_i_n_37),
        .gt2_eyescandataerror_out_2(gtrxrate_seq_i_n_32),
        .gt2_eyescandataerror_out_3(gtrxrate_seq_i_n_31),
        .gt2_eyescandataerror_out_4(gtrxrate_seq_i_n_30),
        .gt2_eyescandataerror_out_5(gtrxrate_seq_i_n_29),
        .gt2_eyescandataerror_out_6(gtrxrate_seq_i_n_28),
        .gt2_eyescandataerror_out_7(gtrxrate_seq_i_n_27),
        .gt2_eyescandataerror_out_8(gtrxrate_seq_i_n_26),
        .gt2_eyescandataerror_out_9(gtrxrate_seq_i_n_25),
        .gt2_rxpmareset_in(gt2_rxpmareset_in));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT" *) 
module xaui_0_xaui_0_gt_wrapper_GT_26
   (gt3_eyescandataerror_out,
    xaui_tx_l3_n,
    xaui_tx_l3_p,
    gt3_rxcommadet_out,
    data_in,
    gt3_rxprbserr_out,
    gt3_rxresetdone_out,
    gt3_txdlysresetdone_out,
    gt3_txphaligndone_out,
    gt3_txphinitdone_out,
    dclk_0,
    gt3_dmonitorout_out,
    dclk_1,
    dclk_2,
    dclk_3,
    dclk_4,
    dclk_5,
    dclk_6,
    gt3_drpdo,
    D,
    gt3_drp_busy,
    gt3_drprdy,
    dclk_7,
    dclk,
    gt3_eyescanreset_in,
    gt3_eyescantrigger_in,
    xaui_rx_l3_n,
    xaui_rx_l3_p,
    uclk_mgt_tx_reset,
    gt0_pll0outclk_i,
    gt0_pll0outrefclk_i,
    gt0_pll1outclk_i,
    gt0_pll1outrefclk_i,
    gt3_eyescandataerror_out_0,
    gt3_rxcdrhold_in,
    gt3_rxchbonden_in,
    gt3_rxlpmhfhold_in,
    gt3_rxlpmhfovrden_in,
    gt3_rxlpmlfhold_in,
    gt3_rxlpmlfovrden_in,
    gt3_rxlpmreset_in,
    mgt_enable_align,
    gt3_rxpcsreset_in,
    gt3_rxpolarity_in,
    gt3_rxprbscntreset_in,
    gt3_txuserrdy_in,
    CLK,
    gt3_txdlysreset_in,
    gt3_txelecidle_in,
    gt0_txinhibit_in,
    gt3_txpcsreset_in,
    gt3_txphalign_in,
    gt3_txphinit_in,
    gt3_txpmareset_in,
    gt3_txpolarity_in,
    gt3_txprbsforceerr_in,
    gt3_loopback_in,
    gt3_rxprbssel_in,
    gt3_txprbssel_in,
    mgt_txdata,
    gt3_eyescandataerror_out_1,
    mgt_txcharisk,
    gt3_txdiffctrl_in,
    gt3_txpostcursor_in,
    gt3_txprecursor_in,
    AR,
    gt3_rxpmareset_in,
    drp_op_done_o_reg,
    uclk_mgt_loopback_reg,
    gt3_drpdi,
    gtrxreset_ss,
    gt3_drpaddr,
    gt3_drpwe,
    gt3_drpen,
    gt3_rxrate_in);
  output gt3_eyescandataerror_out;
  output xaui_tx_l3_n;
  output xaui_tx_l3_p;
  output gt3_rxcommadet_out;
  output data_in;
  output gt3_rxprbserr_out;
  output gt3_rxresetdone_out;
  output gt3_txdlysresetdone_out;
  output gt3_txphaligndone_out;
  output gt3_txphinitdone_out;
  output [0:0]dclk_0;
  output [14:0]gt3_dmonitorout_out;
  output [2:0]dclk_1;
  output [15:0]dclk_2;
  output [1:0]dclk_3;
  output [1:0]dclk_4;
  output [1:0]dclk_5;
  output [1:0]dclk_6;
  output [15:0]gt3_drpdo;
  output [0:0]D;
  output gt3_drp_busy;
  output gt3_drprdy;
  output dclk_7;
  input dclk;
  input gt3_eyescanreset_in;
  input gt3_eyescantrigger_in;
  input xaui_rx_l3_n;
  input xaui_rx_l3_p;
  input uclk_mgt_tx_reset;
  input gt0_pll0outclk_i;
  input gt0_pll0outrefclk_i;
  input gt0_pll1outclk_i;
  input gt0_pll1outrefclk_i;
  input gt3_eyescandataerror_out_0;
  input gt3_rxcdrhold_in;
  input gt3_rxchbonden_in;
  input gt3_rxlpmhfhold_in;
  input gt3_rxlpmhfovrden_in;
  input gt3_rxlpmlfhold_in;
  input gt3_rxlpmlfovrden_in;
  input gt3_rxlpmreset_in;
  input [0:0]mgt_enable_align;
  input gt3_rxpcsreset_in;
  input gt3_rxpolarity_in;
  input gt3_rxprbscntreset_in;
  input gt3_txuserrdy_in;
  input CLK;
  input gt3_txdlysreset_in;
  input gt3_txelecidle_in;
  input gt0_txinhibit_in;
  input gt3_txpcsreset_in;
  input gt3_txphalign_in;
  input gt3_txphinit_in;
  input gt3_txpmareset_in;
  input gt3_txpolarity_in;
  input gt3_txprbsforceerr_in;
  input [2:0]gt3_loopback_in;
  input [2:0]gt3_rxprbssel_in;
  input [2:0]gt3_txprbssel_in;
  input [15:0]mgt_txdata;
  input [3:0]gt3_eyescandataerror_out_1;
  input [1:0]mgt_txcharisk;
  input [3:0]gt3_txdiffctrl_in;
  input [4:0]gt3_txpostcursor_in;
  input [4:0]gt3_txprecursor_in;
  input [0:0]AR;
  input gt3_rxpmareset_in;
  input drp_op_done_o_reg;
  input uclk_mgt_loopback_reg;
  input [15:0]gt3_drpdi;
  input gtrxreset_ss;
  input [8:0]gt3_drpaddr;
  input gt3_drpwe;
  input gt3_drpen;
  input [2:0]gt3_rxrate_in;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]D;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRPEN;
  wire DRPWE;
  wire GTRXRESET;
  wire RXPMARESET;
  wire [2:0]RXRATE;
  wire data_in;
  wire dclk;
  wire [0:0]dclk_0;
  wire [2:0]dclk_1;
  wire [15:0]dclk_2;
  wire [1:0]dclk_3;
  wire [1:0]dclk_4;
  wire [1:0]dclk_5;
  wire [1:0]dclk_6;
  wire dclk_7;
  wire drp_busy_i1;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire [15:0]drpdo_i;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire gt0_pll0outclk_i;
  wire gt0_pll0outrefclk_i;
  wire gt0_pll1outclk_i;
  wire gt0_pll1outrefclk_i;
  wire gt0_txinhibit_in;
  wire [14:0]gt3_dmonitorout_out;
  wire gt3_drp_busy;
  wire [8:0]gt3_drpaddr;
  wire [15:0]gt3_drpdi;
  wire [15:0]gt3_drpdo;
  wire gt3_drpen;
  wire gt3_drprdy;
  wire gt3_drpwe;
  wire gt3_eyescandataerror_out;
  wire gt3_eyescandataerror_out_0;
  wire [3:0]gt3_eyescandataerror_out_1;
  wire gt3_eyescanreset_in;
  wire gt3_eyescantrigger_in;
  wire [2:0]gt3_loopback_in;
  wire [1:1]gt3_loopback_in0_out;
  wire gt3_rxcdrhold_in;
  wire gt3_rxchbonden_in;
  wire gt3_rxcommadet_out;
  wire gt3_rxlpmhfhold_in;
  wire gt3_rxlpmhfovrden_in;
  wire gt3_rxlpmlfhold_in;
  wire gt3_rxlpmlfovrden_in;
  wire gt3_rxlpmreset_in;
  wire gt3_rxpcsreset_in;
  wire gt3_rxpmareset_in;
  wire gt3_rxpolarity_in;
  wire gt3_rxprbscntreset_in;
  wire gt3_rxprbserr_out;
  wire [2:0]gt3_rxprbssel_in;
  wire [2:0]gt3_rxrate_in;
  wire gt3_rxresetdone_out;
  wire [3:0]gt3_txdiffctrl_in;
  wire gt3_txdlysreset_in;
  wire gt3_txdlysresetdone_out;
  wire gt3_txelecidle_in;
  wire gt3_txpcsreset_in;
  wire gt3_txphalign_in;
  wire gt3_txphaligndone_out;
  wire gt3_txphinit_in;
  wire gt3_txphinitdone_out;
  wire gt3_txpmareset_in;
  wire gt3_txpolarity_in;
  wire [4:0]gt3_txpostcursor_in;
  wire gt3_txprbsforceerr_in;
  wire [2:0]gt3_txprbssel_in;
  wire [4:0]gt3_txprecursor_in;
  wire gt3_txuserrdy_in;
  wire gtpe2_i_n_10;
  wire gtpe2_i_n_11;
  wire gtpe2_i_n_12;
  wire gtpe2_i_n_152;
  wire gtpe2_i_n_153;
  wire gtpe2_i_n_154;
  wire gtpe2_i_n_155;
  wire gtpe2_i_n_24;
  wire gtpe2_i_n_30;
  wire gtpe2_i_n_38;
  wire gtpe2_i_n_39;
  wire gtpe2_i_n_40;
  wire gtpe2_i_n_43;
  wire gtpe2_i_n_7;
  wire gtpe2_i_n_8;
  wire gtpe2_i_n_95;
  wire gtpe2_i_n_96;
  wire gtrxrate_seq_i_n_18;
  wire gtrxrate_seq_i_n_21;
  wire gtrxrate_seq_i_n_22;
  wire gtrxrate_seq_i_n_23;
  wire gtrxrate_seq_i_n_24;
  wire gtrxrate_seq_i_n_25;
  wire gtrxrate_seq_i_n_26;
  wire gtrxrate_seq_i_n_27;
  wire gtrxrate_seq_i_n_28;
  wire gtrxrate_seq_i_n_29;
  wire gtrxrate_seq_i_n_30;
  wire gtrxrate_seq_i_n_31;
  wire gtrxrate_seq_i_n_32;
  wire gtrxrate_seq_i_n_33;
  wire gtrxrate_seq_i_n_34;
  wire gtrxrate_seq_i_n_35;
  wire gtrxrate_seq_i_n_36;
  wire gtrxrate_seq_i_n_37;
  wire gtrxrate_seq_i_n_38;
  wire gtrxreset_seq_i_n_27;
  wire gtrxreset_ss;
  wire [0:0]mgt_enable_align;
  wire [1:0]mgt_txcharisk;
  wire [15:0]mgt_txdata;
  wire [2:0]rxrate_out;
  wire uclk_mgt_loopback_reg;
  wire uclk_mgt_tx_reset;
  wire xaui_rx_l3_n;
  wire xaui_rx_l3_p;
  wire xaui_tx_l3_n;
  wire xaui_tx_l3_p;
  wire NLW_gtpe2_i_PHYSTATUS_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED;
  wire NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED;
  wire NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED;
  wire NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXELECIDLE_UNCONNECTED;
  wire NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED;
  wire NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED;
  wire NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED;
  wire NLW_gtpe2_i_RXVALID_UNCONNECTED;
  wire NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED;
  wire NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED;
  wire NLW_gtpe2_i_TXRATEDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED;
  wire NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED;
  wire [15:0]NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXCHARISK_UNCONNECTED;
  wire [31:16]NLW_gtpe2_i_RXDATA_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXDATAVALID_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXDISPERR_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXHEADER_UNCONNECTED;
  wire [3:2]NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED;
  wire [4:0]NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED;
  wire [2:0]NLW_gtpe2_i_RXSTATUS_UNCONNECTED;
  wire [1:0]NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED;

  LUT1 #(
    .INIT(2'h1)) 
    \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE/stretch_r[2]_i_1 
       (.I0(gt3_txphinitdone_out),
        .O(dclk_7));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_27 \cdc_rxrate_out[0].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[0]),
        .data_out(RXRATE[0]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_28 \cdc_rxrate_out[1].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[1]),
        .data_out(RXRATE[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_29 \cdc_rxrate_out[2].sync_RXRATE_OUT 
       (.CLK(CLK),
        .Q(rxrate_out[2]),
        .data_out(RXRATE[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \core_mgt_rx_reset[3]_i_1 
       (.I0(gt3_rxresetdone_out),
        .O(D));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxrate_seq_i_n_38),
        .Q(drp_busy_i1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    drp_busy_i2_reg
       (.C(dclk),
        .CE(1'b1),
        .D(gtrxreset_seq_i_n_27),
        .Q(drp_busy_i2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    gt3_drp_busy_INST_0
       (.I0(drp_busy_i1),
        .I1(drp_busy_i2),
        .O(gt3_drp_busy));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0001111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0101111100),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0100000000),
    .CHAN_BOND_SEQ_2_2(10'b0100000000),
    .CHAN_BOND_SEQ_2_3(10'b0100000000),
    .CHAN_BOND_SEQ_2_4(10'b0100000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(19),
    .CLK_COR_MIN_LAT(17),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0100000000),
    .CLK_COR_SEQ_1_3(10'b0100000000),
    .CLK_COR_SEQ_1_4(10'b0100000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0100000000),
    .CLK_COR_SEQ_2_2(10'b0100000000),
    .CLK_COR_SEQ_2_3(10'b0100000000),
    .CLK_COR_SEQ_2_4(10'b0100000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("TRUE"),
    .DMONITOR_CFG(24'h000A00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD_ATTR(48'h000000000000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE206001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG(6'b001001),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b0),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h084020),
    .RXPH_CFG(24'hC00002),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(7),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b0101),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("X"),
    .SIM_VERSION("2.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b0),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00001),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(7),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b110),
    .TX_EIDLE_DEASSERT_DELAY(3'b100),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001110),
    .TX_MARGIN_FULL_1(7'b1001001),
    .TX_MARGIN_FULL_2(7'b1000101),
    .TX_MARGIN_FULL_3(7'b1000010),
    .TX_MARGIN_FULL_4(7'b1000000),
    .TX_MARGIN_LOW_0(7'b1000110),
    .TX_MARGIN_LOW_1(7'b1000100),
    .TX_MARGIN_LOW_2(7'b1000010),
    .TX_MARGIN_LOW_3(7'b1000000),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h1832),
    .TX_RXDETECT_REF(3'b100),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    gtpe2_i
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(gt3_dmonitorout_out),
        .DRPADDR(DRPADDR),
        .DRPCLK(dclk),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPRDY(drprdy_i),
        .DRPWE(DRPWE),
        .EYESCANDATAERROR(gt3_eyescandataerror_out),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(gt3_eyescanreset_in),
        .EYESCANTRIGGER(gt3_eyescantrigger_in),
        .GTPRXN(xaui_rx_l3_n),
        .GTPRXP(xaui_rx_l3_p),
        .GTPTXN(xaui_tx_l3_n),
        .GTPTXP(xaui_tx_l3_p),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTRXRESET),
        .GTTXRESET(uclk_mgt_tx_reset),
        .LOOPBACK({gt3_loopback_in[2],gt3_loopback_in0_out,gt3_loopback_in[0]}),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(NLW_gtpe2_i_PCSRSVDOUT_UNCONNECTED[15:0]),
        .PHYSTATUS(NLW_gtpe2_i_PHYSTATUS_UNCONNECTED),
        .PLL0CLK(gt0_pll0outclk_i),
        .PLL0REFCLK(gt0_pll0outrefclk_i),
        .PLL1CLK(gt0_pll1outclk_i),
        .PLL1REFCLK(gt0_pll1outrefclk_i),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(NLW_gtpe2_i_PMARSVDOUT0_UNCONNECTED),
        .PMARSVDOUT1(NLW_gtpe2_i_PMARSVDOUT1_UNCONNECTED),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(gt3_eyescandataerror_out_0),
        .RXBUFSTATUS(dclk_1),
        .RXBYTEISALIGNED(gtpe2_i_n_7),
        .RXBYTEREALIGN(gtpe2_i_n_8),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(gt3_rxcdrhold_in),
        .RXCDRLOCK(NLW_gtpe2_i_RXCDRLOCK_UNCONNECTED),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(1'b0),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(gtpe2_i_n_10),
        .RXCHANISALIGNED(gtpe2_i_n_11),
        .RXCHANREALIGN(gtpe2_i_n_12),
        .RXCHARISCOMMA({NLW_gtpe2_i_RXCHARISCOMMA_UNCONNECTED[3:2],dclk_3}),
        .RXCHARISK({NLW_gtpe2_i_RXCHARISK_UNCONNECTED[3:2],dclk_4}),
        .RXCHBONDEN(gt3_rxchbonden_in),
        .RXCHBONDI(gt3_eyescandataerror_out_1),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b1}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({gtpe2_i_n_152,gtpe2_i_n_153,gtpe2_i_n_154,gtpe2_i_n_155}),
        .RXCHBONDSLAVE(1'b1),
        .RXCLKCORCNT({gtpe2_i_n_95,gtpe2_i_n_96}),
        .RXCOMINITDET(NLW_gtpe2_i_RXCOMINITDET_UNCONNECTED),
        .RXCOMMADET(gt3_rxcommadet_out),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(NLW_gtpe2_i_RXCOMSASDET_UNCONNECTED),
        .RXCOMWAKEDET(NLW_gtpe2_i_RXCOMWAKEDET_UNCONNECTED),
        .RXDATA({NLW_gtpe2_i_RXDATA_UNCONNECTED[31:16],dclk_2}),
        .RXDATAVALID(NLW_gtpe2_i_RXDATAVALID_UNCONNECTED[1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR({NLW_gtpe2_i_RXDISPERR_UNCONNECTED[3:2],dclk_5}),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(NLW_gtpe2_i_RXDLYSRESETDONE_UNCONNECTED),
        .RXELECIDLE(NLW_gtpe2_i_RXELECIDLE_UNCONNECTED),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(NLW_gtpe2_i_RXHEADER_UNCONNECTED[2:0]),
        .RXHEADERVALID(NLW_gtpe2_i_RXHEADERVALID_UNCONNECTED),
        .RXLPMHFHOLD(gt3_rxlpmhfhold_in),
        .RXLPMHFOVRDEN(gt3_rxlpmhfovrden_in),
        .RXLPMLFHOLD(gt3_rxlpmlfhold_in),
        .RXLPMLFOVRDEN(gt3_rxlpmlfovrden_in),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(gt3_rxlpmreset_in),
        .RXMCOMMAALIGNEN(mgt_enable_align),
        .RXNOTINTABLE({NLW_gtpe2_i_RXNOTINTABLE_UNCONNECTED[3:2],dclk_6}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(NLW_gtpe2_i_RXOSINTDONE_UNCONNECTED),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(NLW_gtpe2_i_RXOSINTSTARTED_UNCONNECTED),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(NLW_gtpe2_i_RXOSINTSTROBEDONE_UNCONNECTED),
        .RXOSINTSTROBESTARTED(NLW_gtpe2_i_RXOSINTSTROBESTARTED_UNCONNECTED),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(gtpe2_i_n_24),
        .RXOUTCLKFABRIC(NLW_gtpe2_i_RXOUTCLKFABRIC_UNCONNECTED),
        .RXOUTCLKPCS(NLW_gtpe2_i_RXOUTCLKPCS_UNCONNECTED),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(mgt_enable_align),
        .RXPCSRESET(gt3_rxpcsreset_in),
        .RXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(NLW_gtpe2_i_RXPHALIGNDONE_UNCONNECTED),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(NLW_gtpe2_i_RXPHMONITOR_UNCONNECTED[4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(NLW_gtpe2_i_RXPHSLIPMONITOR_UNCONNECTED[4:0]),
        .RXPMARESET(RXPMARESET),
        .RXPMARESETDONE(data_in),
        .RXPOLARITY(gt3_rxpolarity_in),
        .RXPRBSCNTRESET(gt3_rxprbscntreset_in),
        .RXPRBSERR(gt3_rxprbserr_out),
        .RXPRBSSEL(gt3_rxprbssel_in),
        .RXRATE(RXRATE),
        .RXRATEDONE(gtpe2_i_n_30),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt3_rxresetdone_out),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(NLW_gtpe2_i_RXSTARTOFSEQ_UNCONNECTED[1:0]),
        .RXSTATUS(NLW_gtpe2_i_RXSTATUS_UNCONNECTED[2:0]),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(NLW_gtpe2_i_RXSYNCDONE_UNCONNECTED),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(NLW_gtpe2_i_RXSYNCOUT_UNCONNECTED),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(gt3_txuserrdy_in),
        .RXUSRCLK(CLK),
        .RXUSRCLK2(CLK),
        .RXVALID(NLW_gtpe2_i_RXVALID_UNCONNECTED),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(NLW_gtpe2_i_TXBUFSTATUS_UNCONNECTED[1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,mgt_txcharisk}),
        .TXCOMFINISH(NLW_gtpe2_i_TXCOMFINISH_UNCONNECTED),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,mgt_txdata}),
        .TXDEEMPH(1'b0),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL(gt3_txdiffctrl_in),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(gt3_txdlysreset_in),
        .TXDLYSRESETDONE(gt3_txdlysresetdone_out),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(gt3_txelecidle_in),
        .TXGEARBOXREADY(NLW_gtpe2_i_TXGEARBOXREADY_UNCONNECTED),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(gt0_txinhibit_in),
        .TXMAINCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXOUTCLK(gtpe2_i_n_38),
        .TXOUTCLKFABRIC(gtpe2_i_n_39),
        .TXOUTCLKPCS(gtpe2_i_n_40),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(gt3_txpcsreset_in),
        .TXPD({gt3_txelecidle_in,gt3_txelecidle_in}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(gt3_txphalign_in),
        .TXPHALIGNDONE(gt3_txphaligndone_out),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(gt3_txphinit_in),
        .TXPHINITDONE(gt3_txphinitdone_out),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(gt3_txpmareset_in),
        .TXPMARESETDONE(gtpe2_i_n_43),
        .TXPOLARITY(gt3_txpolarity_in),
        .TXPOSTCURSOR(gt3_txpostcursor_in),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(gt3_txprbsforceerr_in),
        .TXPRBSSEL(gt3_txprbssel_in),
        .TXPRECURSOR(gt3_txprecursor_in),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,1'b0}),
        .TXRATEDONE(NLW_gtpe2_i_TXRATEDONE_UNCONNECTED),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(dclk_0),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(NLW_gtpe2_i_TXSYNCDONE_UNCONNECTED),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(NLW_gtpe2_i_TXSYNCOUT_UNCONNECTED),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(gt3_txuserrdy_in),
        .TXUSRCLK(CLK),
        .TXUSRCLK2(CLK));
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_19__2
       (.I0(uclk_mgt_loopback_reg),
        .I1(gt3_loopback_in[1]),
        .O(gt3_loopback_in0_out));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq gtrxrate_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[4],DRPADDR[0]}),
        .DRPDO(drpdo_i),
        .\FSM_sequential_state_reg[0]_0 (gtrxrate_seq_i_n_36),
        .\FSM_sequential_state_reg[0]_1 (gtrxrate_seq_i_n_37),
        .Q(rxrate_out),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i2(drp_busy_i2),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg(gtrxrate_seq_i_n_38),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drprdy_i(drprdy_i),
        .gt3_drpaddr({gt3_drpaddr[4],gt3_drpaddr[0]}),
        .gt3_drpdi(gt3_drpdi),
        .gt3_drpdo(gt3_drpdo),
        .gt3_drpen(gt3_drpen),
        .gt3_drprdy(gt3_drprdy),
        .gt3_drpwe(gt3_drpwe),
        .gt3_rxrate_in(gt3_rxrate_in),
        .\rd_data_reg[0]_0 (gtrxrate_seq_i_n_21),
        .\rd_data_reg[10]_0 (gtrxrate_seq_i_n_31),
        .\rd_data_reg[11]_0 (gtrxrate_seq_i_n_18),
        .\rd_data_reg[12]_0 (gtrxrate_seq_i_n_32),
        .\rd_data_reg[13]_0 (gtrxrate_seq_i_n_33),
        .\rd_data_reg[14]_0 (gtrxrate_seq_i_n_34),
        .\rd_data_reg[15]_0 (gtrxrate_seq_i_n_35),
        .\rd_data_reg[1]_0 (gtrxrate_seq_i_n_22),
        .\rd_data_reg[2]_0 (gtrxrate_seq_i_n_23),
        .\rd_data_reg[3]_0 (gtrxrate_seq_i_n_24),
        .\rd_data_reg[4]_0 (gtrxrate_seq_i_n_25),
        .\rd_data_reg[5]_0 (gtrxrate_seq_i_n_26),
        .\rd_data_reg[6]_0 (gtrxrate_seq_i_n_27),
        .\rd_data_reg[7]_0 (gtrxrate_seq_i_n_28),
        .\rd_data_reg[8]_0 (gtrxrate_seq_i_n_29),
        .\rd_data_reg[9]_0 (gtrxrate_seq_i_n_30));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq gtrxreset_seq_i
       (.AR(AR),
        .DRPADDR({DRPADDR[8:5],DRPADDR[3:1]}),
        .DRPDO(drpdo_i),
        .GTRXRESET(GTRXRESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_op_done(drp_op_done),
        .drp_op_done_o_reg_0(gtrxreset_seq_i_n_27),
        .drp_op_done_o_reg_1(drp_op_done_o_reg),
        .drp_pma_busy(drp_pma_busy),
        .drp_rate_busy(drp_rate_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt3_drpaddr({gt3_drpaddr[8:5],gt3_drpaddr[3:1]}),
        .gtrxreset_ss(gtrxreset_ss));
  xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq rxpmarst_seq_i
       (.AR(AR),
        .DRPDI(DRPDI),
        .DRPDO(drpdo_i),
        .DRPEN(DRPEN),
        .DRPWE(DRPWE),
        .RXPMARESET(RXPMARESET),
        .data_in(data_in),
        .dclk(dclk),
        .drp_busy_i1(drp_busy_i1),
        .drp_op_done(drp_op_done),
        .drp_pma_busy(drp_pma_busy),
        .drpdi_o(drpdi_o),
        .drpen_rst_t(drpen_rst_t),
        .drprdy_i(drprdy_i),
        .drpwe_rst_t(drpwe_rst_t),
        .gt3_eyescandataerror_out(gtrxrate_seq_i_n_35),
        .gt3_eyescandataerror_out_0(gtrxrate_seq_i_n_34),
        .gt3_eyescandataerror_out_1(gtrxrate_seq_i_n_33),
        .gt3_eyescandataerror_out_10(gtrxrate_seq_i_n_24),
        .gt3_eyescandataerror_out_11(gtrxrate_seq_i_n_23),
        .gt3_eyescandataerror_out_12(gtrxrate_seq_i_n_22),
        .gt3_eyescandataerror_out_13(gtrxrate_seq_i_n_21),
        .gt3_eyescandataerror_out_14(gtrxrate_seq_i_n_36),
        .gt3_eyescandataerror_out_15(gtrxrate_seq_i_n_18),
        .gt3_eyescandataerror_out_16(gtrxrate_seq_i_n_37),
        .gt3_eyescandataerror_out_2(gtrxrate_seq_i_n_32),
        .gt3_eyescandataerror_out_3(gtrxrate_seq_i_n_31),
        .gt3_eyescandataerror_out_4(gtrxrate_seq_i_n_30),
        .gt3_eyescandataerror_out_5(gtrxrate_seq_i_n_29),
        .gt3_eyescandataerror_out_6(gtrxrate_seq_i_n_28),
        .gt3_eyescandataerror_out_7(gtrxrate_seq_i_n_27),
        .gt3_eyescandataerror_out_8(gtrxrate_seq_i_n_26),
        .gt3_eyescandataerror_out_9(gtrxrate_seq_i_n_25),
        .gt3_rxpmareset_in(gt3_rxpmareset_in));
endmodule

module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq
   (RXPMARESET,
    DRPDI,
    drp_pma_busy,
    DRPWE,
    DRPEN,
    gt3_rxpmareset_in,
    dclk,
    AR,
    gt3_eyescandataerror_out,
    drp_op_done,
    drpdi_o,
    gt3_eyescandataerror_out_0,
    gt3_eyescandataerror_out_1,
    gt3_eyescandataerror_out_2,
    gt3_eyescandataerror_out_3,
    gt3_eyescandataerror_out_4,
    gt3_eyescandataerror_out_5,
    gt3_eyescandataerror_out_6,
    gt3_eyescandataerror_out_7,
    gt3_eyescandataerror_out_8,
    gt3_eyescandataerror_out_9,
    gt3_eyescandataerror_out_10,
    gt3_eyescandataerror_out_11,
    gt3_eyescandataerror_out_12,
    gt3_eyescandataerror_out_13,
    gt3_eyescandataerror_out_14,
    drpwe_rst_t,
    drprdy_i,
    gt3_eyescandataerror_out_15,
    gt3_eyescandataerror_out_16,
    drpen_rst_t,
    drp_busy_i1,
    DRPDO,
    data_in);
  output RXPMARESET;
  output [15:0]DRPDI;
  output drp_pma_busy;
  output DRPWE;
  output DRPEN;
  input gt3_rxpmareset_in;
  input dclk;
  input [0:0]AR;
  input gt3_eyescandataerror_out;
  input drp_op_done;
  input [15:0]drpdi_o;
  input gt3_eyescandataerror_out_0;
  input gt3_eyescandataerror_out_1;
  input gt3_eyescandataerror_out_2;
  input gt3_eyescandataerror_out_3;
  input gt3_eyescandataerror_out_4;
  input gt3_eyescandataerror_out_5;
  input gt3_eyescandataerror_out_6;
  input gt3_eyescandataerror_out_7;
  input gt3_eyescandataerror_out_8;
  input gt3_eyescandataerror_out_9;
  input gt3_eyescandataerror_out_10;
  input gt3_eyescandataerror_out_11;
  input gt3_eyescandataerror_out_12;
  input gt3_eyescandataerror_out_13;
  input gt3_eyescandataerror_out_14;
  input drpwe_rst_t;
  input drprdy_i;
  input gt3_eyescandataerror_out_15;
  input gt3_eyescandataerror_out_16;
  input drpen_rst_t;
  input drp_busy_i1;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [15:0]DRPDI;
  wire [15:0]DRPDO;
  wire DRPEN;
  wire DRPWE;
  wire \FSM_onehot_state[0]_i_1__6_n_0 ;
  wire \FSM_onehot_state[1]_i_1__6_n_0 ;
  wire \FSM_onehot_state[3]_i_1__6_n_0 ;
  wire \FSM_onehot_state[4]_i_1__6_n_0 ;
  wire \FSM_onehot_state[5]_i_1__6_n_0 ;
  wire \FSM_onehot_state[6]_i_1__6_n_0 ;
  wire \FSM_onehot_state[7]_i_1__2_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \FSM_onehot_state_reg_n_0_[4] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire RXPMARESET;
  wire data_in;
  wire dclk;
  wire drp_busy_i1;
  wire drp_op_done;
  wire drp_pma_busy;
  wire [15:0]drpdi_o;
  wire drpen_pma_t;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_pma_t;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__9_n_0;
  wire flag_reg_n_0;
  wire \gt3_drpdo[15]_INST_0_i_3_n_0 ;
  wire gt3_eyescandataerror_out;
  wire gt3_eyescandataerror_out_0;
  wire gt3_eyescandataerror_out_1;
  wire gt3_eyescandataerror_out_10;
  wire gt3_eyescandataerror_out_11;
  wire gt3_eyescandataerror_out_12;
  wire gt3_eyescandataerror_out_13;
  wire gt3_eyescandataerror_out_14;
  wire gt3_eyescandataerror_out_15;
  wire gt3_eyescandataerror_out_16;
  wire gt3_eyescandataerror_out_2;
  wire gt3_eyescandataerror_out_3;
  wire gt3_eyescandataerror_out_4;
  wire gt3_eyescandataerror_out_5;
  wire gt3_eyescandataerror_out_6;
  wire gt3_eyescandataerror_out_7;
  wire gt3_eyescandataerror_out_8;
  wire gt3_eyescandataerror_out_9;
  wire gt3_rxpmareset_in;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire \rd_data[0]_i_1__9_n_0 ;
  wire \rd_data[10]_i_1__9_n_0 ;
  wire \rd_data[11]_i_1__9_n_0 ;
  wire \rd_data[12]_i_1__9_n_0 ;
  wire \rd_data[13]_i_1__9_n_0 ;
  wire \rd_data[14]_i_1__9_n_0 ;
  wire \rd_data[15]_i_2__9_n_0 ;
  wire \rd_data[1]_i_1__9_n_0 ;
  wire \rd_data[2]_i_1__9_n_0 ;
  wire \rd_data[3]_i_1__9_n_0 ;
  wire \rd_data[4]_i_1__9_n_0 ;
  wire \rd_data[5]_i_1__9_n_0 ;
  wire \rd_data[6]_i_1__9_n_0 ;
  wire \rd_data[7]_i_1__9_n_0 ;
  wire \rd_data[8]_i_1__9_n_0 ;
  wire \rd_data[9]_i_1__9_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmareset_i;
  wire rxpmareset_s_reg_n_0;
  wire rxpmareset_ss;
  wire sync1_RXPMARESETDONE_n_0;
  wire sync1_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[0]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[0]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[1]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__6_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[3]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[3]_i_1__6_n_0 ));
  LUT3 #(
    .INIT(8'h32)) 
    \FSM_onehot_state[4]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[4]_i_1__6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .O(\FSM_onehot_state[5]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__6 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[6]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[7]_i_1__2 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(rxpmareset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[7]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__6_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[1]_i_1__6_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_1),
        .Q(\FSM_onehot_state_reg_n_0_[2] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[3]_i_1__6_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[4]_i_1__6_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[4] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__6_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__6_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__2_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_0),
        .Q(p_0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__9
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_0_in),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(flag_i_1__9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__9_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt3_drpdo[15]_INST_0_i_2 
       (.I0(flag),
        .I1(p_0_in),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\gt3_drpdo[15]_INST_0_i_3_n_0 ),
        .O(drp_pma_busy));
  LUT5 #(
    .INIT(32'hFFFFEEFE)) 
    \gt3_drpdo[15]_INST_0_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(drp_busy_i1),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\gt3_drpdo[15]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_10__2
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_5),
        .I4(drp_op_done),
        .I5(drpdi_o[8]),
        .O(DRPDI[8]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_11__2
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_6),
        .I4(drp_op_done),
        .I5(drpdi_o[7]),
        .O(DRPDI[7]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_12__2
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_7),
        .I4(drp_op_done),
        .I5(drpdi_o[6]),
        .O(DRPDI[6]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_13__2
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_8),
        .I4(drp_op_done),
        .I5(drpdi_o[5]),
        .O(DRPDI[5]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_14__2
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_9),
        .I4(drp_op_done),
        .I5(drpdi_o[4]),
        .O(DRPDI[4]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_15__2
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_10),
        .I4(drp_op_done),
        .I5(drpdi_o[3]),
        .O(DRPDI[3]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_16__2
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_11),
        .I4(drp_op_done),
        .I5(drpdi_o[2]),
        .O(DRPDI[2]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_17__2
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_12),
        .I4(drp_op_done),
        .I5(drpdi_o[1]),
        .O(DRPDI[1]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_18__2
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_13),
        .I4(drp_op_done),
        .I5(drpdi_o[0]),
        .O(DRPDI[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    gtpe2_i_i_1__2
       (.I0(drpen_pma_t),
        .I1(drp_pma_busy),
        .I2(gt3_eyescandataerror_out_16),
        .I3(drp_op_done),
        .I4(drpen_rst_t),
        .O(DRPEN));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    gtpe2_i_i_29__2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(drp_busy_i1),
        .I3(p_0_in),
        .O(drpen_pma_t));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    gtpe2_i_i_2__2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_14),
        .I4(drp_op_done),
        .I5(drpwe_rst_t),
        .O(DRPWE));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_34__2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .O(drpwe_pma_t));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_3__1
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out),
        .I4(drp_op_done),
        .I5(drpdi_o[15]),
        .O(DRPDI[15]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_4__2
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_0),
        .I4(drp_op_done),
        .I5(drpdi_o[14]),
        .O(DRPDI[14]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_5__2
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_1),
        .I4(drp_op_done),
        .I5(drpdi_o[13]),
        .O(DRPDI[13]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_6__2
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_2),
        .I4(drp_op_done),
        .I5(drpdi_o[12]),
        .O(DRPDI[12]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_7__2
       (.I0(p_0_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_15),
        .I4(drp_op_done),
        .I5(drpdi_o[11]),
        .O(DRPDI[11]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_8__1
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_3),
        .I4(drp_op_done),
        .I5(drpdi_o[10]),
        .O(DRPDI[10]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_9__2
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt3_eyescandataerror_out_4),
        .I4(drp_op_done),
        .I5(drpdi_o[9]),
        .O(DRPDI[9]));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__9 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__9 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__9 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__9 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__9 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__9 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__9 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__9_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__9 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__9 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__9 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__9 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__9 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__9 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__9 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__9 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__9 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__9 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__9 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__9_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__9_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__9_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    rxpmareset_o_i_1__2
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(rxpmareset_ss),
        .I3(flag),
        .O(rxpmareset_i));
  FDCE rxpmareset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_i),
        .Q(RXPMARESET));
  FDCE rxpmareset_s_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gt3_rxpmareset_in),
        .Q(rxpmareset_s_reg_n_0));
  FDCE rxpmareset_ss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_s_reg_n_0),
        .Q(rxpmareset_ss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_30 sync1_RXPMARESETDONE
       (.D({sync1_RXPMARESETDONE_n_0,sync1_RXPMARESETDONE_n_1}),
        .Q({\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[1] }),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_41
   (RXPMARESET,
    DRPDI,
    drp_pma_busy,
    DRPWE,
    DRPEN,
    gt2_rxpmareset_in,
    dclk,
    AR,
    gt2_eyescandataerror_out,
    drp_op_done,
    drpdi_o,
    gt2_eyescandataerror_out_0,
    gt2_eyescandataerror_out_1,
    gt2_eyescandataerror_out_2,
    gt2_eyescandataerror_out_3,
    gt2_eyescandataerror_out_4,
    gt2_eyescandataerror_out_5,
    gt2_eyescandataerror_out_6,
    gt2_eyescandataerror_out_7,
    gt2_eyescandataerror_out_8,
    gt2_eyescandataerror_out_9,
    gt2_eyescandataerror_out_10,
    gt2_eyescandataerror_out_11,
    gt2_eyescandataerror_out_12,
    gt2_eyescandataerror_out_13,
    gt2_eyescandataerror_out_14,
    drpwe_rst_t,
    drprdy_i,
    gt2_eyescandataerror_out_15,
    gt2_eyescandataerror_out_16,
    drpen_rst_t,
    drp_busy_i1,
    DRPDO,
    data_in);
  output RXPMARESET;
  output [15:0]DRPDI;
  output drp_pma_busy;
  output DRPWE;
  output DRPEN;
  input gt2_rxpmareset_in;
  input dclk;
  input [0:0]AR;
  input gt2_eyescandataerror_out;
  input drp_op_done;
  input [15:0]drpdi_o;
  input gt2_eyescandataerror_out_0;
  input gt2_eyescandataerror_out_1;
  input gt2_eyescandataerror_out_2;
  input gt2_eyescandataerror_out_3;
  input gt2_eyescandataerror_out_4;
  input gt2_eyescandataerror_out_5;
  input gt2_eyescandataerror_out_6;
  input gt2_eyescandataerror_out_7;
  input gt2_eyescandataerror_out_8;
  input gt2_eyescandataerror_out_9;
  input gt2_eyescandataerror_out_10;
  input gt2_eyescandataerror_out_11;
  input gt2_eyescandataerror_out_12;
  input gt2_eyescandataerror_out_13;
  input gt2_eyescandataerror_out_14;
  input drpwe_rst_t;
  input drprdy_i;
  input gt2_eyescandataerror_out_15;
  input gt2_eyescandataerror_out_16;
  input drpen_rst_t;
  input drp_busy_i1;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [15:0]DRPDI;
  wire [15:0]DRPDO;
  wire DRPEN;
  wire DRPWE;
  wire \FSM_onehot_state[0]_i_1__4_n_0 ;
  wire \FSM_onehot_state[1]_i_1__4_n_0 ;
  wire \FSM_onehot_state[3]_i_1__5_n_0 ;
  wire \FSM_onehot_state[4]_i_1__4_n_0 ;
  wire \FSM_onehot_state[5]_i_1__4_n_0 ;
  wire \FSM_onehot_state[6]_i_1__4_n_0 ;
  wire \FSM_onehot_state[7]_i_1__1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \FSM_onehot_state_reg_n_0_[4] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire RXPMARESET;
  wire data_in;
  wire dclk;
  wire drp_busy_i1;
  wire drp_op_done;
  wire drp_pma_busy;
  wire [15:0]drpdi_o;
  wire drpen_pma_t;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_pma_t;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__6_n_0;
  wire flag_reg_n_0;
  wire \gt2_drpdo[15]_INST_0_i_3_n_0 ;
  wire gt2_eyescandataerror_out;
  wire gt2_eyescandataerror_out_0;
  wire gt2_eyescandataerror_out_1;
  wire gt2_eyescandataerror_out_10;
  wire gt2_eyescandataerror_out_11;
  wire gt2_eyescandataerror_out_12;
  wire gt2_eyescandataerror_out_13;
  wire gt2_eyescandataerror_out_14;
  wire gt2_eyescandataerror_out_15;
  wire gt2_eyescandataerror_out_16;
  wire gt2_eyescandataerror_out_2;
  wire gt2_eyescandataerror_out_3;
  wire gt2_eyescandataerror_out_4;
  wire gt2_eyescandataerror_out_5;
  wire gt2_eyescandataerror_out_6;
  wire gt2_eyescandataerror_out_7;
  wire gt2_eyescandataerror_out_8;
  wire gt2_eyescandataerror_out_9;
  wire gt2_rxpmareset_in;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire \rd_data[0]_i_1__6_n_0 ;
  wire \rd_data[10]_i_1__6_n_0 ;
  wire \rd_data[11]_i_1__6_n_0 ;
  wire \rd_data[12]_i_1__6_n_0 ;
  wire \rd_data[13]_i_1__6_n_0 ;
  wire \rd_data[14]_i_1__6_n_0 ;
  wire \rd_data[15]_i_2__6_n_0 ;
  wire \rd_data[1]_i_1__6_n_0 ;
  wire \rd_data[2]_i_1__6_n_0 ;
  wire \rd_data[3]_i_1__6_n_0 ;
  wire \rd_data[4]_i_1__6_n_0 ;
  wire \rd_data[5]_i_1__6_n_0 ;
  wire \rd_data[6]_i_1__6_n_0 ;
  wire \rd_data[7]_i_1__6_n_0 ;
  wire \rd_data[8]_i_1__6_n_0 ;
  wire \rd_data[9]_i_1__6_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmareset_i;
  wire rxpmareset_s_reg_n_0;
  wire rxpmareset_ss;
  wire sync1_RXPMARESETDONE_n_0;
  wire sync1_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[0]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[1]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__4_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[3]_i_1__5 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[3]_i_1__5_n_0 ));
  LUT3 #(
    .INIT(8'h32)) 
    \FSM_onehot_state[4]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[4]_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .O(\FSM_onehot_state[5]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__4 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[6]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[7]_i_1__1 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(rxpmareset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[7]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__4_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[1]_i_1__4_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_1),
        .Q(\FSM_onehot_state_reg_n_0_[2] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[3]_i_1__5_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[4]_i_1__4_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[4] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__4_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__4_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_0),
        .Q(p_0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__6
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_0_in),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(flag_i_1__6_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__6_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt2_drpdo[15]_INST_0_i_2 
       (.I0(flag),
        .I1(p_0_in),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\gt2_drpdo[15]_INST_0_i_3_n_0 ),
        .O(drp_pma_busy));
  LUT5 #(
    .INIT(32'hFFFFEEFE)) 
    \gt2_drpdo[15]_INST_0_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(drp_busy_i1),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\gt2_drpdo[15]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_10__1
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_5),
        .I4(drp_op_done),
        .I5(drpdi_o[8]),
        .O(DRPDI[8]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_11__1
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_6),
        .I4(drp_op_done),
        .I5(drpdi_o[7]),
        .O(DRPDI[7]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_12__1
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_7),
        .I4(drp_op_done),
        .I5(drpdi_o[6]),
        .O(DRPDI[6]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_13__1
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_8),
        .I4(drp_op_done),
        .I5(drpdi_o[5]),
        .O(DRPDI[5]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_14__1
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_9),
        .I4(drp_op_done),
        .I5(drpdi_o[4]),
        .O(DRPDI[4]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_15__1
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_10),
        .I4(drp_op_done),
        .I5(drpdi_o[3]),
        .O(DRPDI[3]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_16__1
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_11),
        .I4(drp_op_done),
        .I5(drpdi_o[2]),
        .O(DRPDI[2]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_17__1
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_12),
        .I4(drp_op_done),
        .I5(drpdi_o[1]),
        .O(DRPDI[1]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_18__1
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_13),
        .I4(drp_op_done),
        .I5(drpdi_o[0]),
        .O(DRPDI[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    gtpe2_i_i_1__1
       (.I0(drpen_pma_t),
        .I1(drp_pma_busy),
        .I2(gt2_eyescandataerror_out_16),
        .I3(drp_op_done),
        .I4(drpen_rst_t),
        .O(DRPEN));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    gtpe2_i_i_29__1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(drp_busy_i1),
        .I3(p_0_in),
        .O(drpen_pma_t));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    gtpe2_i_i_2__1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_14),
        .I4(drp_op_done),
        .I5(drpwe_rst_t),
        .O(DRPWE));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_34__1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .O(drpwe_pma_t));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_3__0
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out),
        .I4(drp_op_done),
        .I5(drpdi_o[15]),
        .O(DRPDI[15]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_4__1
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_0),
        .I4(drp_op_done),
        .I5(drpdi_o[14]),
        .O(DRPDI[14]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_5__1
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_1),
        .I4(drp_op_done),
        .I5(drpdi_o[13]),
        .O(DRPDI[13]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_6__1
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_2),
        .I4(drp_op_done),
        .I5(drpdi_o[12]),
        .O(DRPDI[12]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_7__1
       (.I0(p_0_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_15),
        .I4(drp_op_done),
        .I5(drpdi_o[11]),
        .O(DRPDI[11]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_8__0
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_3),
        .I4(drp_op_done),
        .I5(drpdi_o[10]),
        .O(DRPDI[10]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_9__1
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt2_eyescandataerror_out_4),
        .I4(drp_op_done),
        .I5(drpdi_o[9]),
        .O(DRPDI[9]));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__6 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__6 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__6 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__6 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__6 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__6 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__6 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__6 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__6 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__6 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__6 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__6 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__6 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__6 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__6 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__6 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__6 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__6_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__6_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__6_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    rxpmareset_o_i_1__1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(rxpmareset_ss),
        .I3(flag),
        .O(rxpmareset_i));
  FDCE rxpmareset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_i),
        .Q(RXPMARESET));
  FDCE rxpmareset_s_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gt2_rxpmareset_in),
        .Q(rxpmareset_s_reg_n_0));
  FDCE rxpmareset_ss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_s_reg_n_0),
        .Q(rxpmareset_ss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_42 sync1_RXPMARESETDONE
       (.D({sync1_RXPMARESETDONE_n_0,sync1_RXPMARESETDONE_n_1}),
        .Q({\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[1] }),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_53
   (RXPMARESET,
    DRPDI,
    drp_pma_busy,
    DRPWE,
    DRPEN,
    gt1_rxpmareset_in,
    dclk,
    AR,
    gt1_eyescandataerror_out,
    drp_op_done,
    drpdi_o,
    gt1_eyescandataerror_out_0,
    gt1_eyescandataerror_out_1,
    gt1_eyescandataerror_out_2,
    gt1_eyescandataerror_out_3,
    gt1_eyescandataerror_out_4,
    gt1_eyescandataerror_out_5,
    gt1_eyescandataerror_out_6,
    gt1_eyescandataerror_out_7,
    gt1_eyescandataerror_out_8,
    gt1_eyescandataerror_out_9,
    gt1_eyescandataerror_out_10,
    gt1_eyescandataerror_out_11,
    gt1_eyescandataerror_out_12,
    gt1_eyescandataerror_out_13,
    gt1_eyescandataerror_out_14,
    drpwe_rst_t,
    drprdy_i,
    gt1_eyescandataerror_out_15,
    gt1_eyescandataerror_out_16,
    drpen_rst_t,
    drp_busy_i1,
    DRPDO,
    data_in);
  output RXPMARESET;
  output [15:0]DRPDI;
  output drp_pma_busy;
  output DRPWE;
  output DRPEN;
  input gt1_rxpmareset_in;
  input dclk;
  input [0:0]AR;
  input gt1_eyescandataerror_out;
  input drp_op_done;
  input [15:0]drpdi_o;
  input gt1_eyescandataerror_out_0;
  input gt1_eyescandataerror_out_1;
  input gt1_eyescandataerror_out_2;
  input gt1_eyescandataerror_out_3;
  input gt1_eyescandataerror_out_4;
  input gt1_eyescandataerror_out_5;
  input gt1_eyescandataerror_out_6;
  input gt1_eyescandataerror_out_7;
  input gt1_eyescandataerror_out_8;
  input gt1_eyescandataerror_out_9;
  input gt1_eyescandataerror_out_10;
  input gt1_eyescandataerror_out_11;
  input gt1_eyescandataerror_out_12;
  input gt1_eyescandataerror_out_13;
  input gt1_eyescandataerror_out_14;
  input drpwe_rst_t;
  input drprdy_i;
  input gt1_eyescandataerror_out_15;
  input gt1_eyescandataerror_out_16;
  input drpen_rst_t;
  input drp_busy_i1;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [15:0]DRPDI;
  wire [15:0]DRPDO;
  wire DRPEN;
  wire DRPWE;
  wire \FSM_onehot_state[0]_i_1__2_n_0 ;
  wire \FSM_onehot_state[1]_i_1__2_n_0 ;
  wire \FSM_onehot_state[3]_i_1__4_n_0 ;
  wire \FSM_onehot_state[4]_i_1__2_n_0 ;
  wire \FSM_onehot_state[5]_i_1__2_n_0 ;
  wire \FSM_onehot_state[6]_i_1__2_n_0 ;
  wire \FSM_onehot_state[7]_i_1__0_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \FSM_onehot_state_reg_n_0_[4] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire RXPMARESET;
  wire data_in;
  wire dclk;
  wire drp_busy_i1;
  wire drp_op_done;
  wire drp_pma_busy;
  wire [15:0]drpdi_o;
  wire drpen_pma_t;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_pma_t;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__3_n_0;
  wire flag_reg_n_0;
  wire \gt1_drpdo[15]_INST_0_i_3_n_0 ;
  wire gt1_eyescandataerror_out;
  wire gt1_eyescandataerror_out_0;
  wire gt1_eyescandataerror_out_1;
  wire gt1_eyescandataerror_out_10;
  wire gt1_eyescandataerror_out_11;
  wire gt1_eyescandataerror_out_12;
  wire gt1_eyescandataerror_out_13;
  wire gt1_eyescandataerror_out_14;
  wire gt1_eyescandataerror_out_15;
  wire gt1_eyescandataerror_out_16;
  wire gt1_eyescandataerror_out_2;
  wire gt1_eyescandataerror_out_3;
  wire gt1_eyescandataerror_out_4;
  wire gt1_eyescandataerror_out_5;
  wire gt1_eyescandataerror_out_6;
  wire gt1_eyescandataerror_out_7;
  wire gt1_eyescandataerror_out_8;
  wire gt1_eyescandataerror_out_9;
  wire gt1_rxpmareset_in;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire \rd_data[0]_i_1__3_n_0 ;
  wire \rd_data[10]_i_1__3_n_0 ;
  wire \rd_data[11]_i_1__3_n_0 ;
  wire \rd_data[12]_i_1__3_n_0 ;
  wire \rd_data[13]_i_1__3_n_0 ;
  wire \rd_data[14]_i_1__3_n_0 ;
  wire \rd_data[15]_i_2__3_n_0 ;
  wire \rd_data[1]_i_1__3_n_0 ;
  wire \rd_data[2]_i_1__3_n_0 ;
  wire \rd_data[3]_i_1__3_n_0 ;
  wire \rd_data[4]_i_1__3_n_0 ;
  wire \rd_data[5]_i_1__3_n_0 ;
  wire \rd_data[6]_i_1__3_n_0 ;
  wire \rd_data[7]_i_1__3_n_0 ;
  wire \rd_data[8]_i_1__3_n_0 ;
  wire \rd_data[9]_i_1__3_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmareset_i;
  wire rxpmareset_s_reg_n_0;
  wire rxpmareset_ss;
  wire sync1_RXPMARESETDONE_n_0;
  wire sync1_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[0]_i_1__2 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[1]_i_1__2 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[3]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[3]_i_1__4_n_0 ));
  LUT3 #(
    .INIT(8'h32)) 
    \FSM_onehot_state[4]_i_1__2 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[4]_i_1__2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__2 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .O(\FSM_onehot_state[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__2 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[7]_i_1__0 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(rxpmareset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[7]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__2_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[1]_i_1__2_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_1),
        .Q(\FSM_onehot_state_reg_n_0_[2] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[3]_i_1__4_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[4]_i_1__2_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[4] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__2_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__2_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_0),
        .Q(p_0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__3
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_0_in),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(flag_i_1__3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__3_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt1_drpdo[15]_INST_0_i_2 
       (.I0(flag),
        .I1(p_0_in),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\gt1_drpdo[15]_INST_0_i_3_n_0 ),
        .O(drp_pma_busy));
  LUT5 #(
    .INIT(32'hFFFFEEFE)) 
    \gt1_drpdo[15]_INST_0_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(drp_busy_i1),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\gt1_drpdo[15]_INST_0_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_10__0
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_5),
        .I4(drp_op_done),
        .I5(drpdi_o[8]),
        .O(DRPDI[8]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_11__0
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_6),
        .I4(drp_op_done),
        .I5(drpdi_o[7]),
        .O(DRPDI[7]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_12__0
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_7),
        .I4(drp_op_done),
        .I5(drpdi_o[6]),
        .O(DRPDI[6]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_13__0
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_8),
        .I4(drp_op_done),
        .I5(drpdi_o[5]),
        .O(DRPDI[5]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_14__0
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_9),
        .I4(drp_op_done),
        .I5(drpdi_o[4]),
        .O(DRPDI[4]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_15__0
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_10),
        .I4(drp_op_done),
        .I5(drpdi_o[3]),
        .O(DRPDI[3]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_16__0
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_11),
        .I4(drp_op_done),
        .I5(drpdi_o[2]),
        .O(DRPDI[2]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_17__0
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_12),
        .I4(drp_op_done),
        .I5(drpdi_o[1]),
        .O(DRPDI[1]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_18__0
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_13),
        .I4(drp_op_done),
        .I5(drpdi_o[0]),
        .O(DRPDI[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    gtpe2_i_i_1__0
       (.I0(drpen_pma_t),
        .I1(drp_pma_busy),
        .I2(gt1_eyescandataerror_out_16),
        .I3(drp_op_done),
        .I4(drpen_rst_t),
        .O(DRPEN));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    gtpe2_i_i_29__0
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(drp_busy_i1),
        .I3(p_0_in),
        .O(drpen_pma_t));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    gtpe2_i_i_2__0
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_14),
        .I4(drp_op_done),
        .I5(drpwe_rst_t),
        .O(DRPWE));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_3
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out),
        .I4(drp_op_done),
        .I5(drpdi_o[15]),
        .O(DRPDI[15]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_34__0
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .O(drpwe_pma_t));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_4__0
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_0),
        .I4(drp_op_done),
        .I5(drpdi_o[14]),
        .O(DRPDI[14]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_5__0
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_1),
        .I4(drp_op_done),
        .I5(drpdi_o[13]),
        .O(DRPDI[13]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_6__0
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_2),
        .I4(drp_op_done),
        .I5(drpdi_o[12]),
        .O(DRPDI[12]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_7__0
       (.I0(p_0_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_15),
        .I4(drp_op_done),
        .I5(drpdi_o[11]),
        .O(DRPDI[11]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_8
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_3),
        .I4(drp_op_done),
        .I5(drpdi_o[10]),
        .O(DRPDI[10]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_9__0
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt1_eyescandataerror_out_4),
        .I4(drp_op_done),
        .I5(drpdi_o[9]),
        .O(DRPDI[9]));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__3 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__3 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__3 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__3 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__3 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__3 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__3 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__3 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__3 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__3 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__3 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__3 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__3 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__3 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__3 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__3 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__3 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__3 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__3_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__3_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__3_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    rxpmareset_o_i_1__0
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(rxpmareset_ss),
        .I3(flag),
        .O(rxpmareset_i));
  FDCE rxpmareset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_i),
        .Q(RXPMARESET));
  FDCE rxpmareset_s_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gt1_rxpmareset_in),
        .Q(rxpmareset_s_reg_n_0));
  FDCE rxpmareset_ss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_s_reg_n_0),
        .Q(rxpmareset_ss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_54 sync1_RXPMARESETDONE
       (.D({sync1_RXPMARESETDONE_n_0,sync1_RXPMARESETDONE_n_1}),
        .Q({\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[1] }),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxpmarst_seq_65
   (RXPMARESET,
    DRPDI,
    drp_pma_busy,
    DRPWE,
    DRPEN,
    gt0_rxpmareset_in,
    dclk,
    AR,
    gt0_eyescandataerror_out,
    drp_op_done,
    drpdi_o,
    gt0_eyescandataerror_out_0,
    gt0_eyescandataerror_out_1,
    gt0_eyescandataerror_out_2,
    gt0_eyescandataerror_out_3,
    gt0_eyescandataerror_out_4,
    gt0_eyescandataerror_out_5,
    gt0_eyescandataerror_out_6,
    gt0_eyescandataerror_out_7,
    gt0_eyescandataerror_out_8,
    gt0_eyescandataerror_out_9,
    gt0_eyescandataerror_out_10,
    gt0_eyescandataerror_out_11,
    gt0_eyescandataerror_out_12,
    gt0_eyescandataerror_out_13,
    gt0_eyescandataerror_out_14,
    drpwe_rst_t,
    drprdy_i,
    gt0_eyescandataerror_out_15,
    gt0_eyescandataerror_out_16,
    drpen_rst_t,
    drp_busy_i1,
    DRPDO,
    data_in);
  output RXPMARESET;
  output [15:0]DRPDI;
  output drp_pma_busy;
  output DRPWE;
  output DRPEN;
  input gt0_rxpmareset_in;
  input dclk;
  input [0:0]AR;
  input gt0_eyescandataerror_out;
  input drp_op_done;
  input [15:0]drpdi_o;
  input gt0_eyescandataerror_out_0;
  input gt0_eyescandataerror_out_1;
  input gt0_eyescandataerror_out_2;
  input gt0_eyescandataerror_out_3;
  input gt0_eyescandataerror_out_4;
  input gt0_eyescandataerror_out_5;
  input gt0_eyescandataerror_out_6;
  input gt0_eyescandataerror_out_7;
  input gt0_eyescandataerror_out_8;
  input gt0_eyescandataerror_out_9;
  input gt0_eyescandataerror_out_10;
  input gt0_eyescandataerror_out_11;
  input gt0_eyescandataerror_out_12;
  input gt0_eyescandataerror_out_13;
  input gt0_eyescandataerror_out_14;
  input drpwe_rst_t;
  input drprdy_i;
  input gt0_eyescandataerror_out_15;
  input gt0_eyescandataerror_out_16;
  input drpen_rst_t;
  input drp_busy_i1;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [15:0]DRPDI;
  wire [15:0]DRPDO;
  wire DRPEN;
  wire DRPWE;
  wire \FSM_onehot_state[0]_i_1__0_n_0 ;
  wire \FSM_onehot_state[1]_i_1__0_n_0 ;
  wire \FSM_onehot_state[3]_i_1__3_n_0 ;
  wire \FSM_onehot_state[4]_i_1__0_n_0 ;
  wire \FSM_onehot_state[5]_i_1__0_n_0 ;
  wire \FSM_onehot_state[6]_i_1__0_n_0 ;
  wire \FSM_onehot_state[7]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[2] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \FSM_onehot_state_reg_n_0_[4] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire RXPMARESET;
  wire data_in;
  wire dclk;
  wire drp_busy_i1;
  wire drp_op_done;
  wire drp_pma_busy;
  wire [15:0]drpdi_o;
  wire drpen_pma_t;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_pma_t;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__0_n_0;
  wire flag_reg_n_0;
  wire \gt0_drpdo[15]_INST_0_i_3_n_0 ;
  wire gt0_eyescandataerror_out;
  wire gt0_eyescandataerror_out_0;
  wire gt0_eyescandataerror_out_1;
  wire gt0_eyescandataerror_out_10;
  wire gt0_eyescandataerror_out_11;
  wire gt0_eyescandataerror_out_12;
  wire gt0_eyescandataerror_out_13;
  wire gt0_eyescandataerror_out_14;
  wire gt0_eyescandataerror_out_15;
  wire gt0_eyescandataerror_out_16;
  wire gt0_eyescandataerror_out_2;
  wire gt0_eyescandataerror_out_3;
  wire gt0_eyescandataerror_out_4;
  wire gt0_eyescandataerror_out_5;
  wire gt0_eyescandataerror_out_6;
  wire gt0_eyescandataerror_out_7;
  wire gt0_eyescandataerror_out_8;
  wire gt0_eyescandataerror_out_9;
  wire gt0_rxpmareset_in;
  wire [15:0]in9;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire \rd_data[0]_i_1__0_n_0 ;
  wire \rd_data[10]_i_1__0_n_0 ;
  wire \rd_data[11]_i_1__0_n_0 ;
  wire \rd_data[12]_i_1__0_n_0 ;
  wire \rd_data[13]_i_1__0_n_0 ;
  wire \rd_data[14]_i_1__0_n_0 ;
  wire \rd_data[15]_i_2__0_n_0 ;
  wire \rd_data[1]_i_1__0_n_0 ;
  wire \rd_data[2]_i_1__0_n_0 ;
  wire \rd_data[3]_i_1__0_n_0 ;
  wire \rd_data[4]_i_1__0_n_0 ;
  wire \rd_data[5]_i_1__0_n_0 ;
  wire \rd_data[6]_i_1__0_n_0 ;
  wire \rd_data[7]_i_1__0_n_0 ;
  wire \rd_data[8]_i_1__0_n_0 ;
  wire \rd_data[9]_i_1__0_n_0 ;
  wire \rd_data_reg_n_0_[11] ;
  wire rxpmareset_i;
  wire rxpmareset_s;
  wire rxpmareset_ss;
  wire sync1_RXPMARESETDONE_n_0;
  wire sync1_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[0]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[1]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[3]_i_1__3 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[3]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h32)) 
    \FSM_onehot_state[4]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[4]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(rxpmareset_ss),
        .O(\FSM_onehot_state[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__0 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[7]_i_1 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(rxpmareset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\FSM_onehot_state[7]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_1),
        .Q(\FSM_onehot_state_reg_n_0_[2] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[3]_i_1__3_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[4]_i_1__0_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[4] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__0_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* FSM_ENCODED_STATES = "wr_16:000000001,wait_wr_done1:000000010,wait_rd_data:000001000,drp_rd:000100000,idle:000010000,wait_wr_done2:001000000,wr_20:100000000,wait_rxpmarst_low:010000000,wait_pmareset:000000100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync1_RXPMARESETDONE_n_0),
        .Q(p_0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__0
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_0_in),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[1] ),
        .O(flag_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__0_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \gt0_drpdo[15]_INST_0_i_2 
       (.I0(flag),
        .I1(p_0_in),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\gt0_drpdo[15]_INST_0_i_3_n_0 ),
        .O(drp_pma_busy));
  LUT5 #(
    .INIT(32'hFFFFEEFE)) 
    \gt0_drpdo[15]_INST_0_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(drp_busy_i1),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\gt0_drpdo[15]_INST_0_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    gtpe2_i_i_1
       (.I0(drpen_pma_t),
        .I1(drp_pma_busy),
        .I2(gt0_eyescandataerror_out_16),
        .I3(drp_op_done),
        .I4(drpen_rst_t),
        .O(DRPEN));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_10
       (.I0(in9[9]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_4),
        .I4(drp_op_done),
        .I5(drpdi_o[9]),
        .O(DRPDI[9]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_11
       (.I0(in9[8]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_5),
        .I4(drp_op_done),
        .I5(drpdi_o[8]),
        .O(DRPDI[8]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_12
       (.I0(in9[7]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_6),
        .I4(drp_op_done),
        .I5(drpdi_o[7]),
        .O(DRPDI[7]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_13
       (.I0(in9[6]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_7),
        .I4(drp_op_done),
        .I5(drpdi_o[6]),
        .O(DRPDI[6]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_14
       (.I0(in9[5]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_8),
        .I4(drp_op_done),
        .I5(drpdi_o[5]),
        .O(DRPDI[5]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_15
       (.I0(in9[4]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_9),
        .I4(drp_op_done),
        .I5(drpdi_o[4]),
        .O(DRPDI[4]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_16
       (.I0(in9[3]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_10),
        .I4(drp_op_done),
        .I5(drpdi_o[3]),
        .O(DRPDI[3]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_17
       (.I0(in9[2]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_11),
        .I4(drp_op_done),
        .I5(drpdi_o[2]),
        .O(DRPDI[2]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_18
       (.I0(in9[1]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_12),
        .I4(drp_op_done),
        .I5(drpdi_o[1]),
        .O(DRPDI[1]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_19
       (.I0(in9[0]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_13),
        .I4(drp_op_done),
        .I5(drpdi_o[0]),
        .O(DRPDI[0]));
  LUT6 #(
    .INIT(64'hEFE0FFFFEFE00000)) 
    gtpe2_i_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_14),
        .I4(drp_op_done),
        .I5(drpwe_rst_t),
        .O(DRPWE));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    gtpe2_i_i_30
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(drp_busy_i1),
        .I3(p_0_in),
        .O(drpen_pma_t));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_35
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(p_0_in),
        .O(drpwe_pma_t));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_4
       (.I0(in9[15]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out),
        .I4(drp_op_done),
        .I5(drpdi_o[15]),
        .O(DRPDI[15]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_5
       (.I0(in9[14]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_0),
        .I4(drp_op_done),
        .I5(drpdi_o[14]),
        .O(DRPDI[14]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_6
       (.I0(in9[13]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_1),
        .I4(drp_op_done),
        .I5(drpdi_o[13]),
        .O(DRPDI[13]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_7
       (.I0(in9[12]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_2),
        .I4(drp_op_done),
        .I5(drpdi_o[12]),
        .O(DRPDI[12]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_8__2
       (.I0(p_0_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_15),
        .I4(drp_op_done),
        .I5(drpdi_o[11]),
        .O(DRPDI[11]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    gtpe2_i_i_9
       (.I0(in9[10]),
        .I1(drpwe_pma_t),
        .I2(drp_pma_busy),
        .I3(gt0_eyescandataerror_out_3),
        .I4(drp_op_done),
        .I5(drpdi_o[10]),
        .O(DRPDI[10]));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__0 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__0 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__0 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__0 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__0 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__0 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__0 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__0 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__0 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__0 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__0 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__0 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__0 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__0 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__0 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__0 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__0 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__0 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__0_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__0_n_0 ),
        .Q(in9[0]));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__0_n_0 ),
        .Q(in9[10]));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__0_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__0_n_0 ),
        .Q(in9[12]));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__0_n_0 ),
        .Q(in9[13]));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__0_n_0 ),
        .Q(in9[14]));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__0_n_0 ),
        .Q(in9[15]));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__0_n_0 ),
        .Q(in9[1]));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__0_n_0 ),
        .Q(in9[2]));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__0_n_0 ),
        .Q(in9[3]));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__0_n_0 ),
        .Q(in9[4]));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__0_n_0 ),
        .Q(in9[5]));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__0_n_0 ),
        .Q(in9[6]));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__0_n_0 ),
        .Q(in9[7]));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__0_n_0 ),
        .Q(in9[8]));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__0_n_0 ),
        .Q(in9[9]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'hFFEA)) 
    rxpmareset_o_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(rxpmareset_ss),
        .I3(flag),
        .O(rxpmareset_i));
  FDCE rxpmareset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_i),
        .Q(RXPMARESET));
  FDCE rxpmareset_s_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gt0_rxpmareset_in),
        .Q(rxpmareset_s));
  FDCE rxpmareset_ss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmareset_s),
        .Q(rxpmareset_ss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_66 sync1_RXPMARESETDONE
       (.D({sync1_RXPMARESETDONE_n_0,sync1_RXPMARESETDONE_n_1}),
        .Q({\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[1] }),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq
   (gt3_drpdo,
    drp_rate_busy,
    gt3_drprdy,
    \rd_data_reg[11]_0 ,
    DRPADDR,
    \rd_data_reg[0]_0 ,
    \rd_data_reg[1]_0 ,
    \rd_data_reg[2]_0 ,
    \rd_data_reg[3]_0 ,
    \rd_data_reg[4]_0 ,
    \rd_data_reg[5]_0 ,
    \rd_data_reg[6]_0 ,
    \rd_data_reg[7]_0 ,
    \rd_data_reg[8]_0 ,
    \rd_data_reg[9]_0 ,
    \rd_data_reg[10]_0 ,
    \rd_data_reg[12]_0 ,
    \rd_data_reg[13]_0 ,
    \rd_data_reg[14]_0 ,
    \rd_data_reg[15]_0 ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[0]_1 ,
    drp_op_done_o_reg,
    Q,
    dclk,
    drp_pma_busy,
    drp_op_done,
    DRPDO,
    drprdy_i,
    drp_busy_i2,
    gt3_drpdi,
    gt3_drpaddr,
    gt3_drpwe,
    gt3_drpen,
    data_in,
    gt3_rxrate_in,
    AR);
  output [15:0]gt3_drpdo;
  output drp_rate_busy;
  output gt3_drprdy;
  output \rd_data_reg[11]_0 ;
  output [1:0]DRPADDR;
  output \rd_data_reg[0]_0 ;
  output \rd_data_reg[1]_0 ;
  output \rd_data_reg[2]_0 ;
  output \rd_data_reg[3]_0 ;
  output \rd_data_reg[4]_0 ;
  output \rd_data_reg[5]_0 ;
  output \rd_data_reg[6]_0 ;
  output \rd_data_reg[7]_0 ;
  output \rd_data_reg[8]_0 ;
  output \rd_data_reg[9]_0 ;
  output \rd_data_reg[10]_0 ;
  output \rd_data_reg[12]_0 ;
  output \rd_data_reg[13]_0 ;
  output \rd_data_reg[14]_0 ;
  output \rd_data_reg[15]_0 ;
  output \FSM_sequential_state_reg[0]_0 ;
  output \FSM_sequential_state_reg[0]_1 ;
  output drp_op_done_o_reg;
  output [2:0]Q;
  input dclk;
  input drp_pma_busy;
  input drp_op_done;
  input [15:0]DRPDO;
  input drprdy_i;
  input drp_busy_i2;
  input [15:0]gt3_drpdi;
  input [1:0]gt3_drpaddr;
  input gt3_drpwe;
  input gt3_drpen;
  input data_in;
  input [2:0]gt3_rxrate_in;
  input [0:0]AR;

  wire [0:0]AR;
  wire [1:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire [2:0]Q;
  wire \cdc_rxrate[0].sync_RXRATE_n_0 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_1 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_2 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_3 ;
  wire data_in;
  wire dclk;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire drprdy_i;
  wire flag_i_1__10_n_0;
  wire flag_reg_n_0;
  wire [1:0]gt3_drpaddr;
  wire [15:0]gt3_drpdi;
  wire [15:0]gt3_drpdo;
  wire gt3_drpen;
  wire gt3_drprdy;
  wire gt3_drpwe;
  wire [2:0]gt3_rxrate_in;
  wire next_rd_data;
  wire [2:0]next_state;
  wire \old_rxrate[0]_i_1_n_0 ;
  wire \old_rxrate[1]_i_1_n_0 ;
  wire \old_rxrate[2]_i_1_n_0 ;
  wire \old_rxrate_reg_n_0_[0] ;
  wire \old_rxrate_reg_n_0_[1] ;
  wire \old_rxrate_reg_n_0_[2] ;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire \rd_data[0]_i_1__8_n_0 ;
  wire \rd_data[10]_i_1__8_n_0 ;
  wire \rd_data[11]_i_1__8_n_0 ;
  wire \rd_data[12]_i_1__8_n_0 ;
  wire \rd_data[13]_i_1__8_n_0 ;
  wire \rd_data[14]_i_1__8_n_0 ;
  wire \rd_data[15]_i_2__8_n_0 ;
  wire \rd_data[1]_i_1__8_n_0 ;
  wire \rd_data[2]_i_1__8_n_0 ;
  wire \rd_data[3]_i_1__8_n_0 ;
  wire \rd_data[4]_i_1__8_n_0 ;
  wire \rd_data[5]_i_1__8_n_0 ;
  wire \rd_data[6]_i_1__8_n_0 ;
  wire \rd_data[7]_i_1__8_n_0 ;
  wire \rd_data[8]_i_1__8_n_0 ;
  wire \rd_data[9]_i_1__8_n_0 ;
  wire \rd_data_reg[0]_0 ;
  wire \rd_data_reg[10]_0 ;
  wire \rd_data_reg[11]_0 ;
  wire \rd_data_reg[12]_0 ;
  wire \rd_data_reg[13]_0 ;
  wire \rd_data_reg[14]_0 ;
  wire \rd_data_reg[15]_0 ;
  wire \rd_data_reg[1]_0 ;
  wire \rd_data_reg[2]_0 ;
  wire \rd_data_reg[3]_0 ;
  wire \rd_data_reg[4]_0 ;
  wire \rd_data_reg[5]_0 ;
  wire \rd_data_reg[6]_0 ;
  wire \rd_data_reg[7]_0 ;
  wire \rd_data_reg[8]_0 ;
  wire \rd_data_reg[9]_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire [2:0]rxrate_ss;
  wire \rxrate_sss_reg_n_0_[0] ;
  wire \rxrate_sss_reg_n_0_[1] ;
  wire \rxrate_sss_reg_n_0_[2] ;
  wire [2:0]state;

  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(next_state[0]),
        .PRE(AR),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[1]),
        .Q(state[1]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[2]),
        .Q(state[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_32 \cdc_rxrate[0].sync_RXRATE 
       (.D({\cdc_rxrate[0].sync_RXRATE_n_0 ,\cdc_rxrate[0].sync_RXRATE_n_1 ,\cdc_rxrate[0].sync_RXRATE_n_2 }),
        .\FSM_sequential_state_reg[2] (next_state[2:1]),
        .Q(state),
        .data_out(rxrate_ss[0]),
        .data_sync_reg6_0(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .gt3_rxrate_in(gt3_rxrate_in[0]),
        .\rxrate_o_reg[0] (\old_rxrate_reg_n_0_[0] ),
        .\rxrate_o_reg[1] (\old_rxrate_reg_n_0_[1] ),
        .\rxrate_o_reg[2] (rxrate_ss[2:1]),
        .\rxrate_o_reg[2]_0 (\old_rxrate_reg_n_0_[2] ),
        .\rxrate_o_reg[2]_1 ({\rxrate_sss_reg_n_0_[2] ,\rxrate_sss_reg_n_0_[1] ,\rxrate_sss_reg_n_0_[0] }));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_33 \cdc_rxrate[1].sync_RXRATE 
       (.data_out(rxrate_ss[1]),
        .dclk(dclk),
        .gt3_rxrate_in(gt3_rxrate_in[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_34 \cdc_rxrate[2].sync_RXRATE 
       (.data_out(rxrate_ss[2]),
        .dclk(dclk),
        .gt3_rxrate_in(gt3_rxrate_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'h7FF5FFFF)) 
    drp_busy_i1_i_1__2
       (.I0(drp_op_done),
        .I1(drp_busy_i2),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(drp_op_done_o_reg));
  LUT4 #(
    .INIT(16'hAFF8)) 
    flag_i_1__10
       (.I0(flag_reg_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(flag_i_1__10_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__10_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[0]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[0]),
        .O(gt3_drpdo[0]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[10]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[10]),
        .O(gt3_drpdo[10]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[11]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[11]),
        .O(gt3_drpdo[11]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[12]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[12]),
        .O(gt3_drpdo[12]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[13]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[13]),
        .O(gt3_drpdo[13]));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[14]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[14]),
        .O(gt3_drpdo[14]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[15]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[15]),
        .O(gt3_drpdo[15]));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT4 #(
    .INIT(16'h7DFD)) 
    \gt3_drpdo[15]_INST_0_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .O(drp_rate_busy));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[1]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[1]),
        .O(gt3_drpdo[1]));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[2]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[2]),
        .O(gt3_drpdo[2]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[3]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[3]),
        .O(gt3_drpdo[3]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[4]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[4]),
        .O(gt3_drpdo[4]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[5]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[5]),
        .O(gt3_drpdo[5]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[6]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[6]),
        .O(gt3_drpdo[6]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[7]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[7]),
        .O(gt3_drpdo[7]));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[8]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[8]),
        .O(gt3_drpdo[8]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt3_drpdo[9]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[9]),
        .O(gt3_drpdo[9]));
  LUT4 #(
    .INIT(16'hF700)) 
    gt3_drprdy_INST_0
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(drprdy_i),
        .O(gt3_drprdy));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_24__2
       (.I0(drp_rate_busy),
        .I1(gt3_drpaddr[1]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_28__2
       (.I0(drp_rate_busy),
        .I1(gt3_drpaddr[0]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hA6A624A4)) 
    gtpe2_i_i_30__2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt3_drpen),
        .O(\FSM_sequential_state_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hA6262424)) 
    gtpe2_i_i_32__2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt3_drpwe),
        .O(\FSM_sequential_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_35__2
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[15]),
        .O(\rd_data_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_37__2
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[14]),
        .O(\rd_data_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_39__2
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[13]),
        .O(\rd_data_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_41__2
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[12]),
        .O(\rd_data_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hC02C002C00200020)) 
    gtpe2_i_i_43__2
       (.I0(\rd_data_reg_n_0_[11] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[11]),
        .O(\rd_data_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_45__1
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[10]),
        .O(\rd_data_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_47__2
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[9]),
        .O(\rd_data_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_49__2
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[8]),
        .O(\rd_data_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_51__2
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[7]),
        .O(\rd_data_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_53__2
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[6]),
        .O(\rd_data_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_55__2
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[5]),
        .O(\rd_data_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_57__2
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[4]),
        .O(\rd_data_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_59__2
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[3]),
        .O(\rd_data_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_61__2
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[2]),
        .O(\rd_data_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_63__2
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[1]),
        .O(\rd_data_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_65__2
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt3_drpdi[0]),
        .O(\rd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[0]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[0] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[0] ),
        .O(\old_rxrate[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[1]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[1] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[1] ),
        .O(\old_rxrate[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[2]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[2] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[2] ),
        .O(\old_rxrate[2]_i_1_n_0 ));
  FDCE \old_rxrate_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[0]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[0] ));
  FDCE \old_rxrate_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[1]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[1] ));
  FDCE \old_rxrate_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[2]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[2] ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \original_rd_data[15]_i_1__10 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__8 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__8 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__8 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__8 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__8 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__8 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__8_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \rd_data[15]_i_1__10 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(drprdy_i),
        .I3(state[1]),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__8 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__8 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__8 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__8 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__8 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__8 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__8 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__8 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__8 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__8 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__8_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__8_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__8_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE \rxrate_o_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_2 ),
        .Q(Q[0]));
  FDCE \rxrate_o_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_1 ),
        .Q(Q[1]));
  FDCE \rxrate_o_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_0 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[0]),
        .Q(\rxrate_sss_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[1]),
        .Q(\rxrate_sss_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[2]),
        .Q(\rxrate_sss_reg_n_0_[2] ));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_35 sync2_RXPMARESETDONE
       (.D(next_state[0]),
        .Q(state),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_39
   (gt2_drpdo,
    drp_rate_busy,
    gt2_drprdy,
    \rd_data_reg[11]_0 ,
    DRPADDR,
    \rd_data_reg[0]_0 ,
    \rd_data_reg[1]_0 ,
    \rd_data_reg[2]_0 ,
    \rd_data_reg[3]_0 ,
    \rd_data_reg[4]_0 ,
    \rd_data_reg[5]_0 ,
    \rd_data_reg[6]_0 ,
    \rd_data_reg[7]_0 ,
    \rd_data_reg[8]_0 ,
    \rd_data_reg[9]_0 ,
    \rd_data_reg[10]_0 ,
    \rd_data_reg[12]_0 ,
    \rd_data_reg[13]_0 ,
    \rd_data_reg[14]_0 ,
    \rd_data_reg[15]_0 ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[0]_1 ,
    drp_op_done_o_reg,
    Q,
    dclk,
    drp_pma_busy,
    drp_op_done,
    DRPDO,
    drprdy_i,
    drp_busy_i2,
    gt2_drpdi,
    gt2_drpaddr,
    gt2_drpwe,
    gt2_drpen,
    data_in,
    gt2_rxrate_in,
    AR);
  output [15:0]gt2_drpdo;
  output drp_rate_busy;
  output gt2_drprdy;
  output \rd_data_reg[11]_0 ;
  output [1:0]DRPADDR;
  output \rd_data_reg[0]_0 ;
  output \rd_data_reg[1]_0 ;
  output \rd_data_reg[2]_0 ;
  output \rd_data_reg[3]_0 ;
  output \rd_data_reg[4]_0 ;
  output \rd_data_reg[5]_0 ;
  output \rd_data_reg[6]_0 ;
  output \rd_data_reg[7]_0 ;
  output \rd_data_reg[8]_0 ;
  output \rd_data_reg[9]_0 ;
  output \rd_data_reg[10]_0 ;
  output \rd_data_reg[12]_0 ;
  output \rd_data_reg[13]_0 ;
  output \rd_data_reg[14]_0 ;
  output \rd_data_reg[15]_0 ;
  output \FSM_sequential_state_reg[0]_0 ;
  output \FSM_sequential_state_reg[0]_1 ;
  output drp_op_done_o_reg;
  output [2:0]Q;
  input dclk;
  input drp_pma_busy;
  input drp_op_done;
  input [15:0]DRPDO;
  input drprdy_i;
  input drp_busy_i2;
  input [15:0]gt2_drpdi;
  input [1:0]gt2_drpaddr;
  input gt2_drpwe;
  input gt2_drpen;
  input data_in;
  input [2:0]gt2_rxrate_in;
  input [0:0]AR;

  wire [0:0]AR;
  wire [1:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire [2:0]Q;
  wire \cdc_rxrate[0].sync_RXRATE_n_0 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_1 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_2 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_3 ;
  wire data_in;
  wire dclk;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire drprdy_i;
  wire flag_i_1__7_n_0;
  wire flag_reg_n_0;
  wire [1:0]gt2_drpaddr;
  wire [15:0]gt2_drpdi;
  wire [15:0]gt2_drpdo;
  wire gt2_drpen;
  wire gt2_drprdy;
  wire gt2_drpwe;
  wire [2:0]gt2_rxrate_in;
  wire next_rd_data;
  wire [2:0]next_state;
  wire \old_rxrate[0]_i_1_n_0 ;
  wire \old_rxrate[1]_i_1_n_0 ;
  wire \old_rxrate[2]_i_1_n_0 ;
  wire \old_rxrate_reg_n_0_[0] ;
  wire \old_rxrate_reg_n_0_[1] ;
  wire \old_rxrate_reg_n_0_[2] ;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire \rd_data[0]_i_1__5_n_0 ;
  wire \rd_data[10]_i_1__5_n_0 ;
  wire \rd_data[11]_i_1__5_n_0 ;
  wire \rd_data[12]_i_1__5_n_0 ;
  wire \rd_data[13]_i_1__5_n_0 ;
  wire \rd_data[14]_i_1__5_n_0 ;
  wire \rd_data[15]_i_2__5_n_0 ;
  wire \rd_data[1]_i_1__5_n_0 ;
  wire \rd_data[2]_i_1__5_n_0 ;
  wire \rd_data[3]_i_1__5_n_0 ;
  wire \rd_data[4]_i_1__5_n_0 ;
  wire \rd_data[5]_i_1__5_n_0 ;
  wire \rd_data[6]_i_1__5_n_0 ;
  wire \rd_data[7]_i_1__5_n_0 ;
  wire \rd_data[8]_i_1__5_n_0 ;
  wire \rd_data[9]_i_1__5_n_0 ;
  wire \rd_data_reg[0]_0 ;
  wire \rd_data_reg[10]_0 ;
  wire \rd_data_reg[11]_0 ;
  wire \rd_data_reg[12]_0 ;
  wire \rd_data_reg[13]_0 ;
  wire \rd_data_reg[14]_0 ;
  wire \rd_data_reg[15]_0 ;
  wire \rd_data_reg[1]_0 ;
  wire \rd_data_reg[2]_0 ;
  wire \rd_data_reg[3]_0 ;
  wire \rd_data_reg[4]_0 ;
  wire \rd_data_reg[5]_0 ;
  wire \rd_data_reg[6]_0 ;
  wire \rd_data_reg[7]_0 ;
  wire \rd_data_reg[8]_0 ;
  wire \rd_data_reg[9]_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire [2:0]rxrate_ss;
  wire \rxrate_sss_reg_n_0_[0] ;
  wire \rxrate_sss_reg_n_0_[1] ;
  wire \rxrate_sss_reg_n_0_[2] ;
  wire [2:0]state;

  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(next_state[0]),
        .PRE(AR),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[1]),
        .Q(state[1]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[2]),
        .Q(state[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_44 \cdc_rxrate[0].sync_RXRATE 
       (.D({\cdc_rxrate[0].sync_RXRATE_n_0 ,\cdc_rxrate[0].sync_RXRATE_n_1 ,\cdc_rxrate[0].sync_RXRATE_n_2 }),
        .\FSM_sequential_state_reg[2] (next_state[2:1]),
        .Q(state),
        .data_out(rxrate_ss[0]),
        .data_sync_reg6_0(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .gt2_rxrate_in(gt2_rxrate_in[0]),
        .\rxrate_o_reg[0] (\old_rxrate_reg_n_0_[0] ),
        .\rxrate_o_reg[1] (\old_rxrate_reg_n_0_[1] ),
        .\rxrate_o_reg[2] (rxrate_ss[2:1]),
        .\rxrate_o_reg[2]_0 (\old_rxrate_reg_n_0_[2] ),
        .\rxrate_o_reg[2]_1 ({\rxrate_sss_reg_n_0_[2] ,\rxrate_sss_reg_n_0_[1] ,\rxrate_sss_reg_n_0_[0] }));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_45 \cdc_rxrate[1].sync_RXRATE 
       (.data_out(rxrate_ss[1]),
        .dclk(dclk),
        .gt2_rxrate_in(gt2_rxrate_in[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_46 \cdc_rxrate[2].sync_RXRATE 
       (.data_out(rxrate_ss[2]),
        .dclk(dclk),
        .gt2_rxrate_in(gt2_rxrate_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT5 #(
    .INIT(32'h7FF5FFFF)) 
    drp_busy_i1_i_1__1
       (.I0(drp_op_done),
        .I1(drp_busy_i2),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(drp_op_done_o_reg));
  LUT4 #(
    .INIT(16'hAFF8)) 
    flag_i_1__7
       (.I0(flag_reg_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(flag_i_1__7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__7_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[0]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[0]),
        .O(gt2_drpdo[0]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[10]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[10]),
        .O(gt2_drpdo[10]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[11]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[11]),
        .O(gt2_drpdo[11]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[12]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[12]),
        .O(gt2_drpdo[12]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[13]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[13]),
        .O(gt2_drpdo[13]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[14]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[14]),
        .O(gt2_drpdo[14]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[15]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[15]),
        .O(gt2_drpdo[15]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT4 #(
    .INIT(16'h7DFD)) 
    \gt2_drpdo[15]_INST_0_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .O(drp_rate_busy));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[1]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[1]),
        .O(gt2_drpdo[1]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[2]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[2]),
        .O(gt2_drpdo[2]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[3]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[3]),
        .O(gt2_drpdo[3]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[4]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[4]),
        .O(gt2_drpdo[4]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[5]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[5]),
        .O(gt2_drpdo[5]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[6]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[6]),
        .O(gt2_drpdo[6]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[7]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[7]),
        .O(gt2_drpdo[7]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[8]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[8]),
        .O(gt2_drpdo[8]));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt2_drpdo[9]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[9]),
        .O(gt2_drpdo[9]));
  LUT4 #(
    .INIT(16'hF700)) 
    gt2_drprdy_INST_0
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(drprdy_i),
        .O(gt2_drprdy));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_24__1
       (.I0(drp_rate_busy),
        .I1(gt2_drpaddr[1]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_28__1
       (.I0(drp_rate_busy),
        .I1(gt2_drpaddr[0]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hA6A624A4)) 
    gtpe2_i_i_30__1
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt2_drpen),
        .O(\FSM_sequential_state_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hA6262424)) 
    gtpe2_i_i_32__1
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt2_drpwe),
        .O(\FSM_sequential_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_35__1
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[15]),
        .O(\rd_data_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_37__1
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[14]),
        .O(\rd_data_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_39__1
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[13]),
        .O(\rd_data_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_41__1
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[12]),
        .O(\rd_data_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hC02C002C00200020)) 
    gtpe2_i_i_43__1
       (.I0(\rd_data_reg_n_0_[11] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[11]),
        .O(\rd_data_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_45__0
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[10]),
        .O(\rd_data_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_47__1
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[9]),
        .O(\rd_data_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_49__1
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[8]),
        .O(\rd_data_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_51__1
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[7]),
        .O(\rd_data_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_53__1
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[6]),
        .O(\rd_data_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_55__1
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[5]),
        .O(\rd_data_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_57__1
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[4]),
        .O(\rd_data_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_59__1
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[3]),
        .O(\rd_data_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_61__1
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[2]),
        .O(\rd_data_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_63__1
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[1]),
        .O(\rd_data_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_65__1
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt2_drpdi[0]),
        .O(\rd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[0]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[0] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[0] ),
        .O(\old_rxrate[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[1]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[1] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[1] ),
        .O(\old_rxrate[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[2]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[2] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[2] ),
        .O(\old_rxrate[2]_i_1_n_0 ));
  FDCE \old_rxrate_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[0]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[0] ));
  FDCE \old_rxrate_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[1]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[1] ));
  FDCE \old_rxrate_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[2]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[2] ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \original_rd_data[15]_i_1__7 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__5 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__5 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__5 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__5 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__5 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__5 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__5_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \rd_data[15]_i_1__7 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(drprdy_i),
        .I3(state[1]),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__5 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__5 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__5 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__5 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__5 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__5 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__5 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__5 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__5 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__5 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__5_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__5_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__5_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE \rxrate_o_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_2 ),
        .Q(Q[0]));
  FDCE \rxrate_o_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_1 ),
        .Q(Q[1]));
  FDCE \rxrate_o_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_0 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[0]),
        .Q(\rxrate_sss_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[1]),
        .Q(\rxrate_sss_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[2]),
        .Q(\rxrate_sss_reg_n_0_[2] ));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_47 sync2_RXPMARESETDONE
       (.D(next_state[0]),
        .Q(state),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_51
   (gt1_drpdo,
    drp_rate_busy,
    gt1_drprdy,
    \rd_data_reg[11]_0 ,
    DRPADDR,
    \rd_data_reg[0]_0 ,
    \rd_data_reg[1]_0 ,
    \rd_data_reg[2]_0 ,
    \rd_data_reg[3]_0 ,
    \rd_data_reg[4]_0 ,
    \rd_data_reg[5]_0 ,
    \rd_data_reg[6]_0 ,
    \rd_data_reg[7]_0 ,
    \rd_data_reg[8]_0 ,
    \rd_data_reg[9]_0 ,
    \rd_data_reg[10]_0 ,
    \rd_data_reg[12]_0 ,
    \rd_data_reg[13]_0 ,
    \rd_data_reg[14]_0 ,
    \rd_data_reg[15]_0 ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[0]_1 ,
    drp_op_done_o_reg,
    Q,
    dclk,
    drp_pma_busy,
    drp_op_done,
    DRPDO,
    drprdy_i,
    drp_busy_i2,
    gt1_drpdi,
    gt1_drpaddr,
    gt1_drpwe,
    gt1_drpen,
    data_in,
    gt1_rxrate_in,
    AR);
  output [15:0]gt1_drpdo;
  output drp_rate_busy;
  output gt1_drprdy;
  output \rd_data_reg[11]_0 ;
  output [1:0]DRPADDR;
  output \rd_data_reg[0]_0 ;
  output \rd_data_reg[1]_0 ;
  output \rd_data_reg[2]_0 ;
  output \rd_data_reg[3]_0 ;
  output \rd_data_reg[4]_0 ;
  output \rd_data_reg[5]_0 ;
  output \rd_data_reg[6]_0 ;
  output \rd_data_reg[7]_0 ;
  output \rd_data_reg[8]_0 ;
  output \rd_data_reg[9]_0 ;
  output \rd_data_reg[10]_0 ;
  output \rd_data_reg[12]_0 ;
  output \rd_data_reg[13]_0 ;
  output \rd_data_reg[14]_0 ;
  output \rd_data_reg[15]_0 ;
  output \FSM_sequential_state_reg[0]_0 ;
  output \FSM_sequential_state_reg[0]_1 ;
  output drp_op_done_o_reg;
  output [2:0]Q;
  input dclk;
  input drp_pma_busy;
  input drp_op_done;
  input [15:0]DRPDO;
  input drprdy_i;
  input drp_busy_i2;
  input [15:0]gt1_drpdi;
  input [1:0]gt1_drpaddr;
  input gt1_drpwe;
  input gt1_drpen;
  input data_in;
  input [2:0]gt1_rxrate_in;
  input [0:0]AR;

  wire [0:0]AR;
  wire [1:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire [2:0]Q;
  wire \cdc_rxrate[0].sync_RXRATE_n_0 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_1 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_2 ;
  wire \cdc_rxrate[0].sync_RXRATE_n_3 ;
  wire data_in;
  wire dclk;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire drprdy_i;
  wire flag_i_1__4_n_0;
  wire flag_reg_n_0;
  wire [1:0]gt1_drpaddr;
  wire [15:0]gt1_drpdi;
  wire [15:0]gt1_drpdo;
  wire gt1_drpen;
  wire gt1_drprdy;
  wire gt1_drpwe;
  wire [2:0]gt1_rxrate_in;
  wire next_rd_data;
  wire [2:0]next_state;
  wire \old_rxrate[0]_i_1_n_0 ;
  wire \old_rxrate[1]_i_1_n_0 ;
  wire \old_rxrate[2]_i_1_n_0 ;
  wire \old_rxrate_reg_n_0_[0] ;
  wire \old_rxrate_reg_n_0_[1] ;
  wire \old_rxrate_reg_n_0_[2] ;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire \rd_data[0]_i_1__2_n_0 ;
  wire \rd_data[10]_i_1__2_n_0 ;
  wire \rd_data[11]_i_1__2_n_0 ;
  wire \rd_data[12]_i_1__2_n_0 ;
  wire \rd_data[13]_i_1__2_n_0 ;
  wire \rd_data[14]_i_1__2_n_0 ;
  wire \rd_data[15]_i_2__2_n_0 ;
  wire \rd_data[1]_i_1__2_n_0 ;
  wire \rd_data[2]_i_1__2_n_0 ;
  wire \rd_data[3]_i_1__2_n_0 ;
  wire \rd_data[4]_i_1__2_n_0 ;
  wire \rd_data[5]_i_1__2_n_0 ;
  wire \rd_data[6]_i_1__2_n_0 ;
  wire \rd_data[7]_i_1__2_n_0 ;
  wire \rd_data[8]_i_1__2_n_0 ;
  wire \rd_data[9]_i_1__2_n_0 ;
  wire \rd_data_reg[0]_0 ;
  wire \rd_data_reg[10]_0 ;
  wire \rd_data_reg[11]_0 ;
  wire \rd_data_reg[12]_0 ;
  wire \rd_data_reg[13]_0 ;
  wire \rd_data_reg[14]_0 ;
  wire \rd_data_reg[15]_0 ;
  wire \rd_data_reg[1]_0 ;
  wire \rd_data_reg[2]_0 ;
  wire \rd_data_reg[3]_0 ;
  wire \rd_data_reg[4]_0 ;
  wire \rd_data_reg[5]_0 ;
  wire \rd_data_reg[6]_0 ;
  wire \rd_data_reg[7]_0 ;
  wire \rd_data_reg[8]_0 ;
  wire \rd_data_reg[9]_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire [2:0]rxrate_ss;
  wire \rxrate_sss_reg_n_0_[0] ;
  wire \rxrate_sss_reg_n_0_[1] ;
  wire \rxrate_sss_reg_n_0_[2] ;
  wire [2:0]state;

  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(next_state[0]),
        .PRE(AR),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[1]),
        .Q(state[1]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[2]),
        .Q(state[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_56 \cdc_rxrate[0].sync_RXRATE 
       (.D({\cdc_rxrate[0].sync_RXRATE_n_0 ,\cdc_rxrate[0].sync_RXRATE_n_1 ,\cdc_rxrate[0].sync_RXRATE_n_2 }),
        .\FSM_sequential_state_reg[2] (next_state[2:1]),
        .Q(state),
        .data_out(rxrate_ss[0]),
        .data_sync_reg6_0(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .gt1_rxrate_in(gt1_rxrate_in[0]),
        .\rxrate_o_reg[0] (\old_rxrate_reg_n_0_[0] ),
        .\rxrate_o_reg[1] (\old_rxrate_reg_n_0_[1] ),
        .\rxrate_o_reg[2] (rxrate_ss[2:1]),
        .\rxrate_o_reg[2]_0 (\old_rxrate_reg_n_0_[2] ),
        .\rxrate_o_reg[2]_1 ({\rxrate_sss_reg_n_0_[2] ,\rxrate_sss_reg_n_0_[1] ,\rxrate_sss_reg_n_0_[0] }));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_57 \cdc_rxrate[1].sync_RXRATE 
       (.data_out(rxrate_ss[1]),
        .dclk(dclk),
        .gt1_rxrate_in(gt1_rxrate_in[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_58 \cdc_rxrate[2].sync_RXRATE 
       (.data_out(rxrate_ss[2]),
        .dclk(dclk),
        .gt1_rxrate_in(gt1_rxrate_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT5 #(
    .INIT(32'h7FF5FFFF)) 
    drp_busy_i1_i_1__0
       (.I0(drp_op_done),
        .I1(drp_busy_i2),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(drp_op_done_o_reg));
  LUT4 #(
    .INIT(16'hAFF8)) 
    flag_i_1__4
       (.I0(flag_reg_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(flag_i_1__4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__4_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[0]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[0]),
        .O(gt1_drpdo[0]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[10]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[10]),
        .O(gt1_drpdo[10]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[11]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[11]),
        .O(gt1_drpdo[11]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[12]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[12]),
        .O(gt1_drpdo[12]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[13]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[13]),
        .O(gt1_drpdo[13]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[14]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[14]),
        .O(gt1_drpdo[14]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[15]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[15]),
        .O(gt1_drpdo[15]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h7DFD)) 
    \gt1_drpdo[15]_INST_0_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .O(drp_rate_busy));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[1]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[1]),
        .O(gt1_drpdo[1]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[2]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[2]),
        .O(gt1_drpdo[2]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[3]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[3]),
        .O(gt1_drpdo[3]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[4]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[4]),
        .O(gt1_drpdo[4]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[5]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[5]),
        .O(gt1_drpdo[5]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[6]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[6]),
        .O(gt1_drpdo[6]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[7]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[7]),
        .O(gt1_drpdo[7]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[8]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[8]),
        .O(gt1_drpdo[8]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt1_drpdo[9]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[9]),
        .O(gt1_drpdo[9]));
  LUT4 #(
    .INIT(16'hF700)) 
    gt1_drprdy_INST_0
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(drprdy_i),
        .O(gt1_drprdy));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_24__0
       (.I0(drp_rate_busy),
        .I1(gt1_drpaddr[1]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_28__0
       (.I0(drp_rate_busy),
        .I1(gt1_drpaddr[0]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hA6A624A4)) 
    gtpe2_i_i_30__0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt1_drpen),
        .O(\FSM_sequential_state_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hA6262424)) 
    gtpe2_i_i_32__0
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt1_drpwe),
        .O(\FSM_sequential_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_35__0
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[15]),
        .O(\rd_data_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_37__0
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[14]),
        .O(\rd_data_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_39__0
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[13]),
        .O(\rd_data_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_41__0
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[12]),
        .O(\rd_data_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hC02C002C00200020)) 
    gtpe2_i_i_43__0
       (.I0(\rd_data_reg_n_0_[11] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[11]),
        .O(\rd_data_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_45
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[10]),
        .O(\rd_data_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_47__0
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[9]),
        .O(\rd_data_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_49__0
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[8]),
        .O(\rd_data_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_51__0
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[7]),
        .O(\rd_data_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_53__0
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[6]),
        .O(\rd_data_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_55__0
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[5]),
        .O(\rd_data_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_57__0
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[4]),
        .O(\rd_data_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_59__0
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[3]),
        .O(\rd_data_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_61__0
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[2]),
        .O(\rd_data_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_63__0
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[1]),
        .O(\rd_data_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_65__0
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt1_drpdi[0]),
        .O(\rd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[0]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[0] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[0] ),
        .O(\old_rxrate[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[1]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[1] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[1] ),
        .O(\old_rxrate[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[2]_i_1 
       (.I0(\rxrate_sss_reg_n_0_[2] ),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(\old_rxrate_reg_n_0_[2] ),
        .O(\old_rxrate[2]_i_1_n_0 ));
  FDCE \old_rxrate_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[0]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[0] ));
  FDCE \old_rxrate_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[1]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[1] ));
  FDCE \old_rxrate_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[2]_i_1_n_0 ),
        .Q(\old_rxrate_reg_n_0_[2] ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \original_rd_data[15]_i_1__4 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__2 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__2 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__2 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__2 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__2 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__2 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \rd_data[15]_i_1__4 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(drprdy_i),
        .I3(state[1]),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__2 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__2 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__2 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__2 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__2 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__2 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__2 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__2 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__2 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__2 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__2_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__2_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__2_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE \rxrate_o_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_2 ),
        .Q(Q[0]));
  FDCE \rxrate_o_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_1 ),
        .Q(Q[1]));
  FDCE \rxrate_o_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\cdc_rxrate[0].sync_RXRATE_n_0 ),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[0]),
        .Q(\rxrate_sss_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[1]),
        .Q(\rxrate_sss_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[2]),
        .Q(\rxrate_sss_reg_n_0_[2] ));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_59 sync2_RXPMARESETDONE
       (.D(next_state[0]),
        .Q(state),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxrate_seq_63
   (gt0_drpdo,
    drp_rate_busy,
    gt0_drprdy,
    \rd_data_reg[11]_0 ,
    DRPADDR,
    \rd_data_reg[0]_0 ,
    \rd_data_reg[1]_0 ,
    \rd_data_reg[2]_0 ,
    \rd_data_reg[3]_0 ,
    \rd_data_reg[4]_0 ,
    \rd_data_reg[5]_0 ,
    \rd_data_reg[6]_0 ,
    \rd_data_reg[7]_0 ,
    \rd_data_reg[8]_0 ,
    \rd_data_reg[9]_0 ,
    \rd_data_reg[10]_0 ,
    \rd_data_reg[12]_0 ,
    \rd_data_reg[13]_0 ,
    \rd_data_reg[14]_0 ,
    \rd_data_reg[15]_0 ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[0]_1 ,
    drp_op_done_o_reg,
    Q,
    dclk,
    drp_pma_busy,
    drp_op_done,
    DRPDO,
    drprdy_i,
    drp_busy_i2,
    gt0_drpdi,
    gt0_drpaddr,
    gt0_drpwe,
    gt0_drpen,
    data_in,
    gt0_rxrate_in,
    AR);
  output [15:0]gt0_drpdo;
  output drp_rate_busy;
  output gt0_drprdy;
  output \rd_data_reg[11]_0 ;
  output [1:0]DRPADDR;
  output \rd_data_reg[0]_0 ;
  output \rd_data_reg[1]_0 ;
  output \rd_data_reg[2]_0 ;
  output \rd_data_reg[3]_0 ;
  output \rd_data_reg[4]_0 ;
  output \rd_data_reg[5]_0 ;
  output \rd_data_reg[6]_0 ;
  output \rd_data_reg[7]_0 ;
  output \rd_data_reg[8]_0 ;
  output \rd_data_reg[9]_0 ;
  output \rd_data_reg[10]_0 ;
  output \rd_data_reg[12]_0 ;
  output \rd_data_reg[13]_0 ;
  output \rd_data_reg[14]_0 ;
  output \rd_data_reg[15]_0 ;
  output \FSM_sequential_state_reg[0]_0 ;
  output \FSM_sequential_state_reg[0]_1 ;
  output drp_op_done_o_reg;
  output [2:0]Q;
  input dclk;
  input drp_pma_busy;
  input drp_op_done;
  input [15:0]DRPDO;
  input drprdy_i;
  input drp_busy_i2;
  input [15:0]gt0_drpdi;
  input [1:0]gt0_drpaddr;
  input gt0_drpwe;
  input gt0_drpen;
  input data_in;
  input [2:0]gt0_rxrate_in;
  input [0:0]AR;

  wire [0:0]AR;
  wire [1:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire [2:0]Q;
  wire \cdc_rxrate[0].sync_RXRATE_n_3 ;
  wire data_in;
  wire dclk;
  wire drp_busy_i2;
  wire drp_op_done;
  wire drp_op_done_o_reg;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire drprdy_i;
  wire flag_i_1__1_n_0;
  wire flag_reg_n_0;
  wire [1:0]gt0_drpaddr;
  wire [15:0]gt0_drpdi;
  wire [15:0]gt0_drpdo;
  wire gt0_drpen;
  wire gt0_drprdy;
  wire gt0_drpwe;
  wire [2:0]gt0_rxrate_in;
  wire next_rd_data;
  wire [2:0]next_state;
  wire [2:0]old_rxrate;
  wire \old_rxrate[0]_i_1_n_0 ;
  wire \old_rxrate[1]_i_1_n_0 ;
  wire \old_rxrate[2]_i_1_n_0 ;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire \rd_data[0]_i_1_n_0 ;
  wire \rd_data[10]_i_1_n_0 ;
  wire \rd_data[11]_i_1_n_0 ;
  wire \rd_data[12]_i_1_n_0 ;
  wire \rd_data[13]_i_1_n_0 ;
  wire \rd_data[14]_i_1_n_0 ;
  wire \rd_data[15]_i_2_n_0 ;
  wire \rd_data[1]_i_1_n_0 ;
  wire \rd_data[2]_i_1_n_0 ;
  wire \rd_data[3]_i_1_n_0 ;
  wire \rd_data[4]_i_1_n_0 ;
  wire \rd_data[5]_i_1_n_0 ;
  wire \rd_data[6]_i_1_n_0 ;
  wire \rd_data[7]_i_1_n_0 ;
  wire \rd_data[8]_i_1_n_0 ;
  wire \rd_data[9]_i_1_n_0 ;
  wire \rd_data_reg[0]_0 ;
  wire \rd_data_reg[10]_0 ;
  wire \rd_data_reg[11]_0 ;
  wire \rd_data_reg[12]_0 ;
  wire \rd_data_reg[13]_0 ;
  wire \rd_data_reg[14]_0 ;
  wire \rd_data_reg[15]_0 ;
  wire \rd_data_reg[1]_0 ;
  wire \rd_data_reg[2]_0 ;
  wire \rd_data_reg[3]_0 ;
  wire \rd_data_reg[4]_0 ;
  wire \rd_data_reg[5]_0 ;
  wire \rd_data_reg[6]_0 ;
  wire \rd_data_reg[7]_0 ;
  wire \rd_data_reg[8]_0 ;
  wire \rd_data_reg[9]_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire [2:0]rxrate_i;
  wire [2:0]rxrate_ss;
  wire [2:0]rxrate_sss;
  wire [2:0]state;

  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .D(next_state[0]),
        .PRE(AR),
        .Q(state[0]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[1]),
        .Q(state[1]));
  (* FSM_ENCODED_STATES = "drp_rd:111,wait_rd_data:110,wr_16:101,wait_wr_done1:100,wait_pmareset:011,wr_20:010,wait_wr_done2:000,idle:001" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_state[2]),
        .Q(state[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_68 \cdc_rxrate[0].sync_RXRATE 
       (.D(rxrate_i),
        .\FSM_sequential_state_reg[2] (next_state[2:1]),
        .Q(state),
        .data_out(rxrate_ss[0]),
        .data_sync_reg6_0(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .gt0_rxrate_in(gt0_rxrate_in[0]),
        .old_rxrate(old_rxrate),
        .\rxrate_o_reg[2] (rxrate_ss[2:1]),
        .\rxrate_o_reg[2]_0 (rxrate_sss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_69 \cdc_rxrate[1].sync_RXRATE 
       (.data_out(rxrate_ss[1]),
        .dclk(dclk),
        .gt0_rxrate_in(gt0_rxrate_in[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_70 \cdc_rxrate[2].sync_RXRATE 
       (.data_out(rxrate_ss[2]),
        .dclk(dclk),
        .gt0_rxrate_in(gt0_rxrate_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h7FF5FFFF)) 
    drp_busy_i1_i_1
       (.I0(drp_op_done),
        .I1(drp_busy_i2),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .O(drp_op_done_o_reg));
  LUT4 #(
    .INIT(16'hAFF8)) 
    flag_i_1__1
       (.I0(flag_reg_n_0),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .O(flag_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__1_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[0]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[0]),
        .O(gt0_drpdo[0]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[10]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[10]),
        .O(gt0_drpdo[10]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[11]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[11]),
        .O(gt0_drpdo[11]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[12]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[12]),
        .O(gt0_drpdo[12]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[13]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[13]),
        .O(gt0_drpdo[13]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[14]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[14]),
        .O(gt0_drpdo[14]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[15]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[15]),
        .O(gt0_drpdo[15]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h7DFD)) 
    \gt0_drpdo[15]_INST_0_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .O(drp_rate_busy));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[1]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[1]),
        .O(gt0_drpdo[1]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[2]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[2]),
        .O(gt0_drpdo[2]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[3]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[3]),
        .O(gt0_drpdo[3]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[4]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[4]),
        .O(gt0_drpdo[4]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[5]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[5]),
        .O(gt0_drpdo[5]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[6]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[6]),
        .O(gt0_drpdo[6]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[7]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[7]),
        .O(gt0_drpdo[7]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[8]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[8]),
        .O(gt0_drpdo[8]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'hF700)) 
    \gt0_drpdo[9]_INST_0 
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(DRPDO[9]),
        .O(gt0_drpdo[9]));
  LUT4 #(
    .INIT(16'hF700)) 
    gt0_drprdy_INST_0
       (.I0(drp_rate_busy),
        .I1(drp_pma_busy),
        .I2(drp_op_done),
        .I3(drprdy_i),
        .O(gt0_drprdy));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_25
       (.I0(drp_rate_busy),
        .I1(gt0_drpaddr[1]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    gtpe2_i_i_29
       (.I0(drp_rate_busy),
        .I1(gt0_drpaddr[0]),
        .I2(drp_pma_busy),
        .I3(drp_op_done),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hA6A624A4)) 
    gtpe2_i_i_31
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt0_drpen),
        .O(\FSM_sequential_state_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hA6262424)) 
    gtpe2_i_i_33__2
       (.I0(state[0]),
        .I1(state[1]),
        .I2(state[2]),
        .I3(drp_busy_i2),
        .I4(gt0_drpwe),
        .O(\FSM_sequential_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_36__2
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[15]),
        .O(\rd_data_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_38__2
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[14]),
        .O(\rd_data_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_40__2
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[13]),
        .O(\rd_data_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_42__2
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[12]),
        .O(\rd_data_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hC02C002C00200020)) 
    gtpe2_i_i_44
       (.I0(\rd_data_reg_n_0_[11] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[11]),
        .O(\rd_data_reg[11]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_46__2
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[10]),
        .O(\rd_data_reg[10]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_48__2
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[9]),
        .O(\rd_data_reg[9]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_50__2
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[8]),
        .O(\rd_data_reg[8]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_52__2
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[7]),
        .O(\rd_data_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_54__2
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[6]),
        .O(\rd_data_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_56__2
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[5]),
        .O(\rd_data_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_58__2
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[4]),
        .O(\rd_data_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_60__2
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[3]),
        .O(\rd_data_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_62__2
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[2]),
        .O(\rd_data_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_64__2
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[1]),
        .O(\rd_data_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hC82C082C08200820)) 
    gtpe2_i_i_66__2
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(drp_busy_i2),
        .I5(gt0_drpdi[0]),
        .O(\rd_data_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[0]_i_1 
       (.I0(rxrate_sss[0]),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(old_rxrate[0]),
        .O(\old_rxrate[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[1]_i_1 
       (.I0(rxrate_sss[1]),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(old_rxrate[1]),
        .O(\old_rxrate[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \old_rxrate[2]_i_1 
       (.I0(rxrate_sss[2]),
        .I1(\cdc_rxrate[0].sync_RXRATE_n_3 ),
        .I2(old_rxrate[2]),
        .O(\old_rxrate[2]_i_1_n_0 ));
  FDCE \old_rxrate_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[0]_i_1_n_0 ),
        .Q(old_rxrate[0]));
  FDCE \old_rxrate_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[1]_i_1_n_0 ),
        .Q(old_rxrate[1]));
  FDCE \old_rxrate_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\old_rxrate[2]_i_1_n_0 ),
        .Q(old_rxrate[2]));
  LUT5 #(
    .INIT(32'h04000000)) 
    \original_rd_data[15]_i_1__1 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \rd_data[15]_i_1__1 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(drprdy_i),
        .I3(state[1]),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE \rxrate_o_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_i[0]),
        .Q(Q[0]));
  FDCE \rxrate_o_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_i[1]),
        .Q(Q[1]));
  FDCE \rxrate_o_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_i[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[0]),
        .Q(rxrate_sss[0]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[1]),
        .Q(rxrate_sss[1]));
  FDCE #(
    .INIT(1'b0)) 
    \rxrate_sss_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxrate_ss[2]),
        .Q(rxrate_sss[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_71 sync2_RXPMARESETDONE
       (.D(next_state[0]),
        .Q(state),
        .data_in(data_in),
        .dclk(dclk),
        .drprdy_i(drprdy_i));
endmodule

module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq
   (GTRXRESET,
    drp_op_done,
    drpdi_o,
    drpwe_rst_t,
    drpen_rst_t,
    DRPADDR,
    drp_op_done_o_reg_0,
    dclk,
    AR,
    drp_op_done_o_reg_1,
    drprdy_i,
    gtrxreset_ss,
    drp_pma_busy,
    gt3_drpaddr,
    drp_rate_busy,
    DRPDO,
    data_in);
  output GTRXRESET;
  output drp_op_done;
  output [15:0]drpdi_o;
  output drpwe_rst_t;
  output drpen_rst_t;
  output [6:0]DRPADDR;
  output drp_op_done_o_reg_0;
  input dclk;
  input [0:0]AR;
  input drp_op_done_o_reg_1;
  input drprdy_i;
  input gtrxreset_ss;
  input drp_pma_busy;
  input [6:0]gt3_drpaddr;
  input drp_rate_busy;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [6:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_onehot_state[0]_i_1__5_n_0 ;
  wire \FSM_onehot_state[1]_i_1__5_n_0 ;
  wire \FSM_onehot_state[4]_i_1__5_n_0 ;
  wire \FSM_onehot_state[5]_i_1__5_n_0 ;
  wire \FSM_onehot_state[6]_i_1__5_n_0 ;
  wire \FSM_onehot_state[7]_i_1__6_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire GTRXRESET;
  wire data_in;
  wire dclk;
  wire drp_op_done;
  wire drp_op_done_o_i_1__2_n_0;
  wire drp_op_done_o_reg_0;
  wire drp_op_done_o_reg_1;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__8_n_0;
  wire flag_reg_n_0;
  wire [6:0]gt3_drpaddr;
  wire gtrxreset_i;
  wire gtrxreset_ss;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire \rd_data[0]_i_1__10_n_0 ;
  wire \rd_data[10]_i_1__10_n_0 ;
  wire \rd_data[11]_i_1__10_n_0 ;
  wire \rd_data[12]_i_1__10_n_0 ;
  wire \rd_data[13]_i_1__10_n_0 ;
  wire \rd_data[14]_i_1__10_n_0 ;
  wire \rd_data[15]_i_2__10_n_0 ;
  wire \rd_data[1]_i_1__10_n_0 ;
  wire \rd_data[2]_i_1__10_n_0 ;
  wire \rd_data[3]_i_1__10_n_0 ;
  wire \rd_data[4]_i_1__10_n_0 ;
  wire \rd_data[5]_i_1__10_n_0 ;
  wire \rd_data[6]_i_1__10_n_0 ;
  wire \rd_data[7]_i_1__10_n_0 ;
  wire \rd_data[8]_i_1__10_n_0 ;
  wire \rd_data[9]_i_1__10_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmaresetdone_ss;
  wire rxpmaresetdone_sss;
  wire sync0_RXPMARESETDONE_n_0;
  wire sync0_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[0]_i_1__5 
       (.I0(p_2_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[0]_i_1__5_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1__5 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(gtrxreset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[4]_i_1__5 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(p_3_in),
        .O(\FSM_onehot_state[4]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__5 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[5]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__5 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(\FSM_onehot_state[6]_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[7]_i_1__6 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gtrxreset_ss),
        .O(\FSM_onehot_state[7]_i_1__6_n_0 ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__5_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1__5_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_1),
        .Q(p_2_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_0),
        .Q(p_1_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[4]_i_1__5_n_0 ),
        .Q(p_3_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__5_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__5_n_0 ),
        .Q(p_0_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__6_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'hD)) 
    drp_busy_i2_i_1__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .O(drp_op_done_o_reg_0));
  LUT3 #(
    .INIT(8'hF8)) 
    drp_op_done_o_i_1__2
       (.I0(flag),
        .I1(drprdy_i),
        .I2(drp_op_done),
        .O(drp_op_done_o_i_1__2_n_0));
  FDCE drp_op_done_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(drp_op_done_o_reg_1),
        .D(drp_op_done_o_i_1__2_n_0),
        .Q(drp_op_done));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__8
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_2_in),
        .I3(p_1_in),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(p_3_in),
        .O(flag_i_1__8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__8_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_20__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[6]),
        .I3(drp_rate_busy),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_21__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[5]),
        .I3(drp_rate_busy),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_22__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[4]),
        .I3(drp_rate_busy),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_23__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[3]),
        .I3(drp_rate_busy),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_25__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[2]),
        .I3(drp_rate_busy),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_26__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[1]),
        .I3(drp_rate_busy),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_27__2
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt3_drpaddr[0]),
        .I3(drp_rate_busy),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    gtpe2_i_i_31__2
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(drpen_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_33__1
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .O(drpwe_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_36__1
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[15]));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_38__1
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[14]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_40__1
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[13]));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_42__1
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[12]));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT2 #(
    .INIT(4'h8)) 
    gtpe2_i_i_44__2
       (.I0(p_2_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .O(drpdi_o[11]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_46__1
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[10]));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_48__1
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[9]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_50__1
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[8]));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_52__1
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[7]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_54__1
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[6]));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_56__1
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[5]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_58__1
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[4]));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_60__1
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[3]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_62__1
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[2]));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_64__1
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[1]));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_66__1
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gtrxreset_o_i_1__2
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_3_in),
        .I2(gtrxreset_ss),
        .I3(p_1_in),
        .I4(p_0_in),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(gtrxreset_i));
  FDCE gtrxreset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gtrxreset_i),
        .Q(GTRXRESET));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__8 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__10 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__10 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__10 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__10 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__10 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__10 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__10_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__8 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__10 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__10 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__10 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__10 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__10 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__10 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__10 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__10 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__10 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__10 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__10_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__10_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__10_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE rxpmaresetdone_sss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmaresetdone_ss),
        .Q(rxpmaresetdone_sss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_31 sync0_RXPMARESETDONE
       (.D({sync0_RXPMARESETDONE_n_0,sync0_RXPMARESETDONE_n_1}),
        .Q({p_3_in,p_1_in}),
        .data_in(data_in),
        .data_out(rxpmaresetdone_ss),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .rxpmaresetdone_sss(rxpmaresetdone_sss));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_40
   (GTRXRESET,
    drp_op_done,
    drpdi_o,
    drpwe_rst_t,
    drpen_rst_t,
    DRPADDR,
    drp_op_done_o_reg_0,
    dclk,
    AR,
    drp_op_done_o_reg_1,
    drprdy_i,
    gtrxreset_ss,
    drp_pma_busy,
    gt2_drpaddr,
    drp_rate_busy,
    DRPDO,
    data_in);
  output GTRXRESET;
  output drp_op_done;
  output [15:0]drpdi_o;
  output drpwe_rst_t;
  output drpen_rst_t;
  output [6:0]DRPADDR;
  output drp_op_done_o_reg_0;
  input dclk;
  input [0:0]AR;
  input drp_op_done_o_reg_1;
  input drprdy_i;
  input gtrxreset_ss;
  input drp_pma_busy;
  input [6:0]gt2_drpaddr;
  input drp_rate_busy;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [6:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_onehot_state[0]_i_1__3_n_0 ;
  wire \FSM_onehot_state[1]_i_1__3_n_0 ;
  wire \FSM_onehot_state[4]_i_1__3_n_0 ;
  wire \FSM_onehot_state[5]_i_1__3_n_0 ;
  wire \FSM_onehot_state[6]_i_1__3_n_0 ;
  wire \FSM_onehot_state[7]_i_1__5_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire GTRXRESET;
  wire data_in;
  wire dclk;
  wire drp_op_done;
  wire drp_op_done_o_i_1__1_n_0;
  wire drp_op_done_o_reg_0;
  wire drp_op_done_o_reg_1;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__5_n_0;
  wire flag_reg_n_0;
  wire [6:0]gt2_drpaddr;
  wire gtrxreset_i;
  wire gtrxreset_ss;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire \rd_data[0]_i_1__7_n_0 ;
  wire \rd_data[10]_i_1__7_n_0 ;
  wire \rd_data[11]_i_1__7_n_0 ;
  wire \rd_data[12]_i_1__7_n_0 ;
  wire \rd_data[13]_i_1__7_n_0 ;
  wire \rd_data[14]_i_1__7_n_0 ;
  wire \rd_data[15]_i_2__7_n_0 ;
  wire \rd_data[1]_i_1__7_n_0 ;
  wire \rd_data[2]_i_1__7_n_0 ;
  wire \rd_data[3]_i_1__7_n_0 ;
  wire \rd_data[4]_i_1__7_n_0 ;
  wire \rd_data[5]_i_1__7_n_0 ;
  wire \rd_data[6]_i_1__7_n_0 ;
  wire \rd_data[7]_i_1__7_n_0 ;
  wire \rd_data[8]_i_1__7_n_0 ;
  wire \rd_data[9]_i_1__7_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmaresetdone_ss;
  wire rxpmaresetdone_sss;
  wire sync0_RXPMARESETDONE_n_0;
  wire sync0_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[0]_i_1__3 
       (.I0(p_2_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1__3 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(gtrxreset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[4]_i_1__3 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(p_3_in),
        .O(\FSM_onehot_state[4]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__3 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[5]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__3 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(\FSM_onehot_state[6]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[7]_i_1__5 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gtrxreset_ss),
        .O(\FSM_onehot_state[7]_i_1__5_n_0 ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__3_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1__3_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_1),
        .Q(p_2_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_0),
        .Q(p_1_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[4]_i_1__3_n_0 ),
        .Q(p_3_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__3_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__3_n_0 ),
        .Q(p_0_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__5_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT2 #(
    .INIT(4'hD)) 
    drp_busy_i2_i_1__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .O(drp_op_done_o_reg_0));
  LUT3 #(
    .INIT(8'hF8)) 
    drp_op_done_o_i_1__1
       (.I0(flag),
        .I1(drprdy_i),
        .I2(drp_op_done),
        .O(drp_op_done_o_i_1__1_n_0));
  FDCE drp_op_done_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(drp_op_done_o_reg_1),
        .D(drp_op_done_o_i_1__1_n_0),
        .Q(drp_op_done));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__5
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_2_in),
        .I3(p_1_in),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(p_3_in),
        .O(flag_i_1__5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__5_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_20__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[6]),
        .I3(drp_rate_busy),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_21__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[5]),
        .I3(drp_rate_busy),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_22__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[4]),
        .I3(drp_rate_busy),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_23__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[3]),
        .I3(drp_rate_busy),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_25__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[2]),
        .I3(drp_rate_busy),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_26__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[1]),
        .I3(drp_rate_busy),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_27__1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt2_drpaddr[0]),
        .I3(drp_rate_busy),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    gtpe2_i_i_31__1
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(drpen_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_33__0
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .O(drpwe_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_36__0
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[15]));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_38__0
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[14]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_40__0
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[13]));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_42__0
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[12]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h8)) 
    gtpe2_i_i_44__1
       (.I0(p_2_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .O(drpdi_o[11]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_46__0
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[10]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_48__0
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[9]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_50__0
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[8]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_52__0
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[7]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_54__0
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[6]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_56__0
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[5]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_58__0
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[4]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_60__0
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[3]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_62__0
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[2]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_64__0
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[1]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_66__0
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gtrxreset_o_i_1__1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_3_in),
        .I2(gtrxreset_ss),
        .I3(p_1_in),
        .I4(p_0_in),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(gtrxreset_i));
  FDCE gtrxreset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gtrxreset_i),
        .Q(GTRXRESET));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__5 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__7 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__7 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__7 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__7 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__7 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__7 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__5 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__7 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__7 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__7 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__7 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__7 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__7 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__7 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__7 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__7 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__7 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__7_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__7_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__7_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE rxpmaresetdone_sss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmaresetdone_ss),
        .Q(rxpmaresetdone_sss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_43 sync0_RXPMARESETDONE
       (.D({sync0_RXPMARESETDONE_n_0,sync0_RXPMARESETDONE_n_1}),
        .Q({p_3_in,p_1_in}),
        .data_in(data_in),
        .data_out(rxpmaresetdone_ss),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .rxpmaresetdone_sss(rxpmaresetdone_sss));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_52
   (GTRXRESET,
    drp_op_done,
    drpdi_o,
    drpwe_rst_t,
    drpen_rst_t,
    DRPADDR,
    drp_op_done_o_reg_0,
    dclk,
    AR,
    drp_op_done_o_reg_1,
    drprdy_i,
    gtrxreset_ss,
    drp_pma_busy,
    gt1_drpaddr,
    drp_rate_busy,
    DRPDO,
    data_in);
  output GTRXRESET;
  output drp_op_done;
  output [15:0]drpdi_o;
  output drpwe_rst_t;
  output drpen_rst_t;
  output [6:0]DRPADDR;
  output drp_op_done_o_reg_0;
  input dclk;
  input [0:0]AR;
  input drp_op_done_o_reg_1;
  input drprdy_i;
  input gtrxreset_ss;
  input drp_pma_busy;
  input [6:0]gt1_drpaddr;
  input drp_rate_busy;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [6:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_onehot_state[0]_i_1__1_n_0 ;
  wire \FSM_onehot_state[1]_i_1__1_n_0 ;
  wire \FSM_onehot_state[4]_i_1__1_n_0 ;
  wire \FSM_onehot_state[5]_i_1__1_n_0 ;
  wire \FSM_onehot_state[6]_i_1__1_n_0 ;
  wire \FSM_onehot_state[7]_i_1__4_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire GTRXRESET;
  wire data_in;
  wire dclk;
  wire drp_op_done;
  wire drp_op_done_o_i_1__0_n_0;
  wire drp_op_done_o_reg_0;
  wire drp_op_done_o_reg_1;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1__2_n_0;
  wire flag_reg_n_0;
  wire [6:0]gt1_drpaddr;
  wire gtrxreset_i;
  wire gtrxreset_ss;
  wire next_rd_data;
  wire original_rd_data0;
  wire \original_rd_data_reg_n_0_[0] ;
  wire \original_rd_data_reg_n_0_[10] ;
  wire \original_rd_data_reg_n_0_[11] ;
  wire \original_rd_data_reg_n_0_[12] ;
  wire \original_rd_data_reg_n_0_[13] ;
  wire \original_rd_data_reg_n_0_[14] ;
  wire \original_rd_data_reg_n_0_[15] ;
  wire \original_rd_data_reg_n_0_[1] ;
  wire \original_rd_data_reg_n_0_[2] ;
  wire \original_rd_data_reg_n_0_[3] ;
  wire \original_rd_data_reg_n_0_[4] ;
  wire \original_rd_data_reg_n_0_[5] ;
  wire \original_rd_data_reg_n_0_[6] ;
  wire \original_rd_data_reg_n_0_[7] ;
  wire \original_rd_data_reg_n_0_[8] ;
  wire \original_rd_data_reg_n_0_[9] ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire \rd_data[0]_i_1__4_n_0 ;
  wire \rd_data[10]_i_1__4_n_0 ;
  wire \rd_data[11]_i_1__4_n_0 ;
  wire \rd_data[12]_i_1__4_n_0 ;
  wire \rd_data[13]_i_1__4_n_0 ;
  wire \rd_data[14]_i_1__4_n_0 ;
  wire \rd_data[15]_i_2__4_n_0 ;
  wire \rd_data[1]_i_1__4_n_0 ;
  wire \rd_data[2]_i_1__4_n_0 ;
  wire \rd_data[3]_i_1__4_n_0 ;
  wire \rd_data[4]_i_1__4_n_0 ;
  wire \rd_data[5]_i_1__4_n_0 ;
  wire \rd_data[6]_i_1__4_n_0 ;
  wire \rd_data[7]_i_1__4_n_0 ;
  wire \rd_data[8]_i_1__4_n_0 ;
  wire \rd_data[9]_i_1__4_n_0 ;
  wire \rd_data_reg_n_0_[0] ;
  wire \rd_data_reg_n_0_[10] ;
  wire \rd_data_reg_n_0_[11] ;
  wire \rd_data_reg_n_0_[12] ;
  wire \rd_data_reg_n_0_[13] ;
  wire \rd_data_reg_n_0_[14] ;
  wire \rd_data_reg_n_0_[15] ;
  wire \rd_data_reg_n_0_[1] ;
  wire \rd_data_reg_n_0_[2] ;
  wire \rd_data_reg_n_0_[3] ;
  wire \rd_data_reg_n_0_[4] ;
  wire \rd_data_reg_n_0_[5] ;
  wire \rd_data_reg_n_0_[6] ;
  wire \rd_data_reg_n_0_[7] ;
  wire \rd_data_reg_n_0_[8] ;
  wire \rd_data_reg_n_0_[9] ;
  wire rxpmaresetdone_ss;
  wire rxpmaresetdone_sss;
  wire sync0_RXPMARESETDONE_n_0;
  wire sync0_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[0]_i_1__1 
       (.I0(p_2_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1__1 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(gtrxreset_ss),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[4]_i_1__1 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(p_3_in),
        .O(\FSM_onehot_state[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1__1 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[5]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1__1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(\FSM_onehot_state[6]_i_1__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[7]_i_1__4 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gtrxreset_ss),
        .O(\FSM_onehot_state[7]_i_1__4_n_0 ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1__1_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1__1_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_1),
        .Q(p_2_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_0),
        .Q(p_1_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[4]_i_1__1_n_0 ),
        .Q(p_3_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1__1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1__1_n_0 ),
        .Q(p_0_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__4_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'hD)) 
    drp_busy_i2_i_1__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .O(drp_op_done_o_reg_0));
  LUT3 #(
    .INIT(8'hF8)) 
    drp_op_done_o_i_1__0
       (.I0(flag),
        .I1(drprdy_i),
        .I2(drp_op_done),
        .O(drp_op_done_o_i_1__0_n_0));
  FDCE drp_op_done_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(drp_op_done_o_reg_1),
        .D(drp_op_done_o_i_1__0_n_0),
        .Q(drp_op_done));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1__2
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_2_in),
        .I3(p_1_in),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(p_3_in),
        .O(flag_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1__2_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_20
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[6]),
        .I3(drp_rate_busy),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_21__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[5]),
        .I3(drp_rate_busy),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_22__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[4]),
        .I3(drp_rate_busy),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_23__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[3]),
        .I3(drp_rate_busy),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_25__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[2]),
        .I3(drp_rate_busy),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_26__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[1]),
        .I3(drp_rate_busy),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_27__0
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt1_drpaddr[0]),
        .I3(drp_rate_busy),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    gtpe2_i_i_31__0
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(drpen_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_33
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .O(drpwe_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_36
       (.I0(\rd_data_reg_n_0_[15] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[15]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_38
       (.I0(\rd_data_reg_n_0_[14] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[14]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_40
       (.I0(\rd_data_reg_n_0_[13] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[13]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_42
       (.I0(\rd_data_reg_n_0_[12] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[12]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT2 #(
    .INIT(4'h8)) 
    gtpe2_i_i_44__0
       (.I0(p_2_in),
        .I1(\rd_data_reg_n_0_[11] ),
        .O(drpdi_o[11]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_46
       (.I0(\rd_data_reg_n_0_[10] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[10]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_48
       (.I0(\rd_data_reg_n_0_[9] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[9]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_50
       (.I0(\rd_data_reg_n_0_[8] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[8]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_52
       (.I0(\rd_data_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[7]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_54
       (.I0(\rd_data_reg_n_0_[6] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[6]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_56
       (.I0(\rd_data_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[5]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_58
       (.I0(\rd_data_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[4]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_60
       (.I0(\rd_data_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[3]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_62
       (.I0(\rd_data_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_64
       (.I0(\rd_data_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[1]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_66
       (.I0(\rd_data_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gtrxreset_o_i_1__0
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_3_in),
        .I2(gtrxreset_ss),
        .I3(p_1_in),
        .I4(p_0_in),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(gtrxreset_i));
  FDCE gtrxreset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gtrxreset_i),
        .Q(GTRXRESET));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1__2 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(p_0_in),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(\original_rd_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(\original_rd_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(\original_rd_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(\original_rd_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(\original_rd_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(\original_rd_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(\original_rd_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(\original_rd_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(\original_rd_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(\original_rd_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(\original_rd_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(\original_rd_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(\original_rd_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(\original_rd_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(\original_rd_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(\original_rd_data_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__4 
       (.I0(DRPDO[0]),
        .I1(\original_rd_data_reg_n_0_[0] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__4 
       (.I0(DRPDO[10]),
        .I1(\original_rd_data_reg_n_0_[10] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[10]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__4 
       (.I0(DRPDO[11]),
        .I1(\original_rd_data_reg_n_0_[11] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[11]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__4 
       (.I0(DRPDO[12]),
        .I1(\original_rd_data_reg_n_0_[12] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[12]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__4 
       (.I0(DRPDO[13]),
        .I1(\original_rd_data_reg_n_0_[13] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[13]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__4 
       (.I0(DRPDO[14]),
        .I1(\original_rd_data_reg_n_0_[14] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[14]_i_1__4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1__2 
       (.I0(p_0_in),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__4 
       (.I0(DRPDO[15]),
        .I1(\original_rd_data_reg_n_0_[15] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[15]_i_2__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__4 
       (.I0(DRPDO[1]),
        .I1(\original_rd_data_reg_n_0_[1] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__4 
       (.I0(DRPDO[2]),
        .I1(\original_rd_data_reg_n_0_[2] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[2]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__4 
       (.I0(DRPDO[3]),
        .I1(\original_rd_data_reg_n_0_[3] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[3]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__4 
       (.I0(DRPDO[4]),
        .I1(\original_rd_data_reg_n_0_[4] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[4]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__4 
       (.I0(DRPDO[5]),
        .I1(\original_rd_data_reg_n_0_[5] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[5]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__4 
       (.I0(DRPDO[6]),
        .I1(\original_rd_data_reg_n_0_[6] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[6]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__4 
       (.I0(DRPDO[7]),
        .I1(\original_rd_data_reg_n_0_[7] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[7]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__4 
       (.I0(DRPDO[8]),
        .I1(\original_rd_data_reg_n_0_[8] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[8]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__4 
       (.I0(DRPDO[9]),
        .I1(\original_rd_data_reg_n_0_[9] ),
        .I2(flag_reg_n_0),
        .O(\rd_data[9]_i_1__4_n_0 ));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[0]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[0] ));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[10]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[10] ));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[11]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[11] ));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[12]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[12] ));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[13]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[13] ));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[14]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[14] ));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[15]_i_2__4_n_0 ),
        .Q(\rd_data_reg_n_0_[15] ));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[1]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[1] ));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[2]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[2] ));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[3]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[3] ));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[4]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[4] ));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[5]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[5] ));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[6]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[6] ));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[7]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[7] ));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[8]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[8] ));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(\rd_data[9]_i_1__4_n_0 ),
        .Q(\rd_data_reg_n_0_[9] ));
  FDCE rxpmaresetdone_sss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmaresetdone_ss),
        .Q(rxpmaresetdone_sss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_55 sync0_RXPMARESETDONE
       (.D({sync0_RXPMARESETDONE_n_0,sync0_RXPMARESETDONE_n_1}),
        .Q({p_3_in,p_1_in}),
        .data_in(data_in),
        .data_out(rxpmaresetdone_ss),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .rxpmaresetdone_sss(rxpmaresetdone_sss));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq" *) 
module xaui_0_xaui_0_gt_wrapper_GT_gtp_gtrxreset_seq_64
   (gtrxreset_ss_reg_0,
    GTRXRESET,
    drp_op_done,
    drpdi_o,
    drpwe_rst_t,
    drpen_rst_t,
    DRPADDR,
    drp_op_done_o_reg_0,
    drp_op_done_o_reg_1,
    dclk,
    AR,
    drprdy_i,
    drp_pma_busy,
    gt0_drpaddr,
    drp_rate_busy,
    DRPDO,
    data_in);
  output gtrxreset_ss_reg_0;
  output GTRXRESET;
  output drp_op_done;
  output [15:0]drpdi_o;
  output drpwe_rst_t;
  output drpen_rst_t;
  output [6:0]DRPADDR;
  output drp_op_done_o_reg_0;
  input drp_op_done_o_reg_1;
  input dclk;
  input [0:0]AR;
  input drprdy_i;
  input drp_pma_busy;
  input [6:0]gt0_drpaddr;
  input drp_rate_busy;
  input [15:0]DRPDO;
  input data_in;

  wire [0:0]AR;
  wire [6:0]DRPADDR;
  wire [15:0]DRPDO;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[4]_i_1_n_0 ;
  wire \FSM_onehot_state[5]_i_1_n_0 ;
  wire \FSM_onehot_state[6]_i_1_n_0 ;
  wire \FSM_onehot_state[7]_i_1__3_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \FSM_onehot_state_reg_n_0_[5] ;
  wire \FSM_onehot_state_reg_n_0_[7] ;
  wire GTRXRESET;
  wire data_in;
  wire dclk;
  wire drp_op_done;
  wire drp_op_done_o_i_1_n_0;
  wire drp_op_done_o_reg_0;
  wire drp_op_done_o_reg_1;
  wire drp_pma_busy;
  wire drp_rate_busy;
  wire [15:0]drpdi_o;
  wire drpen_rst_t;
  wire drprdy_i;
  wire drpwe_rst_t;
  wire flag;
  wire flag_i_1_n_0;
  wire flag_reg_n_0;
  wire [6:0]gt0_drpaddr;
  wire gtrxreset_i;
  wire gtrxreset_s;
  wire gtrxreset_ss_reg_0;
  wire next_rd_data;
  wire [15:0]original_rd_data;
  wire original_rd_data0;
  wire [15:0]p_0_in;
  wire p_0_in_0;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire [15:0]rd_data;
  wire rxpmaresetdone_ss;
  wire rxpmaresetdone_sss;
  wire sync0_RXPMARESETDONE_n_0;
  wire sync0_RXPMARESETDONE_n_1;

  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(p_2_in),
        .I1(drprdy_i),
        .I2(flag),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(drprdy_i),
        .I1(flag),
        .I2(gtrxreset_ss_reg_0),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(drprdy_i),
        .I2(p_3_in),
        .O(\FSM_onehot_state[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[5]_i_1 
       (.I0(p_0_in_0),
        .I1(drprdy_i),
        .O(\FSM_onehot_state[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \FSM_onehot_state[6]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(drprdy_i),
        .I2(p_0_in_0),
        .O(\FSM_onehot_state[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_state[7]_i_1__3 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(gtrxreset_ss_reg_0),
        .O(\FSM_onehot_state[7]_i_1__3_n_0 ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(flag));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .PRE(AR),
        .Q(\FSM_onehot_state_reg_n_0_[1] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_1),
        .Q(p_2_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync0_RXPMARESETDONE_n_0),
        .Q(p_1_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[4]_i_1_n_0 ),
        .Q(p_3_in));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[6]_i_1_n_0 ),
        .Q(p_0_in_0));
  (* FSM_ENCODED_STATES = "drp_rd:10000000,wait_rd_data:01000000,wr_16:00100000,wait_wr_done1:00010000,wait_pmareset:00001000,wr_20:00000100,wait_wr_done2:00000001,idle:00000010" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(\FSM_onehot_state[7]_i_1__3_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'hD)) 
    drp_busy_i2_i_1
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .O(drp_op_done_o_reg_0));
  LUT3 #(
    .INIT(8'hF8)) 
    drp_op_done_o_i_1
       (.I0(flag),
        .I1(drprdy_i),
        .I2(drp_op_done),
        .O(drp_op_done_o_i_1_n_0));
  FDCE drp_op_done_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(drp_op_done_o_reg_1),
        .D(drp_op_done_o_i_1_n_0),
        .Q(drp_op_done));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    flag_i_1
       (.I0(flag),
        .I1(flag_reg_n_0),
        .I2(p_2_in),
        .I3(p_1_in),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(p_3_in),
        .O(flag_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    flag_reg
       (.C(dclk),
        .CE(1'b1),
        .D(flag_i_1_n_0),
        .Q(flag_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_21
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[6]),
        .I3(drp_rate_busy),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_22
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[5]),
        .I3(drp_rate_busy),
        .O(DRPADDR[5]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_23
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[4]),
        .I3(drp_rate_busy),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_24
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[3]),
        .I3(drp_rate_busy),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_26
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[2]),
        .I3(drp_rate_busy),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_27
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[1]),
        .I3(drp_rate_busy),
        .O(DRPADDR[1]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    gtpe2_i_i_28
       (.I0(drp_op_done),
        .I1(drp_pma_busy),
        .I2(gt0_drpaddr[0]),
        .I3(drp_rate_busy),
        .O(DRPADDR[0]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    gtpe2_i_i_32
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .O(drpen_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'hE)) 
    gtpe2_i_i_34
       (.I0(p_2_in),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .O(drpwe_rst_t));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_37
       (.I0(rd_data[15]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[15]));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_39
       (.I0(rd_data[14]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[14]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_41
       (.I0(rd_data[13]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[13]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_43
       (.I0(rd_data[12]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[12]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h8)) 
    gtpe2_i_i_45__2
       (.I0(p_2_in),
        .I1(rd_data[11]),
        .O(drpdi_o[11]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_47
       (.I0(rd_data[10]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[10]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_49
       (.I0(rd_data[9]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[9]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_51
       (.I0(rd_data[8]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[8]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_53
       (.I0(rd_data[7]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[7]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_55
       (.I0(rd_data[6]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[6]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_57
       (.I0(rd_data[5]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[5]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_59
       (.I0(rd_data[4]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[4]));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_61
       (.I0(rd_data[3]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[3]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_63
       (.I0(rd_data[2]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[2]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_65
       (.I0(rd_data[1]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[1]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    gtpe2_i_i_67
       (.I0(rd_data[0]),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(p_2_in),
        .O(drpdi_o[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    gtrxreset_o_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(p_3_in),
        .I2(gtrxreset_ss_reg_0),
        .I3(p_1_in),
        .I4(p_0_in_0),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(gtrxreset_i));
  FDCE gtrxreset_o_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gtrxreset_i),
        .Q(GTRXRESET));
  FDCE gtrxreset_s_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(drp_op_done_o_reg_1),
        .Q(gtrxreset_s));
  FDCE gtrxreset_ss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(gtrxreset_s),
        .Q(gtrxreset_ss_reg_0));
  LUT3 #(
    .INIT(8'h40)) 
    \original_rd_data[15]_i_1 
       (.I0(flag_reg_n_0),
        .I1(drprdy_i),
        .I2(p_0_in_0),
        .O(original_rd_data0));
  FDRE \original_rd_data_reg[0] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[0]),
        .Q(original_rd_data[0]),
        .R(1'b0));
  FDRE \original_rd_data_reg[10] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[10]),
        .Q(original_rd_data[10]),
        .R(1'b0));
  FDRE \original_rd_data_reg[11] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[11]),
        .Q(original_rd_data[11]),
        .R(1'b0));
  FDRE \original_rd_data_reg[12] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[12]),
        .Q(original_rd_data[12]),
        .R(1'b0));
  FDRE \original_rd_data_reg[13] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[13]),
        .Q(original_rd_data[13]),
        .R(1'b0));
  FDRE \original_rd_data_reg[14] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[14]),
        .Q(original_rd_data[14]),
        .R(1'b0));
  FDRE \original_rd_data_reg[15] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[15]),
        .Q(original_rd_data[15]),
        .R(1'b0));
  FDRE \original_rd_data_reg[1] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[1]),
        .Q(original_rd_data[1]),
        .R(1'b0));
  FDRE \original_rd_data_reg[2] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[2]),
        .Q(original_rd_data[2]),
        .R(1'b0));
  FDRE \original_rd_data_reg[3] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[3]),
        .Q(original_rd_data[3]),
        .R(1'b0));
  FDRE \original_rd_data_reg[4] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[4]),
        .Q(original_rd_data[4]),
        .R(1'b0));
  FDRE \original_rd_data_reg[5] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[5]),
        .Q(original_rd_data[5]),
        .R(1'b0));
  FDRE \original_rd_data_reg[6] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[6]),
        .Q(original_rd_data[6]),
        .R(1'b0));
  FDRE \original_rd_data_reg[7] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[7]),
        .Q(original_rd_data[7]),
        .R(1'b0));
  FDRE \original_rd_data_reg[8] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[8]),
        .Q(original_rd_data[8]),
        .R(1'b0));
  FDRE \original_rd_data_reg[9] 
       (.C(dclk),
        .CE(original_rd_data0),
        .D(DRPDO[9]),
        .Q(original_rd_data[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[0]_i_1__1 
       (.I0(DRPDO[0]),
        .I1(original_rd_data[0]),
        .I2(flag_reg_n_0),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[10]_i_1__1 
       (.I0(DRPDO[10]),
        .I1(original_rd_data[10]),
        .I2(flag_reg_n_0),
        .O(p_0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[11]_i_1__1 
       (.I0(DRPDO[11]),
        .I1(original_rd_data[11]),
        .I2(flag_reg_n_0),
        .O(p_0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[12]_i_1__1 
       (.I0(DRPDO[12]),
        .I1(original_rd_data[12]),
        .I2(flag_reg_n_0),
        .O(p_0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[13]_i_1__1 
       (.I0(DRPDO[13]),
        .I1(original_rd_data[13]),
        .I2(flag_reg_n_0),
        .O(p_0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[14]_i_1__1 
       (.I0(DRPDO[14]),
        .I1(original_rd_data[14]),
        .I2(flag_reg_n_0),
        .O(p_0_in[14]));
  LUT2 #(
    .INIT(4'h8)) 
    \rd_data[15]_i_1 
       (.I0(p_0_in_0),
        .I1(drprdy_i),
        .O(next_rd_data));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[15]_i_2__1 
       (.I0(DRPDO[15]),
        .I1(original_rd_data[15]),
        .I2(flag_reg_n_0),
        .O(p_0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[1]_i_1__1 
       (.I0(DRPDO[1]),
        .I1(original_rd_data[1]),
        .I2(flag_reg_n_0),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[2]_i_1__1 
       (.I0(DRPDO[2]),
        .I1(original_rd_data[2]),
        .I2(flag_reg_n_0),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[3]_i_1__1 
       (.I0(DRPDO[3]),
        .I1(original_rd_data[3]),
        .I2(flag_reg_n_0),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[4]_i_1__1 
       (.I0(DRPDO[4]),
        .I1(original_rd_data[4]),
        .I2(flag_reg_n_0),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[5]_i_1__1 
       (.I0(DRPDO[5]),
        .I1(original_rd_data[5]),
        .I2(flag_reg_n_0),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[6]_i_1__1 
       (.I0(DRPDO[6]),
        .I1(original_rd_data[6]),
        .I2(flag_reg_n_0),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[7]_i_1__1 
       (.I0(DRPDO[7]),
        .I1(original_rd_data[7]),
        .I2(flag_reg_n_0),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[8]_i_1__1 
       (.I0(DRPDO[8]),
        .I1(original_rd_data[8]),
        .I2(flag_reg_n_0),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hCA)) 
    \rd_data[9]_i_1__1 
       (.I0(DRPDO[9]),
        .I1(original_rd_data[9]),
        .I2(flag_reg_n_0),
        .O(p_0_in[9]));
  FDCE \rd_data_reg[0] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[0]),
        .Q(rd_data[0]));
  FDCE \rd_data_reg[10] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[10]),
        .Q(rd_data[10]));
  FDCE \rd_data_reg[11] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[11]),
        .Q(rd_data[11]));
  FDCE \rd_data_reg[12] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[12]),
        .Q(rd_data[12]));
  FDCE \rd_data_reg[13] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[13]),
        .Q(rd_data[13]));
  FDCE \rd_data_reg[14] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[14]),
        .Q(rd_data[14]));
  FDCE \rd_data_reg[15] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[15]),
        .Q(rd_data[15]));
  FDCE \rd_data_reg[1] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[1]),
        .Q(rd_data[1]));
  FDCE \rd_data_reg[2] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[2]),
        .Q(rd_data[2]));
  FDCE \rd_data_reg[3] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[3]),
        .Q(rd_data[3]));
  FDCE \rd_data_reg[4] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[4]),
        .Q(rd_data[4]));
  FDCE \rd_data_reg[5] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[5]),
        .Q(rd_data[5]));
  FDCE \rd_data_reg[6] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[6]),
        .Q(rd_data[6]));
  FDCE \rd_data_reg[7] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[7]),
        .Q(rd_data[7]));
  FDCE \rd_data_reg[8] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[8]),
        .Q(rd_data[8]));
  FDCE \rd_data_reg[9] 
       (.C(dclk),
        .CE(next_rd_data),
        .CLR(AR),
        .D(p_0_in[9]),
        .Q(rd_data[9]));
  FDCE rxpmaresetdone_sss_reg
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(rxpmaresetdone_ss),
        .Q(rxpmaresetdone_sss));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_67 sync0_RXPMARESETDONE
       (.D({sync0_RXPMARESETDONE_n_0,sync0_RXPMARESETDONE_n_1}),
        .Q({p_3_in,p_1_in}),
        .data_in(data_in),
        .data_out(rxpmaresetdone_ss),
        .dclk(dclk),
        .drprdy_i(drprdy_i),
        .rxpmaresetdone_sss(rxpmaresetdone_sss));
endmodule

module xaui_0_xaui_0_gt_wrapper_tx_sync_manual
   (debug,
    gt0_txdlyen_in,
    mgt_tx_reset,
    gt3_txdlysreset_in,
    gt2_txdlysreset_in,
    gt1_txdlysreset_in,
    gt0_txdlysreset_in,
    gt0_txphinit_in,
    gt3_txphinit_in,
    gt2_txphinit_in,
    gt1_txphinit_in,
    gt0_txphalign_in,
    gt3_txphalign_in,
    gt2_txphalign_in,
    gt1_txphalign_in,
    CLK,
    \stretch_r_reg[1] ,
    \stretch_r_reg[1]_0 ,
    \stretch_r_reg[1]_1 ,
    \stretch_r_reg[1]_2 ,
    uclk_mgt_tx_reset,
    \TXDLYSRESET_reg[3]_0 ,
    gt0_txphaligndone_out,
    gt0_txdlysresetdone_out,
    gt1_txphaligndone_out,
    gt1_txdlysresetdone_out,
    gt2_txphaligndone_out,
    gt2_txdlysresetdone_out,
    gt3_txphaligndone_out,
    gt3_txdlysresetdone_out,
    gt0_txphinitdone_out,
    gt1_txphinitdone_out,
    gt2_txphinitdone_out,
    gt3_txphinitdone_out);
  output [0:0]debug;
  output gt0_txdlyen_in;
  output [0:0]mgt_tx_reset;
  output gt3_txdlysreset_in;
  output gt2_txdlysreset_in;
  output gt1_txdlysreset_in;
  output gt0_txdlysreset_in;
  output gt0_txphinit_in;
  output gt3_txphinit_in;
  output gt2_txphinit_in;
  output gt1_txphinit_in;
  output gt0_txphalign_in;
  output gt3_txphalign_in;
  output gt2_txphalign_in;
  output gt1_txphalign_in;
  input CLK;
  input \stretch_r_reg[1] ;
  input \stretch_r_reg[1]_0 ;
  input \stretch_r_reg[1]_1 ;
  input \stretch_r_reg[1]_2 ;
  input uclk_mgt_tx_reset;
  input \TXDLYSRESET_reg[3]_0 ;
  input gt0_txphaligndone_out;
  input gt0_txdlysresetdone_out;
  input gt1_txphaligndone_out;
  input gt1_txdlysresetdone_out;
  input gt2_txphaligndone_out;
  input gt2_txdlysresetdone_out;
  input gt3_txphaligndone_out;
  input gt3_txdlysresetdone_out;
  input gt0_txphinitdone_out;
  input gt1_txphinitdone_out;
  input gt2_txphinitdone_out;
  input gt3_txphinitdone_out;

  wire CLK;
  wire \FSM_sequential_tx_phalign_manual_state[0]_i_1_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[1]_i_1_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[2]_i_1_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[3]_i_2_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[3]_i_3_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[3]_i_6_n_0 ;
  wire PHASE_ALIGNMENT_DONE_i_1_n_0;
  wire \TXDLYSRESET[0]_i_1_n_0 ;
  wire \TXDLYSRESET[0]_i_2_n_0 ;
  wire \TXDLYSRESET[1]_i_1_n_0 ;
  wire \TXDLYSRESET[1]_i_2_n_0 ;
  wire \TXDLYSRESET[2]_i_1_n_0 ;
  wire \TXDLYSRESET[2]_i_2_n_0 ;
  wire \TXDLYSRESET[3]_i_1_n_0 ;
  wire \TXDLYSRESET[3]_i_2_n_0 ;
  wire \TXDLYSRESET_reg[3]_0 ;
  wire \TXPHALIGN[1]_i_1_n_0 ;
  wire \TXPHALIGN[2]_i_1_n_0 ;
  wire \TXPHALIGN[3]_i_1_n_0 ;
  wire \TXPHINIT[1]_i_1_n_0 ;
  wire \TXPHINIT[2]_i_1_n_0 ;
  wire \TXPHINIT[3]_i_1_n_0 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_1 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_3 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ;
  wire \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_2 ;
  wire \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ;
  wire \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ;
  wire \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ;
  wire \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ;
  wire \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ;
  wire \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ;
  wire \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ;
  wire \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ;
  wire \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ;
  wire [0:0]debug;
  wire gt0_txdlyen_in;
  wire gt0_txdlysreset_in;
  wire gt0_txdlysresetdone_out;
  wire gt0_txphalign_in;
  wire gt0_txphaligndone_out;
  wire gt0_txphinit_in;
  wire gt0_txphinitdone_out;
  wire gt1_txdlysreset_in;
  wire gt1_txdlysresetdone_out;
  wire gt1_txphalign_in;
  wire gt1_txphaligndone_out;
  wire gt1_txphinit_in;
  wire gt1_txphinitdone_out;
  wire gt2_txdlysreset_in;
  wire gt2_txdlysresetdone_out;
  wire gt2_txphalign_in;
  wire gt2_txphaligndone_out;
  wire gt2_txphinit_in;
  wire gt2_txphinitdone_out;
  wire gt3_txdlysreset_in;
  wire gt3_txdlysresetdone_out;
  wire gt3_txphalign_in;
  wire gt3_txphaligndone_out;
  wire gt3_txphinit_in;
  wire gt3_txphinitdone_out;
  wire [0:0]mgt_tx_reset;
  wire p_1_in;
  wire p_2_in;
  wire \stretch_r_reg[1] ;
  wire \stretch_r_reg[1]_0 ;
  wire \stretch_r_reg[1]_1 ;
  wire \stretch_r_reg[1]_2 ;
  wire [3:0]tx_phalign_manual_state;
  wire \txdlysresetdone_store_reg_n_0_[0] ;
  wire \txdlysresetdone_store_reg_n_0_[3] ;
  wire txdone_clear_i_1_n_0;
  wire txdone_clear_reg_n_0;
  wire [3:0]txphaligndone_prev;
  wire [3:0]txphaligndone_store;
  wire txphaligndone_sync_0;
  wire txphaligndone_sync_1;
  wire txphaligndone_sync_2;
  wire txphaligndone_sync_3;
  wire [3:0]txphinitdone_prev;
  wire [3:0]txphinitdone_store_edge;
  wire txphinitdone_sync_0;
  wire txphinitdone_sync_1;
  wire txphinitdone_sync_2;
  wire txphinitdone_sync_3;
  wire uclk_mgt_tx_reset;

  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_tx_phalign_manual_state[0]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .O(\FSM_sequential_tx_phalign_manual_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_tx_phalign_manual_state[1]_i_1 
       (.I0(tx_phalign_manual_state[1]),
        .I1(tx_phalign_manual_state[0]),
        .O(\FSM_sequential_tx_phalign_manual_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \FSM_sequential_tx_phalign_manual_state[2]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[2]),
        .O(\FSM_sequential_tx_phalign_manual_state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_2 
       (.I0(tx_phalign_manual_state[2]),
        .I1(tx_phalign_manual_state[0]),
        .I2(tx_phalign_manual_state[1]),
        .O(\FSM_sequential_tx_phalign_manual_state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80000000)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_3 
       (.I0(\txdlysresetdone_store_reg_n_0_[3] ),
        .I1(p_1_in),
        .I2(\txdlysresetdone_store_reg_n_0_[0] ),
        .I3(p_2_in),
        .I4(tx_phalign_manual_state[0]),
        .I5(\TXDLYSRESET_reg[3]_0 ),
        .O(\FSM_sequential_tx_phalign_manual_state[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_6 
       (.I0(txphaligndone_store[2]),
        .I1(txphaligndone_store[1]),
        .I2(txphaligndone_store[3]),
        .I3(txphaligndone_store[0]),
        .O(\FSM_sequential_tx_phalign_manual_state[3]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "m_phalign:0011,m_dlyen:0100,m_phinit:0010,wait_phrst_done:0001,init:0000,m_dlyen2:0111,s_phalign:0110,phalign_done:1000,s_phinit:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_phalign_manual_state_reg[0] 
       (.C(CLK),
        .CE(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ),
        .D(\FSM_sequential_tx_phalign_manual_state[0]_i_1_n_0 ),
        .Q(tx_phalign_manual_state[0]),
        .R(uclk_mgt_tx_reset));
  (* FSM_ENCODED_STATES = "m_phalign:0011,m_dlyen:0100,m_phinit:0010,wait_phrst_done:0001,init:0000,m_dlyen2:0111,s_phalign:0110,phalign_done:1000,s_phinit:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_phalign_manual_state_reg[1] 
       (.C(CLK),
        .CE(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ),
        .D(\FSM_sequential_tx_phalign_manual_state[1]_i_1_n_0 ),
        .Q(tx_phalign_manual_state[1]),
        .R(uclk_mgt_tx_reset));
  (* FSM_ENCODED_STATES = "m_phalign:0011,m_dlyen:0100,m_phinit:0010,wait_phrst_done:0001,init:0000,m_dlyen2:0111,s_phalign:0110,phalign_done:1000,s_phinit:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_phalign_manual_state_reg[2] 
       (.C(CLK),
        .CE(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ),
        .D(\FSM_sequential_tx_phalign_manual_state[2]_i_1_n_0 ),
        .Q(tx_phalign_manual_state[2]),
        .R(uclk_mgt_tx_reset));
  (* FSM_ENCODED_STATES = "m_phalign:0011,m_dlyen:0100,m_phinit:0010,wait_phrst_done:0001,init:0000,m_dlyen2:0111,s_phalign:0110,phalign_done:1000,s_phinit:0101" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_tx_phalign_manual_state_reg[3] 
       (.C(CLK),
        .CE(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ),
        .D(\FSM_sequential_tx_phalign_manual_state[3]_i_2_n_0 ),
        .Q(tx_phalign_manual_state[3]),
        .R(uclk_mgt_tx_reset));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    PHASE_ALIGNMENT_DONE_i_1
       (.I0(tx_phalign_manual_state[3]),
        .I1(tx_phalign_manual_state[2]),
        .I2(tx_phalign_manual_state[0]),
        .I3(tx_phalign_manual_state[1]),
        .I4(debug),
        .O(PHASE_ALIGNMENT_DONE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    PHASE_ALIGNMENT_DONE_reg
       (.C(CLK),
        .CE(1'b1),
        .D(PHASE_ALIGNMENT_DONE_i_1_n_0),
        .Q(debug),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYEN_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .Q(gt0_txdlyen_in),
        .R(uclk_mgt_tx_reset));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \TXDLYSRESET[0]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[3]),
        .I3(\TXDLYSRESET[0]_i_2_n_0 ),
        .I4(gt0_txdlysreset_in),
        .O(\TXDLYSRESET[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005404)) 
    \TXDLYSRESET[0]_i_2 
       (.I0(tx_phalign_manual_state[1]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[0]),
        .I3(\txdlysresetdone_store_reg_n_0_[0] ),
        .I4(tx_phalign_manual_state[2]),
        .I5(tx_phalign_manual_state[3]),
        .O(\TXDLYSRESET[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \TXDLYSRESET[1]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[3]),
        .I3(\TXDLYSRESET[1]_i_2_n_0 ),
        .I4(gt1_txdlysreset_in),
        .O(\TXDLYSRESET[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005404)) 
    \TXDLYSRESET[1]_i_2 
       (.I0(tx_phalign_manual_state[1]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[0]),
        .I3(p_1_in),
        .I4(tx_phalign_manual_state[2]),
        .I5(tx_phalign_manual_state[3]),
        .O(\TXDLYSRESET[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \TXDLYSRESET[2]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[3]),
        .I3(\TXDLYSRESET[2]_i_2_n_0 ),
        .I4(gt2_txdlysreset_in),
        .O(\TXDLYSRESET[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005404)) 
    \TXDLYSRESET[2]_i_2 
       (.I0(tx_phalign_manual_state[1]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[0]),
        .I3(p_2_in),
        .I4(tx_phalign_manual_state[2]),
        .I5(tx_phalign_manual_state[3]),
        .O(\TXDLYSRESET[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04FF0400)) 
    \TXDLYSRESET[3]_i_1 
       (.I0(tx_phalign_manual_state[0]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[3]),
        .I3(\TXDLYSRESET[3]_i_2_n_0 ),
        .I4(gt3_txdlysreset_in),
        .O(\TXDLYSRESET[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000005404)) 
    \TXDLYSRESET[3]_i_2 
       (.I0(tx_phalign_manual_state[1]),
        .I1(\TXDLYSRESET_reg[3]_0 ),
        .I2(tx_phalign_manual_state[0]),
        .I3(\txdlysresetdone_store_reg_n_0_[3] ),
        .I4(tx_phalign_manual_state[2]),
        .I5(tx_phalign_manual_state[3]),
        .O(\TXDLYSRESET[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXDLYSRESET[0]_i_1_n_0 ),
        .Q(gt0_txdlysreset_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXDLYSRESET[1]_i_1_n_0 ),
        .Q(gt1_txdlysreset_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXDLYSRESET[2]_i_1_n_0 ),
        .Q(gt2_txdlysreset_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXDLYSRESET_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXDLYSRESET[3]_i_1_n_0 ),
        .Q(gt3_txdlysreset_in),
        .R(uclk_mgt_tx_reset));
  LUT6 #(
    .INIT(64'hFFFFFF7F00000040)) 
    \TXPHALIGN[1]_i_1 
       (.I0(txphaligndone_store[1]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[2]),
        .I3(tx_phalign_manual_state[0]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt1_txphalign_in),
        .O(\TXPHALIGN[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F00000040)) 
    \TXPHALIGN[2]_i_1 
       (.I0(txphaligndone_store[2]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[2]),
        .I3(tx_phalign_manual_state[0]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt2_txphalign_in),
        .O(\TXPHALIGN[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF7F00000040)) 
    \TXPHALIGN[3]_i_1 
       (.I0(txphaligndone_store[3]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[2]),
        .I3(tx_phalign_manual_state[0]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt3_txphalign_in),
        .O(\TXPHALIGN[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_3 ),
        .Q(gt0_txphalign_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHALIGN[1]_i_1_n_0 ),
        .Q(gt1_txphalign_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHALIGN[2]_i_1_n_0 ),
        .Q(gt2_txphalign_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHALIGN_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHALIGN[3]_i_1_n_0 ),
        .Q(gt3_txphalign_in),
        .R(uclk_mgt_tx_reset));
  LUT6 #(
    .INIT(64'hFFFFDFFF00001000)) 
    \TXPHINIT[1]_i_1 
       (.I0(txphinitdone_store_edge[1]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[0]),
        .I3(tx_phalign_manual_state[2]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt1_txphinit_in),
        .O(\TXPHINIT[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFDFFF00001000)) 
    \TXPHINIT[2]_i_1 
       (.I0(txphinitdone_store_edge[2]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[0]),
        .I3(tx_phalign_manual_state[2]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt2_txphinit_in),
        .O(\TXPHINIT[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFDFFF00001000)) 
    \TXPHINIT[3]_i_1 
       (.I0(txphinitdone_store_edge[3]),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[0]),
        .I3(tx_phalign_manual_state[2]),
        .I4(tx_phalign_manual_state[3]),
        .I5(gt3_txphinit_in),
        .O(\TXPHINIT[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .Q(gt0_txphinit_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHINIT[1]_i_1_n_0 ),
        .Q(gt1_txphinit_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHINIT[2]_i_1_n_0 ),
        .Q(gt2_txphinit_in),
        .R(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \TXPHINIT_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\TXPHINIT[3]_i_1_n_0 ),
        .Q(gt3_txphinit_in),
        .R(uclk_mgt_tx_reset));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE 
       (.CLK(CLK),
        .data_sync_reg6_0(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .gt0_txdlysresetdone_out(gt0_txdlysresetdone_out),
        .\txdlysresetdone_store_reg[0] (\txdlysresetdone_store_reg_n_0_[0] ));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_14 \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE 
       (.CLK(CLK),
        .E(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_4 ),
        .\FSM_sequential_tx_phalign_manual_state_reg[0] (\FSM_sequential_tx_phalign_manual_state[3]_i_3_n_0 ),
        .\FSM_sequential_tx_phalign_manual_state_reg[0]_0 (\FSM_sequential_tx_phalign_manual_state[3]_i_6_n_0 ),
        .\FSM_sequential_tx_phalign_manual_state_reg[0]_1 (txphinitdone_prev[0]),
        .\FSM_sequential_tx_phalign_manual_state_reg[1] (\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_3 ),
        .\FSM_sequential_tx_phalign_manual_state_reg[3] (\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .Q(tx_phalign_manual_state),
        .data_out(txphaligndone_sync_0),
        .gt0_txdlyen_in(gt0_txdlyen_in),
        .gt0_txphalign_in(gt0_txphalign_in),
        .gt0_txphaligndone_out(gt0_txphaligndone_out),
        .\txphaligndone_prev_reg[0] (\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_1 ),
        .txphaligndone_store(txphaligndone_store[0]),
        .\txphaligndone_store_reg[0] (txphaligndone_prev[0]),
        .txphinitdone_store_edge(txphinitdone_store_edge),
        .txphinitdone_sync_0(txphinitdone_sync_0));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse \cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE 
       (.CLK(CLK),
        .\FSM_sequential_tx_phalign_manual_state_reg[2] (\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .Q(txphinitdone_prev[0]),
        .\TXPHINIT_reg[0] (tx_phalign_manual_state),
        .gt0_txphinit_in(gt0_txphinit_in),
        .gt0_txphinitdone_out(gt0_txphinitdone_out),
        .\stretch_r_reg[1]_0 (\stretch_r_reg[1] ),
        .txdone_clear_reg(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_2 ),
        .txphinitdone_store_edge(txphinitdone_store_edge[0]),
        .\txphinitdone_store_edge_reg[0] (txdone_clear_reg_n_0),
        .txphinitdone_sync_0(txphinitdone_sync_0));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_15 \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE 
       (.CLK(CLK),
        .data_sync_reg6_0(\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .gt1_txdlysresetdone_out(gt1_txdlysresetdone_out),
        .p_1_in(p_1_in));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_16 \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE 
       (.CLK(CLK),
        .Q(txphaligndone_prev[1]),
        .data_out(txphaligndone_sync_1),
        .gt1_txphaligndone_out(gt1_txphaligndone_out),
        .\txphaligndone_prev_reg[1] (\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .txphaligndone_store(txphaligndone_store[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_17 \cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE 
       (.CLK(CLK),
        .D(txphinitdone_sync_1),
        .Q(txphinitdone_prev[1]),
        .gt1_txphinitdone_out(gt1_txphinitdone_out),
        .\stretch_r_reg[1]_0 (\stretch_r_reg[1]_0 ),
        .\txphinitdone_prev_reg[1] (\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .txphinitdone_store_edge(txphinitdone_store_edge[1]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_18 \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE 
       (.CLK(CLK),
        .data_sync_reg6_0(\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .gt2_txdlysresetdone_out(gt2_txdlysresetdone_out),
        .p_2_in(p_2_in));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_19 \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE 
       (.CLK(CLK),
        .Q(txphaligndone_prev[2]),
        .data_out(txphaligndone_sync_2),
        .gt2_txphaligndone_out(gt2_txphaligndone_out),
        .\txphaligndone_prev_reg[2] (\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .txphaligndone_store(txphaligndone_store[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_20 \cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE 
       (.CLK(CLK),
        .D(txphinitdone_sync_2),
        .Q(txphinitdone_prev[2]),
        .gt2_txphinitdone_out(gt2_txphinitdone_out),
        .\stretch_r_reg[1]_0 (\stretch_r_reg[1]_1 ),
        .\txphinitdone_prev_reg[2] (\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .txphinitdone_store_edge(txphinitdone_store_edge[2]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_21 \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE 
       (.CLK(CLK),
        .data_sync_reg6_0(\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .gt3_txdlysresetdone_out(gt3_txdlysresetdone_out),
        .\txdlysresetdone_store_reg[3] (\txdlysresetdone_store_reg_n_0_[3] ));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_22 \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE 
       (.CLK(CLK),
        .Q(txphaligndone_prev[3]),
        .data_out(txphaligndone_sync_3),
        .gt3_txphaligndone_out(gt3_txphaligndone_out),
        .\txphaligndone_prev_reg[3] (\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .txphaligndone_store(txphaligndone_store[3]));
  xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_23 \cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE 
       (.CLK(CLK),
        .D(txphinitdone_sync_3),
        .Q(txphinitdone_prev[3]),
        .gt3_txphinitdone_out(gt3_txphinitdone_out),
        .\stretch_r_reg[1]_0 (\stretch_r_reg[1]_2 ),
        .\txphinitdone_prev_reg[3] (\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .txphinitdone_store_edge(txphinitdone_store_edge[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .Q(\txdlysresetdone_store_reg_n_0_[0] ),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .Q(p_1_in),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .Q(p_2_in),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txdlysresetdone_store_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXDLYSRESETDONE_n_0 ),
        .Q(\txdlysresetdone_store_reg_n_0_[3] ),
        .R(txdone_clear_reg_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFD00000001)) 
    txdone_clear_i_1
       (.I0(\TXDLYSRESET_reg[3]_0 ),
        .I1(tx_phalign_manual_state[1]),
        .I2(tx_phalign_manual_state[0]),
        .I3(tx_phalign_manual_state[2]),
        .I4(tx_phalign_manual_state[3]),
        .I5(txdone_clear_reg_n_0),
        .O(txdone_clear_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    txdone_clear_reg
       (.C(CLK),
        .CE(1'b1),
        .D(txdone_clear_i_1_n_0),
        .Q(txdone_clear_reg_n_0),
        .S(uclk_mgt_tx_reset));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphaligndone_sync_0),
        .Q(txphaligndone_prev[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphaligndone_sync_1),
        .Q(txphaligndone_prev[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphaligndone_sync_2),
        .Q(txphaligndone_prev[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_prev_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphaligndone_sync_3),
        .Q(txphaligndone_prev[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_1 ),
        .Q(txphaligndone_store[0]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .Q(txphaligndone_store[1]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .Q(txphaligndone_store[2]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphaligndone_store_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHALIGNDONE_n_0 ),
        .Q(txphaligndone_store[3]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphinitdone_sync_0),
        .Q(txphinitdone_prev[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphinitdone_sync_1),
        .Q(txphinitdone_prev[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphinitdone_sync_2),
        .Q(txphinitdone_prev[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_prev_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(txphinitdone_sync_3),
        .Q(txphinitdone_prev[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[0].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_2 ),
        .Q(txphinitdone_store_edge[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[1].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .Q(txphinitdone_store_edge[1]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[2].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .Q(txphinitdone_store_edge[2]),
        .R(txdone_clear_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \txphinitdone_store_edge_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\cdc[3].xaui_0_gt_wrapper_tx_sync_manual_TXPHINITDONE_n_1 ),
        .Q(txphinitdone_store_edge[3]),
        .R(txdone_clear_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT1 #(
    .INIT(2'h1)) 
    xaui_0_core_i_9
       (.I0(debug),
        .O(mgt_tx_reset));
endmodule

module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block
   (data_sync_reg6_0,
    \txdlysresetdone_store_reg[0] ,
    gt0_txdlysresetdone_out,
    CLK);
  output data_sync_reg6_0;
  input \txdlysresetdone_store_reg[0] ;
  input gt0_txdlysresetdone_out;
  input CLK;

  wire CLK;
  wire data_out2_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire gt0_txdlysresetdone_out;
  wire \txdlysresetdone_store_reg[0] ;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_txdlysresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out2_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[0]_i_1 
       (.I0(data_out2_out),
        .I1(\txdlysresetdone_store_reg[0] ),
        .O(data_sync_reg6_0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_14
   (\FSM_sequential_tx_phalign_manual_state_reg[3] ,
    \txphaligndone_prev_reg[0] ,
    data_out,
    \FSM_sequential_tx_phalign_manual_state_reg[1] ,
    E,
    Q,
    gt0_txdlyen_in,
    \txphaligndone_store_reg[0] ,
    txphaligndone_store,
    gt0_txphalign_in,
    \FSM_sequential_tx_phalign_manual_state_reg[0] ,
    \FSM_sequential_tx_phalign_manual_state_reg[0]_0 ,
    txphinitdone_sync_0,
    \FSM_sequential_tx_phalign_manual_state_reg[0]_1 ,
    txphinitdone_store_edge,
    gt0_txphaligndone_out,
    CLK);
  output \FSM_sequential_tx_phalign_manual_state_reg[3] ;
  output \txphaligndone_prev_reg[0] ;
  output data_out;
  output \FSM_sequential_tx_phalign_manual_state_reg[1] ;
  output [0:0]E;
  input [3:0]Q;
  input gt0_txdlyen_in;
  input [0:0]\txphaligndone_store_reg[0] ;
  input [0:0]txphaligndone_store;
  input gt0_txphalign_in;
  input \FSM_sequential_tx_phalign_manual_state_reg[0] ;
  input \FSM_sequential_tx_phalign_manual_state_reg[0]_0 ;
  input txphinitdone_sync_0;
  input [0:0]\FSM_sequential_tx_phalign_manual_state_reg[0]_1 ;
  input [3:0]txphinitdone_store_edge;
  input gt0_txphaligndone_out;
  input CLK;

  wire CLK;
  wire [0:0]E;
  wire \FSM_sequential_tx_phalign_manual_state[3]_i_4_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state[3]_i_5_n_0 ;
  wire \FSM_sequential_tx_phalign_manual_state_reg[0] ;
  wire \FSM_sequential_tx_phalign_manual_state_reg[0]_0 ;
  wire [0:0]\FSM_sequential_tx_phalign_manual_state_reg[0]_1 ;
  wire \FSM_sequential_tx_phalign_manual_state_reg[1] ;
  wire \FSM_sequential_tx_phalign_manual_state_reg[3] ;
  wire [3:0]Q;
  wire \TXPHALIGN[0]_i_2_n_0 ;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt0_txdlyen_in;
  wire gt0_txphalign_in;
  wire gt0_txphaligndone_out;
  wire \txphaligndone_prev_reg[0] ;
  wire [0:0]txphaligndone_store;
  wire [0:0]\txphaligndone_store_reg[0] ;
  wire [3:0]txphinitdone_store_edge;
  wire txphinitdone_sync_0;

  LUT6 #(
    .INIT(64'h00000000FFE200E2)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_1 
       (.I0(\FSM_sequential_tx_phalign_manual_state_reg[0] ),
        .I1(Q[2]),
        .I2(\FSM_sequential_tx_phalign_manual_state[3]_i_4_n_0 ),
        .I3(Q[1]),
        .I4(\FSM_sequential_tx_phalign_manual_state[3]_i_5_n_0 ),
        .I5(Q[3]),
        .O(E));
  LUT6 #(
    .INIT(64'h800000008000FFFF)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_4 
       (.I0(txphinitdone_store_edge[3]),
        .I1(txphinitdone_store_edge[1]),
        .I2(txphinitdone_store_edge[2]),
        .I3(txphinitdone_store_edge[0]),
        .I4(Q[0]),
        .I5(\TXPHALIGN[0]_i_2_n_0 ),
        .O(\FSM_sequential_tx_phalign_manual_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0F880F880FBB0F88)) 
    \FSM_sequential_tx_phalign_manual_state[3]_i_5 
       (.I0(\FSM_sequential_tx_phalign_manual_state_reg[0]_0 ),
        .I1(Q[2]),
        .I2(\TXPHALIGN[0]_i_2_n_0 ),
        .I3(Q[0]),
        .I4(txphinitdone_sync_0),
        .I5(\FSM_sequential_tx_phalign_manual_state_reg[0]_1 ),
        .O(\FSM_sequential_tx_phalign_manual_state[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFF3000020C)) 
    \TXDLYEN[0]_i_1 
       (.I0(\TXPHALIGN[0]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(gt0_txdlyen_in),
        .O(\FSM_sequential_tx_phalign_manual_state_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFB3F00000800)) 
    \TXPHALIGN[0]_i_1 
       (.I0(\TXPHALIGN[0]_i_2_n_0 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(gt0_txphalign_in),
        .O(\FSM_sequential_tx_phalign_manual_state_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \TXPHALIGN[0]_i_2 
       (.I0(\txphaligndone_store_reg[0] ),
        .I1(data_out),
        .O(\TXPHALIGN[0]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_txphaligndone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[0]_i_1 
       (.I0(\txphaligndone_store_reg[0] ),
        .I1(data_out),
        .I2(txphaligndone_store),
        .O(\txphaligndone_prev_reg[0] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_15
   (data_sync_reg6_0,
    p_1_in,
    gt1_txdlysresetdone_out,
    CLK);
  output data_sync_reg6_0;
  input p_1_in;
  input gt1_txdlysresetdone_out;
  input CLK;

  wire CLK;
  wire data_out1_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire gt1_txdlysresetdone_out;
  wire p_1_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt1_txdlysresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out1_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[1]_i_1 
       (.I0(data_out1_out),
        .I1(p_1_in),
        .O(data_sync_reg6_0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_16
   (\txphaligndone_prev_reg[1] ,
    data_out,
    Q,
    txphaligndone_store,
    gt1_txphaligndone_out,
    CLK);
  output \txphaligndone_prev_reg[1] ;
  output data_out;
  input [0:0]Q;
  input [0:0]txphaligndone_store;
  input gt1_txphaligndone_out;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt1_txphaligndone_out;
  wire \txphaligndone_prev_reg[1] ;
  wire [0:0]txphaligndone_store;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt1_txphaligndone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[1]_i_1 
       (.I0(Q),
        .I1(data_out),
        .I2(txphaligndone_store),
        .O(\txphaligndone_prev_reg[1] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_18
   (data_sync_reg6_0,
    p_2_in,
    gt2_txdlysresetdone_out,
    CLK);
  output data_sync_reg6_0;
  input p_2_in;
  input gt2_txdlysresetdone_out;
  input CLK;

  wire CLK;
  wire data_out0_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire gt2_txdlysresetdone_out;
  wire p_2_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt2_txdlysresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out0_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[2]_i_1 
       (.I0(data_out0_out),
        .I1(p_2_in),
        .O(data_sync_reg6_0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_19
   (\txphaligndone_prev_reg[2] ,
    data_out,
    Q,
    txphaligndone_store,
    gt2_txphaligndone_out,
    CLK);
  output \txphaligndone_prev_reg[2] ;
  output data_out;
  input [0:0]Q;
  input [0:0]txphaligndone_store;
  input gt2_txphaligndone_out;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt2_txphaligndone_out;
  wire \txphaligndone_prev_reg[2] ;
  wire [0:0]txphaligndone_store;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt2_txphaligndone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[2]_i_1 
       (.I0(Q),
        .I1(data_out),
        .I2(txphaligndone_store),
        .O(\txphaligndone_prev_reg[2] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_21
   (data_sync_reg6_0,
    \txdlysresetdone_store_reg[3] ,
    gt3_txdlysresetdone_out,
    CLK);
  output data_sync_reg6_0;
  input \txdlysresetdone_store_reg[3] ;
  input gt3_txdlysresetdone_out;
  input CLK;

  wire CLK;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire gt3_txdlysresetdone_out;
  wire \txdlysresetdone_store_reg[3] ;
  wire txdlysresetdone_sync_3;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt3_txdlysresetdone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(txdlysresetdone_sync_3),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \txdlysresetdone_store[3]_i_1 
       (.I0(txdlysresetdone_sync_3),
        .I1(\txdlysresetdone_store_reg[3] ),
        .O(data_sync_reg6_0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_22
   (\txphaligndone_prev_reg[3] ,
    data_out,
    Q,
    txphaligndone_store,
    gt3_txphaligndone_out,
    CLK);
  output \txphaligndone_prev_reg[3] ;
  output data_out;
  input [0:0]Q;
  input [0:0]txphaligndone_store;
  input gt3_txphaligndone_out;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire gt3_txphaligndone_out;
  wire \txphaligndone_prev_reg[3] ;
  wire [0:0]txphaligndone_store;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(gt3_txphaligndone_out),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphaligndone_store[3]_i_1 
       (.I0(Q),
        .I1(data_out),
        .I2(txphaligndone_store),
        .O(\txphaligndone_prev_reg[3] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_27
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_28
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_29
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_30
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[2]_i_1__6 
       (.I0(drprdy_i),
        .I1(Q[0]),
        .I2(data_out),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[8]_i_1__2 
       (.I0(Q[1]),
        .I1(data_out),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_31
   (D,
    data_out,
    rxpmaresetdone_sss,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  output data_out;
  input rxpmaresetdone_sss;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;
  wire rxpmaresetdone_sss;

  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[2]_i_1__2 
       (.I0(Q[0]),
        .I1(data_out),
        .I2(rxpmaresetdone_sss),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_state[3]_i_1__2 
       (.I0(rxpmaresetdone_sss),
        .I1(data_out),
        .I2(Q[0]),
        .I3(drprdy_i),
        .I4(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_32
   (D,
    data_sync_reg6_0,
    data_out,
    \FSM_sequential_state_reg[2] ,
    Q,
    \rxrate_o_reg[2] ,
    \rxrate_o_reg[2]_0 ,
    \rxrate_o_reg[1] ,
    \rxrate_o_reg[0] ,
    drprdy_i,
    \rxrate_o_reg[2]_1 ,
    gt3_rxrate_in,
    dclk);
  output [2:0]D;
  output data_sync_reg6_0;
  output data_out;
  output [1:0]\FSM_sequential_state_reg[2] ;
  input [2:0]Q;
  input [1:0]\rxrate_o_reg[2] ;
  input \rxrate_o_reg[2]_0 ;
  input \rxrate_o_reg[1] ;
  input \rxrate_o_reg[0] ;
  input drprdy_i;
  input [2:0]\rxrate_o_reg[2]_1 ;
  input [0:0]gt3_rxrate_in;
  input dclk;

  wire [2:0]D;
  wire [1:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire dclk;
  wire drprdy_i;
  wire [0:0]gt3_rxrate_in;
  wire \rxrate_o_reg[0] ;
  wire \rxrate_o_reg[1] ;
  wire [1:0]\rxrate_o_reg[2] ;
  wire \rxrate_o_reg[2]_0 ;
  wire [2:0]\rxrate_o_reg[2]_1 ;

  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'hF348F048)) 
    \FSM_sequential_state[1]_i_1__2 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(data_sync_reg6_0),
        .O(\FSM_sequential_state_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'hCCCCFC44)) 
    \FSM_sequential_state[2]_i_1__2 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(data_sync_reg6_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\FSM_sequential_state_reg[2] [1]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[2]_i_2__2 
       (.I0(data_out),
        .I1(\rxrate_o_reg[2]_1 [0]),
        .I2(\rxrate_o_reg[2]_1 [2]),
        .I3(\rxrate_o_reg[2] [1]),
        .I4(\rxrate_o_reg[2]_1 [1]),
        .I5(\rxrate_o_reg[2] [0]),
        .O(data_sync_reg6_0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt3_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[0]_i_1__2 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(data_out),
        .I5(\rxrate_o_reg[0] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[1]_i_1__2 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [0]),
        .I5(\rxrate_o_reg[1] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[2]_i_1__2 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [1]),
        .I5(\rxrate_o_reg[2]_0 ),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_33
   (data_out,
    gt3_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt3_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt3_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt3_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_34
   (data_out,
    gt3_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt3_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt3_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt3_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_35
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [0:0]D;
  input [2:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [0:0]D;
  wire [2:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  LUT5 #(
    .INIT(32'h45AF4500)) 
    \FSM_sequential_state[0]_i_1__2 
       (.I0(Q[2]),
        .I1(data_out),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(drprdy_i),
        .O(D));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_36
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_37
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_38
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_42
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[2]_i_1__5 
       (.I0(drprdy_i),
        .I1(Q[0]),
        .I2(data_out),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[8]_i_1__1 
       (.I0(Q[1]),
        .I1(data_out),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_43
   (D,
    data_out,
    rxpmaresetdone_sss,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  output data_out;
  input rxpmaresetdone_sss;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;
  wire rxpmaresetdone_sss;

  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[2]_i_1__1 
       (.I0(Q[0]),
        .I1(data_out),
        .I2(rxpmaresetdone_sss),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_state[3]_i_1__1 
       (.I0(rxpmaresetdone_sss),
        .I1(data_out),
        .I2(Q[0]),
        .I3(drprdy_i),
        .I4(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_44
   (D,
    data_sync_reg6_0,
    data_out,
    \FSM_sequential_state_reg[2] ,
    Q,
    \rxrate_o_reg[2] ,
    \rxrate_o_reg[2]_0 ,
    \rxrate_o_reg[1] ,
    \rxrate_o_reg[0] ,
    drprdy_i,
    \rxrate_o_reg[2]_1 ,
    gt2_rxrate_in,
    dclk);
  output [2:0]D;
  output data_sync_reg6_0;
  output data_out;
  output [1:0]\FSM_sequential_state_reg[2] ;
  input [2:0]Q;
  input [1:0]\rxrate_o_reg[2] ;
  input \rxrate_o_reg[2]_0 ;
  input \rxrate_o_reg[1] ;
  input \rxrate_o_reg[0] ;
  input drprdy_i;
  input [2:0]\rxrate_o_reg[2]_1 ;
  input [0:0]gt2_rxrate_in;
  input dclk;

  wire [2:0]D;
  wire [1:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire dclk;
  wire drprdy_i;
  wire [0:0]gt2_rxrate_in;
  wire \rxrate_o_reg[0] ;
  wire \rxrate_o_reg[1] ;
  wire [1:0]\rxrate_o_reg[2] ;
  wire \rxrate_o_reg[2]_0 ;
  wire [2:0]\rxrate_o_reg[2]_1 ;

  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT5 #(
    .INIT(32'hF348F048)) 
    \FSM_sequential_state[1]_i_1__1 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(data_sync_reg6_0),
        .O(\FSM_sequential_state_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT5 #(
    .INIT(32'hCCCCFC44)) 
    \FSM_sequential_state[2]_i_1__1 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(data_sync_reg6_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\FSM_sequential_state_reg[2] [1]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[2]_i_2__1 
       (.I0(data_out),
        .I1(\rxrate_o_reg[2]_1 [0]),
        .I2(\rxrate_o_reg[2]_1 [2]),
        .I3(\rxrate_o_reg[2] [1]),
        .I4(\rxrate_o_reg[2]_1 [1]),
        .I5(\rxrate_o_reg[2] [0]),
        .O(data_sync_reg6_0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt2_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[0]_i_1__1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(data_out),
        .I5(\rxrate_o_reg[0] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[1]_i_1__1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [0]),
        .I5(\rxrate_o_reg[1] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[2]_i_1__1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [1]),
        .I5(\rxrate_o_reg[2]_0 ),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_45
   (data_out,
    gt2_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt2_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt2_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt2_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_46
   (data_out,
    gt2_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt2_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt2_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt2_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_47
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [0:0]D;
  input [2:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [0:0]D;
  wire [2:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  LUT5 #(
    .INIT(32'h45AF4500)) 
    \FSM_sequential_state[0]_i_1__1 
       (.I0(Q[2]),
        .I1(data_out),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(drprdy_i),
        .O(D));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_48
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_49
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_50
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_54
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[2]_i_1__4 
       (.I0(drprdy_i),
        .I1(Q[0]),
        .I2(data_out),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[8]_i_1__0 
       (.I0(Q[1]),
        .I1(data_out),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_55
   (D,
    data_out,
    rxpmaresetdone_sss,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  output data_out;
  input rxpmaresetdone_sss;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;
  wire rxpmaresetdone_sss;

  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[2]_i_1__0 
       (.I0(Q[0]),
        .I1(data_out),
        .I2(rxpmaresetdone_sss),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_state[3]_i_1__0 
       (.I0(rxpmaresetdone_sss),
        .I1(data_out),
        .I2(Q[0]),
        .I3(drprdy_i),
        .I4(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_56
   (D,
    data_sync_reg6_0,
    data_out,
    \FSM_sequential_state_reg[2] ,
    Q,
    \rxrate_o_reg[2] ,
    \rxrate_o_reg[2]_0 ,
    \rxrate_o_reg[1] ,
    \rxrate_o_reg[0] ,
    drprdy_i,
    \rxrate_o_reg[2]_1 ,
    gt1_rxrate_in,
    dclk);
  output [2:0]D;
  output data_sync_reg6_0;
  output data_out;
  output [1:0]\FSM_sequential_state_reg[2] ;
  input [2:0]Q;
  input [1:0]\rxrate_o_reg[2] ;
  input \rxrate_o_reg[2]_0 ;
  input \rxrate_o_reg[1] ;
  input \rxrate_o_reg[0] ;
  input drprdy_i;
  input [2:0]\rxrate_o_reg[2]_1 ;
  input [0:0]gt1_rxrate_in;
  input dclk;

  wire [2:0]D;
  wire [1:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire dclk;
  wire drprdy_i;
  wire [0:0]gt1_rxrate_in;
  wire \rxrate_o_reg[0] ;
  wire \rxrate_o_reg[1] ;
  wire [1:0]\rxrate_o_reg[2] ;
  wire \rxrate_o_reg[2]_0 ;
  wire [2:0]\rxrate_o_reg[2]_1 ;

  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'hF348F048)) 
    \FSM_sequential_state[1]_i_1__0 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(data_sync_reg6_0),
        .O(\FSM_sequential_state_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT5 #(
    .INIT(32'hCCCCFC44)) 
    \FSM_sequential_state[2]_i_1__0 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(data_sync_reg6_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\FSM_sequential_state_reg[2] [1]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[2]_i_2__0 
       (.I0(data_out),
        .I1(\rxrate_o_reg[2]_1 [0]),
        .I2(\rxrate_o_reg[2]_1 [2]),
        .I3(\rxrate_o_reg[2] [1]),
        .I4(\rxrate_o_reg[2]_1 [1]),
        .I5(\rxrate_o_reg[2] [0]),
        .O(data_sync_reg6_0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt1_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[0]_i_1__0 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(data_out),
        .I5(\rxrate_o_reg[0] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[1]_i_1__0 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [0]),
        .I5(\rxrate_o_reg[1] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[2]_i_1__0 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [1]),
        .I5(\rxrate_o_reg[2]_0 ),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_57
   (data_out,
    gt1_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt1_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt1_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt1_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_58
   (data_out,
    gt1_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt1_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt1_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt1_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_59
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [0:0]D;
  input [2:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [0:0]D;
  wire [2:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  LUT5 #(
    .INIT(32'h45AF4500)) 
    \FSM_sequential_state[0]_i_1__0 
       (.I0(Q[2]),
        .I1(data_out),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(drprdy_i),
        .O(D));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_60
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_61
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_62
   (data_out,
    Q,
    CLK);
  output data_out;
  input [0:0]Q;
  input CLK;

  wire CLK;
  wire [0:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(CLK),
        .CE(1'b1),
        .D(Q),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(CLK),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_66
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[2]_i_1__3 
       (.I0(drprdy_i),
        .I1(Q[0]),
        .I2(data_out),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[8]_i_1 
       (.I0(Q[1]),
        .I1(data_out),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_67
   (D,
    data_out,
    rxpmaresetdone_sss,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [1:0]D;
  output data_out;
  input rxpmaresetdone_sss;
  input [1:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [1:0]D;
  wire [1:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;
  wire rxpmaresetdone_sss;

  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(Q[0]),
        .I1(data_out),
        .I2(rxpmaresetdone_sss),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT5 #(
    .INIT(32'hFFD0D0D0)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(rxpmaresetdone_sss),
        .I1(data_out),
        .I2(Q[0]),
        .I3(drprdy_i),
        .I4(Q[1]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_68
   (D,
    data_sync_reg6_0,
    data_out,
    \FSM_sequential_state_reg[2] ,
    Q,
    \rxrate_o_reg[2] ,
    old_rxrate,
    drprdy_i,
    \rxrate_o_reg[2]_0 ,
    gt0_rxrate_in,
    dclk);
  output [2:0]D;
  output data_sync_reg6_0;
  output data_out;
  output [1:0]\FSM_sequential_state_reg[2] ;
  input [2:0]Q;
  input [1:0]\rxrate_o_reg[2] ;
  input [2:0]old_rxrate;
  input drprdy_i;
  input [2:0]\rxrate_o_reg[2]_0 ;
  input [0:0]gt0_rxrate_in;
  input dclk;

  wire [2:0]D;
  wire [1:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]Q;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire data_sync_reg6_0;
  wire dclk;
  wire drprdy_i;
  wire [0:0]gt0_rxrate_in;
  wire [2:0]old_rxrate;
  wire [1:0]\rxrate_o_reg[2] ;
  wire [2:0]\rxrate_o_reg[2]_0 ;

  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'hF348F048)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(data_sync_reg6_0),
        .O(\FSM_sequential_state_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'hCCCCFC44)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(drprdy_i),
        .I1(Q[2]),
        .I2(data_sync_reg6_0),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\FSM_sequential_state_reg[2] [1]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \FSM_sequential_state[2]_i_2 
       (.I0(data_out),
        .I1(\rxrate_o_reg[2]_0 [0]),
        .I2(\rxrate_o_reg[2]_0 [2]),
        .I3(\rxrate_o_reg[2] [1]),
        .I4(\rxrate_o_reg[2]_0 [1]),
        .I5(\rxrate_o_reg[2] [0]),
        .O(data_sync_reg6_0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt0_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[0]_i_1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(data_out),
        .I5(old_rxrate[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[1]_i_1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [0]),
        .I5(old_rxrate[1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF0F80F070000)) 
    \rxrate_o[2]_i_1 
       (.I0(data_sync_reg6_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\rxrate_o_reg[2] [1]),
        .I5(old_rxrate[2]),
        .O(D[2]));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_69
   (data_out,
    gt0_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt0_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt0_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt0_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_70
   (data_out,
    gt0_rxrate_in,
    dclk);
  output data_out;
  input [0:0]gt0_rxrate_in;
  input dclk;

  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire [0:0]gt0_rxrate_in;

  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(gt0_rxrate_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_block" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_block_71
   (D,
    Q,
    drprdy_i,
    data_in,
    dclk);
  output [0:0]D;
  input [2:0]Q;
  input drprdy_i;
  input data_in;
  input dclk;

  wire [0:0]D;
  wire [2:0]Q;
  wire data_in;
  wire data_out;
  wire data_sync1;
  wire data_sync2;
  wire data_sync3;
  wire data_sync4;
  wire data_sync5;
  wire dclk;
  wire drprdy_i;

  LUT5 #(
    .INIT(32'h45AF4500)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(Q[2]),
        .I1(data_out),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(drprdy_i),
        .O(D));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg1
       (.C(dclk),
        .CE(1'b1),
        .D(data_in),
        .Q(data_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg2
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync1),
        .Q(data_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg3
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync2),
        .Q(data_sync3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg4
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync3),
        .Q(data_sync4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg5
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync4),
        .Q(data_sync5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* SHREG_EXTRACT = "no" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  (* box_type = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_sync_reg6
       (.C(dclk),
        .CE(1'b1),
        .D(data_sync5),
        .Q(data_out),
        .R(1'b0));
endmodule

module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse
   (txphinitdone_sync_0,
    \FSM_sequential_tx_phalign_manual_state_reg[2] ,
    txdone_clear_reg,
    CLK,
    \stretch_r_reg[1]_0 ,
    Q,
    \TXPHINIT_reg[0] ,
    gt0_txphinit_in,
    \txphinitdone_store_edge_reg[0] ,
    txphinitdone_store_edge,
    gt0_txphinitdone_out);
  output txphinitdone_sync_0;
  output \FSM_sequential_tx_phalign_manual_state_reg[2] ;
  output txdone_clear_reg;
  input CLK;
  input \stretch_r_reg[1]_0 ;
  input [0:0]Q;
  input [3:0]\TXPHINIT_reg[0] ;
  input gt0_txphinit_in;
  input \txphinitdone_store_edge_reg[0] ;
  input [0:0]txphinitdone_store_edge;
  input gt0_txphinitdone_out;

  wire CLK;
  wire \FSM_sequential_tx_phalign_manual_state_reg[2] ;
  wire [0:0]Q;
  wire \TXPHINIT[0]_i_2_n_0 ;
  wire [3:0]\TXPHINIT_reg[0] ;
  wire USER_DONE_i_1_n_0;
  wire gt0_txphinit_in;
  wire gt0_txphinitdone_out;
  wire [2:0]stretch_r;
  wire \stretch_r_reg[1]_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire txdone_clear_reg;
  wire [0:0]txphinitdone_store_edge;
  wire \txphinitdone_store_edge_reg[0] ;
  wire txphinitdone_sync_0;

  LUT6 #(
    .INIT(64'hFFFFFE3F00000200)) 
    \TXPHINIT[0]_i_1 
       (.I0(\TXPHINIT[0]_i_2_n_0 ),
        .I1(\TXPHINIT_reg[0] [2]),
        .I2(\TXPHINIT_reg[0] [0]),
        .I3(\TXPHINIT_reg[0] [1]),
        .I4(\TXPHINIT_reg[0] [3]),
        .I5(gt0_txphinit_in),
        .O(\FSM_sequential_tx_phalign_manual_state_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \TXPHINIT[0]_i_2 
       (.I0(Q),
        .I1(txphinitdone_sync_0),
        .O(\TXPHINIT[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(CLK),
        .CE(1'b1),
        .D(USER_DONE_i_1_n_0),
        .Q(txphinitdone_sync_0),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(stretch_r[1]),
        .Q(stretch_r[0]));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(stretch_r[2]),
        .Q(stretch_r[1]));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(1'b1),
        .Q(stretch_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(stretch_r[0]),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt0_txphinitdone_out),
        .Q(sync2_r[2]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT4 #(
    .INIT(16'hFFAE)) 
    \txphinitdone_store_edge[0]_i_1 
       (.I0(\txphinitdone_store_edge_reg[0] ),
        .I1(txphinitdone_sync_0),
        .I2(Q),
        .I3(txphinitdone_store_edge),
        .O(txdone_clear_reg));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_sync_pulse" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_17
   (D,
    \txphinitdone_prev_reg[1] ,
    CLK,
    \stretch_r_reg[1]_0 ,
    Q,
    txphinitdone_store_edge,
    gt1_txphinitdone_out);
  output [0:0]D;
  output \txphinitdone_prev_reg[1] ;
  input CLK;
  input \stretch_r_reg[1]_0 ;
  input [0:0]Q;
  input [0:0]txphinitdone_store_edge;
  input gt1_txphinitdone_out;

  wire CLK;
  wire [0:0]D;
  wire [0:0]Q;
  wire USER_DONE_i_1__0_n_0;
  wire gt1_txphinitdone_out;
  wire \stretch_r_reg[1]_0 ;
  wire \stretch_r_reg_n_0_[0] ;
  wire \stretch_r_reg_n_0_[1] ;
  wire \stretch_r_reg_n_0_[2] ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire \txphinitdone_prev_reg[1] ;
  wire [0:0]txphinitdone_store_edge;

  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1__0
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(CLK),
        .CE(1'b1),
        .D(USER_DONE_i_1__0_n_0),
        .Q(D),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[1] ),
        .Q(\stretch_r_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[2] ),
        .Q(\stretch_r_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(1'b1),
        .Q(\stretch_r_reg_n_0_[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\stretch_r_reg_n_0_[0] ),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt1_txphinitdone_out),
        .Q(sync2_r[2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphinitdone_store_edge[1]_i_1 
       (.I0(Q),
        .I1(D),
        .I2(txphinitdone_store_edge),
        .O(\txphinitdone_prev_reg[1] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_sync_pulse" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_20
   (D,
    \txphinitdone_prev_reg[2] ,
    CLK,
    \stretch_r_reg[1]_0 ,
    Q,
    txphinitdone_store_edge,
    gt2_txphinitdone_out);
  output [0:0]D;
  output \txphinitdone_prev_reg[2] ;
  input CLK;
  input \stretch_r_reg[1]_0 ;
  input [0:0]Q;
  input [0:0]txphinitdone_store_edge;
  input gt2_txphinitdone_out;

  wire CLK;
  wire [0:0]D;
  wire [0:0]Q;
  wire USER_DONE_i_1__1_n_0;
  wire gt2_txphinitdone_out;
  wire \stretch_r_reg[1]_0 ;
  wire \stretch_r_reg_n_0_[0] ;
  wire \stretch_r_reg_n_0_[1] ;
  wire \stretch_r_reg_n_0_[2] ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire \txphinitdone_prev_reg[2] ;
  wire [0:0]txphinitdone_store_edge;

  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1__1
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(CLK),
        .CE(1'b1),
        .D(USER_DONE_i_1__1_n_0),
        .Q(D),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[1] ),
        .Q(\stretch_r_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[2] ),
        .Q(\stretch_r_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(1'b1),
        .Q(\stretch_r_reg_n_0_[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\stretch_r_reg_n_0_[0] ),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt2_txphinitdone_out),
        .Q(sync2_r[2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphinitdone_store_edge[2]_i_1 
       (.I0(Q),
        .I1(D),
        .I2(txphinitdone_store_edge),
        .O(\txphinitdone_prev_reg[2] ));
endmodule

(* ORIG_REF_NAME = "xaui_0_gt_wrapper_tx_sync_manual_sync_pulse" *) 
module xaui_0_xaui_0_gt_wrapper_tx_sync_manual_sync_pulse_23
   (D,
    \txphinitdone_prev_reg[3] ,
    CLK,
    \stretch_r_reg[1]_0 ,
    Q,
    txphinitdone_store_edge,
    gt3_txphinitdone_out);
  output [0:0]D;
  output \txphinitdone_prev_reg[3] ;
  input CLK;
  input \stretch_r_reg[1]_0 ;
  input [0:0]Q;
  input [0:0]txphinitdone_store_edge;
  input gt3_txphinitdone_out;

  wire CLK;
  wire [0:0]D;
  wire [0:0]Q;
  wire USER_DONE_i_1__2_n_0;
  wire gt3_txphinitdone_out;
  wire \stretch_r_reg[1]_0 ;
  wire \stretch_r_reg_n_0_[0] ;
  wire \stretch_r_reg_n_0_[1] ;
  wire \stretch_r_reg_n_0_[2] ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync1_r;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [2:0]sync2_r;
  wire \txphinitdone_prev_reg[3] ;
  wire [0:0]txphinitdone_store_edge;

  LUT2 #(
    .INIT(4'h8)) 
    USER_DONE_i_1__2
       (.I0(sync1_r[0]),
        .I1(sync2_r[0]),
        .O(USER_DONE_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    USER_DONE_reg
       (.C(CLK),
        .CE(1'b1),
        .D(USER_DONE_i_1__2_n_0),
        .Q(D),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[1] ),
        .Q(\stretch_r_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(\stretch_r_reg_n_0_[2] ),
        .Q(\stretch_r_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \stretch_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\stretch_r_reg[1]_0 ),
        .D(1'b1),
        .Q(\stretch_r_reg_n_0_[2] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[1]),
        .Q(sync1_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync1_r[2]),
        .Q(sync1_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync1_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\stretch_r_reg_n_0_[0] ),
        .Q(sync1_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[1]),
        .Q(sync2_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sync2_r[2]),
        .Q(sync2_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \sync2_r_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt3_txphinitdone_out),
        .Q(sync2_r[2]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \txphinitdone_store_edge[3]_i_1 
       (.I0(Q),
        .I1(D),
        .I2(txphinitdone_store_edge),
        .O(\txphinitdone_prev_reg[3] ));
endmodule

module xaui_0_xaui_0_pulse_stretcher
   (out,
    \sync_r_reg[0]_0 ,
    dclk_mgt_rx_reset_inprocess,
    dclk,
    AR);
  output [0:0]out;
  output \sync_r_reg[0]_0 ;
  input dclk_mgt_rx_reset_inprocess;
  input dclk;
  input [0:0]AR;

  wire [0:0]AR;
  wire dclk;
  wire dclk_mgt_rx_reset_inprocess;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [3:0]sync_r;
  wire \sync_r_reg[0]_0 ;

  assign out[0] = sync_r[0];
  LUT2 #(
    .INIT(4'h2)) 
    gtrxreset_s_i_1
       (.I0(sync_r[0]),
        .I1(dclk_mgt_rx_reset_inprocess),
        .O(\sync_r_reg[0]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync_r_reg[0] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_r[1]),
        .Q(sync_r[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync_r_reg[1] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_r[2]),
        .Q(sync_r[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \sync_r_reg[2] 
       (.C(dclk),
        .CE(1'b1),
        .CLR(AR),
        .D(sync_r[3]),
        .Q(sync_r[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDPE #(
    .INIT(1'b0)) 
    \sync_r_reg[3] 
       (.C(dclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AR),
        .Q(sync_r[3]));
endmodule

module xaui_0_xaui_0_reset_counter
   (D,
    \count_reg[7]_0 ,
    \count_reg[7]_1 ,
    AR,
    dclk,
    out,
    dclk_mgt_rx_reset_inprocess,
    dclk_mgt_rx_reset_inprocess0,
    dclk_mgt_rx_reset_inprocess_reg,
    dclk_mgt_rx_reset_waiting_resetdone_reg);
  output [0:0]D;
  output \count_reg[7]_0 ;
  output \count_reg[7]_1 ;
  output [0:0]AR;
  input dclk;
  input [0:0]out;
  input dclk_mgt_rx_reset_inprocess;
  input dclk_mgt_rx_reset_inprocess0;
  input [0:0]dclk_mgt_rx_reset_inprocess_reg;
  input dclk_mgt_rx_reset_waiting_resetdone_reg;

  wire [0:0]AR;
  wire [0:0]D;
  wire \count[7]_i_3_n_0 ;
  wire count_d1;
  wire \count_reg[7]_0 ;
  wire \count_reg[7]_1 ;
  wire \count_reg_n_0_[0] ;
  wire \count_reg_n_0_[1] ;
  wire \count_reg_n_0_[2] ;
  wire \count_reg_n_0_[3] ;
  wire \count_reg_n_0_[4] ;
  wire \count_reg_n_0_[5] ;
  wire \count_reg_n_0_[6] ;
  wire dclk;
  wire dclk_mgt_rx_reset_inprocess;
  wire dclk_mgt_rx_reset_inprocess0;
  wire [0:0]dclk_mgt_rx_reset_inprocess_reg;
  wire dclk_mgt_rx_reset_waiting_resetdone_reg;
  wire initial_reset;
  wire initial_reset_i_1_n_0;
  wire [0:0]out;
  wire [7:0]plusOp;
  wire sel;

  LUT1 #(
    .INIT(2'h1)) 
    \count[0]_i_1 
       (.I0(\count_reg_n_0_[0] ),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[1]_i_1 
       (.I0(\count_reg_n_0_[0] ),
        .I1(\count_reg_n_0_[1] ),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count[2]_i_1 
       (.I0(\count_reg_n_0_[0] ),
        .I1(\count_reg_n_0_[1] ),
        .I2(\count_reg_n_0_[2] ),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count[3]_i_1 
       (.I0(\count_reg_n_0_[1] ),
        .I1(\count_reg_n_0_[0] ),
        .I2(\count_reg_n_0_[2] ),
        .I3(\count_reg_n_0_[3] ),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count[4]_i_1 
       (.I0(\count_reg_n_0_[2] ),
        .I1(\count_reg_n_0_[0] ),
        .I2(\count_reg_n_0_[1] ),
        .I3(\count_reg_n_0_[3] ),
        .I4(\count_reg_n_0_[4] ),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count[5]_i_1 
       (.I0(\count_reg_n_0_[3] ),
        .I1(\count_reg_n_0_[1] ),
        .I2(\count_reg_n_0_[0] ),
        .I3(\count_reg_n_0_[2] ),
        .I4(\count_reg_n_0_[4] ),
        .I5(\count_reg_n_0_[5] ),
        .O(plusOp[5]));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count[6]_i_1 
       (.I0(\count[7]_i_3_n_0 ),
        .I1(\count_reg_n_0_[6] ),
        .O(plusOp[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \count[7]_i_1 
       (.I0(D),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \count[7]_i_2 
       (.I0(\count[7]_i_3_n_0 ),
        .I1(\count_reg_n_0_[6] ),
        .O(plusOp[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count[7]_i_3 
       (.I0(\count_reg_n_0_[5] ),
        .I1(\count_reg_n_0_[3] ),
        .I2(\count_reg_n_0_[1] ),
        .I3(\count_reg_n_0_[0] ),
        .I4(\count_reg_n_0_[2] ),
        .I5(\count_reg_n_0_[4] ),
        .O(\count[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    count_d1_reg
       (.C(dclk),
        .CE(1'b1),
        .D(D),
        .Q(count_d1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[0]),
        .Q(\count_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[1]),
        .Q(\count_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[2]),
        .Q(\count_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[3]),
        .Q(\count_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[4]),
        .Q(\count_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[5]),
        .Q(\count_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[6]),
        .Q(\count_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[7] 
       (.C(dclk),
        .CE(sel),
        .D(plusOp[7]),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0707070700000700)) 
    dclk_mgt_rx_reset_inprocess_i_1
       (.I0(D),
        .I1(out),
        .I2(initial_reset),
        .I3(dclk_mgt_rx_reset_inprocess),
        .I4(dclk_mgt_rx_reset_inprocess0),
        .I5(dclk_mgt_rx_reset_inprocess_reg),
        .O(\count_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'h0700)) 
    dclk_mgt_rx_reset_waiting_resetdone_i_1
       (.I0(D),
        .I1(out),
        .I2(initial_reset),
        .I3(dclk_mgt_rx_reset_waiting_resetdone_reg),
        .O(\count_reg[7]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    gtpe2_common_0_i_i_1
       (.I0(D),
        .I1(out),
        .I2(initial_reset),
        .O(AR));
  LUT2 #(
    .INIT(4'h2)) 
    initial_reset_i_1
       (.I0(D),
        .I1(count_d1),
        .O(initial_reset_i_1_n_0));
  FDRE initial_reset_reg
       (.C(dclk),
        .CE(1'b1),
        .D(initial_reset_i_1_n_0),
        .Q(initial_reset),
        .R(1'b0));
endmodule

module xaui_0_align_counter
   (extra_a,
    Q,
    \prbs_reg[2]_0 ,
    \state_reg[1][2] ,
    \tx_is_idle_reg[1] ,
    \count_reg[2]_0 ,
    extra_a_reg_0,
    \tx_is_q_reg[0] ,
    \count_reg[2]_1 ,
    extra_a_reg_1,
    usrclk,
    \prbs_reg[7]_0 ,
    \state_reg[1][1] ,
    \state_reg[1][1]_0 ,
    q_det,
    \state_reg[1][1]_1 ,
    \state[1][1]_i_3 ,
    \state[1][1]_i_3_0 ,
    \state_reg[1][1]_2 ,
    usrclk_reset,
    D);
  output extra_a;
  output [1:0]Q;
  output [1:0]\prbs_reg[2]_0 ;
  output \state_reg[1][2] ;
  output \tx_is_idle_reg[1] ;
  output \count_reg[2]_0 ;
  output extra_a_reg_0;
  output \tx_is_q_reg[0] ;
  output \count_reg[2]_1 ;
  input extra_a_reg_1;
  input usrclk;
  input \prbs_reg[7]_0 ;
  input \state_reg[1][1] ;
  input \state_reg[1][1]_0 ;
  input q_det;
  input \state_reg[1][1]_1 ;
  input [1:0]\state[1][1]_i_3 ;
  input [1:0]\state[1][1]_i_3_0 ;
  input \state_reg[1][1]_2 ;
  input usrclk_reset;
  input [1:0]D;

  wire [1:0]D;
  wire [1:0]Q;
  wire [4:2]count;
  wire \count[2]_i_1_n_0 ;
  wire \count[3]_i_1_n_0 ;
  wire \count[3]_i_2_n_0 ;
  wire \count[4]_i_1_n_0 ;
  wire \count_reg[2]_0 ;
  wire \count_reg[2]_1 ;
  wire extra_a;
  wire extra_a_reg_0;
  wire extra_a_reg_1;
  wire [0:0]p_0_out;
  wire [3:2]p_1_in;
  wire [1:0]\prbs_reg[2]_0 ;
  wire \prbs_reg[7]_0 ;
  wire \prbs_reg_n_0_[5] ;
  wire \prbs_reg_n_0_[6] ;
  wire \prbs_reg_n_0_[7] ;
  wire q_det;
  wire \state[0][0]_i_5_n_0 ;
  wire \state[1][1]_i_10_n_0 ;
  wire [1:0]\state[1][1]_i_3 ;
  wire [1:0]\state[1][1]_i_3_0 ;
  wire \state_reg[1][1] ;
  wire \state_reg[1][1]_0 ;
  wire \state_reg[1][1]_1 ;
  wire \state_reg[1][1]_2 ;
  wire \state_reg[1][2] ;
  wire \tx_is_idle_reg[1] ;
  wire \tx_is_q_reg[0] ;
  wire usrclk;
  wire usrclk_reset;

  LUT4 #(
    .INIT(16'hB88B)) 
    \count[2]_i_1 
       (.I0(p_1_in[2]),
        .I1(\prbs_reg[7]_0 ),
        .I2(count[2]),
        .I3(Q[1]),
        .O(\count[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \count[3]_i_1 
       (.I0(\prbs_reg[7]_0 ),
        .I1(count[2]),
        .I2(Q[1]),
        .I3(count[4]),
        .I4(count[3]),
        .O(\count[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8B88B)) 
    \count[3]_i_2 
       (.I0(p_1_in[3]),
        .I1(\prbs_reg[7]_0 ),
        .I2(count[3]),
        .I3(Q[1]),
        .I4(count[2]),
        .O(\count[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT5 #(
    .INIT(32'hFFFFCCC8)) 
    \count[4]_i_1 
       (.I0(count[3]),
        .I1(count[4]),
        .I2(Q[1]),
        .I3(count[2]),
        .I4(\prbs_reg[7]_0 ),
        .O(\count[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(usrclk),
        .CE(\count[3]_i_1_n_0 ),
        .D(D[0]),
        .Q(Q[0]),
        .R(usrclk_reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(usrclk),
        .CE(\count[3]_i_1_n_0 ),
        .D(D[1]),
        .Q(Q[1]),
        .R(usrclk_reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(usrclk),
        .CE(\count[3]_i_1_n_0 ),
        .D(\count[2]_i_1_n_0 ),
        .Q(count[2]),
        .R(usrclk_reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(usrclk),
        .CE(\count[3]_i_1_n_0 ),
        .D(\count[3]_i_2_n_0 ),
        .Q(count[3]),
        .R(usrclk_reset));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\count[4]_i_1_n_0 ),
        .Q(count[4]),
        .R(usrclk_reset));
  FDRE extra_a_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(extra_a_reg_1),
        .Q(extra_a),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \prbs[1]_i_1__0 
       (.I0(\prbs_reg_n_0_[7] ),
        .I1(\prbs_reg_n_0_[6] ),
        .O(p_0_out));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[1] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(p_0_out),
        .Q(\prbs_reg[2]_0 [0]),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[2] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(\prbs_reg[2]_0 [0]),
        .Q(\prbs_reg[2]_0 [1]),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[3] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(\prbs_reg[2]_0 [1]),
        .Q(p_1_in[2]),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[4] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(p_1_in[2]),
        .Q(p_1_in[3]),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[5] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(p_1_in[3]),
        .Q(\prbs_reg_n_0_[5] ),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[6] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(\prbs_reg_n_0_[5] ),
        .Q(\prbs_reg_n_0_[6] ),
        .S(usrclk_reset));
  FDSE #(
    .INIT(1'b1)) 
    \prbs_reg[7] 
       (.C(usrclk),
        .CE(\prbs_reg[7]_0 ),
        .D(\prbs_reg_n_0_[6] ),
        .Q(\prbs_reg_n_0_[7] ),
        .S(usrclk_reset));
  LUT6 #(
    .INIT(64'hFEFEFEFEFFFEFEFE)) 
    \state[0][0]_i_3 
       (.I0(\prbs_reg[7]_0 ),
        .I1(count[2]),
        .I2(\state[0][0]_i_5_n_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(extra_a),
        .O(\count_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \state[0][0]_i_5 
       (.I0(count[4]),
        .I1(count[3]),
        .O(\state[0][0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF40)) 
    \state[1][0]_i_5 
       (.I0(extra_a),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(count[4]),
        .I4(count[3]),
        .I5(count[2]),
        .O(extra_a_reg_0));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEEEFEFE)) 
    \state[1][0]_i_7 
       (.I0(\state[0][0]_i_5_n_0 ),
        .I1(\prbs_reg[7]_0 ),
        .I2(count[2]),
        .I3(Q[1]),
        .I4(extra_a),
        .I5(Q[0]),
        .O(\count_reg[2]_1 ));
  LUT4 #(
    .INIT(16'h04FF)) 
    \state[1][1]_i_10 
       (.I0(Q[0]),
        .I1(extra_a),
        .I2(Q[1]),
        .I3(count[2]),
        .O(\state[1][1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h0000EFEE)) 
    \state[1][1]_i_2 
       (.I0(\state[1][1]_i_3 [0]),
        .I1(\state[1][1]_i_3_0 [0]),
        .I2(\tx_is_idle_reg[1] ),
        .I3(\state_reg[1][1]_2 ),
        .I4(usrclk_reset),
        .O(\tx_is_q_reg[0] ));
  LUT6 #(
    .INIT(64'h080C080C0800080C)) 
    \state[1][1]_i_6 
       (.I0(\tx_is_idle_reg[1] ),
        .I1(\state_reg[1][1] ),
        .I2(\state_reg[1][1]_0 ),
        .I3(\count_reg[2]_0 ),
        .I4(q_det),
        .I5(\state_reg[1][1]_1 ),
        .O(\state_reg[1][2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF1F)) 
    \state[1][1]_i_8 
       (.I0(\state[1][1]_i_3_0 [1]),
        .I1(\state[1][1]_i_3 [1]),
        .I2(\state[1][1]_i_10_n_0 ),
        .I3(\prbs_reg[7]_0 ),
        .I4(count[3]),
        .I5(count[4]),
        .O(\tx_is_idle_reg[1] ));
endmodule

module xaui_0_deskew_state_machine
   (mgt_enchansync,
    align_status_reg_0,
    \mgt_rxdata_reg_reg[32] ,
    \mgt_rxdata_reg_reg[16] ,
    \mgt_rxdata_reg_reg[48] ,
    \mgt_rxdata_reg_reg[0] ,
    local_fault,
    usrclk,
    sync_status,
    usrclk_reset,
    mgt_rxdata,
    mgt_codevalid,
    mgt_rxcharisk,
    \got_align_reg[0]_0 ,
    \got_align_reg[0]_1 ,
    \got_align_reg[0]_2 ,
    \got_align_reg[0]_3 );
  output mgt_enchansync;
  output align_status_reg_0;
  output \mgt_rxdata_reg_reg[32] ;
  output \mgt_rxdata_reg_reg[16] ;
  output \mgt_rxdata_reg_reg[48] ;
  output \mgt_rxdata_reg_reg[0] ;
  output local_fault;
  input usrclk;
  input sync_status;
  input usrclk_reset;
  input [55:0]mgt_rxdata;
  input [7:0]mgt_codevalid;
  input [3:0]mgt_rxcharisk;
  input \got_align_reg[0]_0 ;
  input \got_align_reg[0]_1 ;
  input \got_align_reg[0]_2 ;
  input \got_align_reg[0]_3 ;

  wire \G_GOT_A[0].got_a_reg ;
  wire \G_GOT_A[1].got_a_reg ;
  wire \G_GOT_A[2].got_a_reg ;
  wire \G_GOT_A[3].got_a_reg ;
  wire \G_GOT_A[4].got_a_reg ;
  wire \G_GOT_A[5].got_a_reg ;
  wire \G_GOT_A[6].got_a_reg ;
  wire \G_GOT_A[7].got_a_reg ;
  wire align_status_reg_0;
  wire deskew_error;
  wire \deskew_error_reg_n_0_[0] ;
  wire enchansync_i;
  wire got_align;
  wire \got_align[0]_i_6_n_0 ;
  wire \got_align[0]_i_7_n_0 ;
  wire \got_align[0]_i_8_n_0 ;
  wire \got_align[0]_i_9_n_0 ;
  wire \got_align[1]_i_6_n_0 ;
  wire \got_align[1]_i_7_n_0 ;
  wire \got_align[1]_i_8_n_0 ;
  wire \got_align[1]_i_9_n_0 ;
  wire \got_align_reg[0]_0 ;
  wire \got_align_reg[0]_1 ;
  wire \got_align_reg[0]_2 ;
  wire \got_align_reg[0]_3 ;
  wire \got_align_reg_n_0_[0] ;
  wire local_fault;
  wire [7:0]mgt_codevalid;
  wire mgt_enchansync;
  wire [3:0]mgt_rxcharisk;
  wire [55:0]mgt_rxdata;
  wire \mgt_rxdata_reg_reg[0] ;
  wire \mgt_rxdata_reg_reg[16] ;
  wire \mgt_rxdata_reg_reg[32] ;
  wire \mgt_rxdata_reg_reg[48] ;
  wire [2:0]next_state__0;
  wire [1:0]p_1_out;
  wire [1:0]p_7_out;
  wire \state[1][0]_i_1_n_0 ;
  wire \state[1][1]_i_1_n_0 ;
  wire \state[1][1]_i_2__0_n_0 ;
  wire \state[1][1]_i_3__0_n_0 ;
  wire \state[1][1]_i_4__0_n_0 ;
  wire \state[1][1]_i_5__0_n_0 ;
  wire \state[1][2]_i_1_n_0 ;
  wire \state[1][2]_i_3_n_0 ;
  wire \state_reg_n_0_[1][0] ;
  wire \state_reg_n_0_[1][1] ;
  wire \state_reg_n_0_[1][2] ;
  wire sync_status;
  wire usrclk;
  wire usrclk_reset;

  FDRE align_status_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(\state_reg_n_0_[1][2] ),
        .Q(align_status_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \deskew_error[0]_i_1 
       (.I0(\G_GOT_A[1].got_a_reg ),
        .I1(\G_GOT_A[3].got_a_reg ),
        .I2(\G_GOT_A[2].got_a_reg ),
        .I3(\G_GOT_A[0].got_a_reg ),
        .O(p_1_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h7FFE)) 
    \deskew_error[1]_i_1 
       (.I0(\G_GOT_A[5].got_a_reg ),
        .I1(\G_GOT_A[7].got_a_reg ),
        .I2(\G_GOT_A[6].got_a_reg ),
        .I3(\G_GOT_A[4].got_a_reg ),
        .O(p_1_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \deskew_error_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_1_out[0]),
        .Q(\deskew_error_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \deskew_error_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_1_out[1]),
        .Q(deskew_error),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    enchansync_i_1
       (.I0(\state_reg_n_0_[1][1] ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(sync_status),
        .I3(\state_reg_n_0_[1][2] ),
        .O(enchansync_i));
  FDRE enchansync_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(enchansync_i),
        .Q(mgt_enchansync),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \got_align[0]_i_1 
       (.I0(\G_GOT_A[3].got_a_reg ),
        .I1(\G_GOT_A[0].got_a_reg ),
        .I2(\G_GOT_A[1].got_a_reg ),
        .I3(\G_GOT_A[2].got_a_reg ),
        .O(p_7_out[0]));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    \got_align[0]_i_2 
       (.I0(mgt_rxdata[47]),
        .I1(mgt_rxdata[44]),
        .I2(mgt_codevalid[6]),
        .I3(\got_align[0]_i_6_n_0 ),
        .I4(\mgt_rxdata_reg_reg[48] ),
        .I5(\got_align_reg[0]_2 ),
        .O(\G_GOT_A[3].got_a_reg ));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    \got_align[0]_i_3 
       (.I0(mgt_rxdata[5]),
        .I1(mgt_rxdata[2]),
        .I2(mgt_codevalid[0]),
        .I3(\got_align[0]_i_7_n_0 ),
        .I4(\mgt_rxdata_reg_reg[0] ),
        .I5(\got_align_reg[0]_3 ),
        .O(\G_GOT_A[0].got_a_reg ));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    \got_align[0]_i_4 
       (.I0(mgt_rxdata[19]),
        .I1(mgt_rxdata[16]),
        .I2(mgt_codevalid[2]),
        .I3(\got_align[0]_i_8_n_0 ),
        .I4(\mgt_rxdata_reg_reg[16] ),
        .I5(\got_align_reg[0]_1 ),
        .O(\G_GOT_A[1].got_a_reg ));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    \got_align[0]_i_5 
       (.I0(mgt_rxdata[33]),
        .I1(mgt_rxdata[30]),
        .I2(mgt_codevalid[4]),
        .I3(\got_align[0]_i_9_n_0 ),
        .I4(\mgt_rxdata_reg_reg[32] ),
        .I5(\got_align_reg[0]_0 ),
        .O(\G_GOT_A[2].got_a_reg ));
  LUT2 #(
    .INIT(4'h7)) 
    \got_align[0]_i_6 
       (.I0(mgt_rxdata[46]),
        .I1(mgt_rxdata[45]),
        .O(\got_align[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \got_align[0]_i_7 
       (.I0(mgt_rxdata[4]),
        .I1(mgt_rxdata[3]),
        .O(\got_align[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \got_align[0]_i_8 
       (.I0(mgt_rxdata[18]),
        .I1(mgt_rxdata[17]),
        .O(\got_align[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \got_align[0]_i_9 
       (.I0(mgt_rxdata[32]),
        .I1(mgt_rxdata[31]),
        .O(\got_align[0]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \got_align[1]_i_1 
       (.I0(\G_GOT_A[7].got_a_reg ),
        .I1(\G_GOT_A[4].got_a_reg ),
        .I2(\G_GOT_A[5].got_a_reg ),
        .I3(\G_GOT_A[6].got_a_reg ),
        .O(p_7_out[1]));
  LUT5 #(
    .INIT(32'h08000000)) 
    \got_align[1]_i_2 
       (.I0(\got_align[1]_i_6_n_0 ),
        .I1(mgt_rxdata[52]),
        .I2(mgt_rxdata[55]),
        .I3(mgt_codevalid[7]),
        .I4(mgt_rxcharisk[3]),
        .O(\G_GOT_A[7].got_a_reg ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \got_align[1]_i_3 
       (.I0(\got_align[1]_i_7_n_0 ),
        .I1(mgt_rxdata[10]),
        .I2(mgt_rxdata[13]),
        .I3(mgt_codevalid[1]),
        .I4(mgt_rxcharisk[0]),
        .O(\G_GOT_A[4].got_a_reg ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \got_align[1]_i_4 
       (.I0(\got_align[1]_i_8_n_0 ),
        .I1(mgt_rxdata[24]),
        .I2(mgt_rxdata[27]),
        .I3(mgt_codevalid[3]),
        .I4(mgt_rxcharisk[1]),
        .O(\G_GOT_A[5].got_a_reg ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \got_align[1]_i_5 
       (.I0(\got_align[1]_i_9_n_0 ),
        .I1(mgt_rxdata[38]),
        .I2(mgt_rxdata[41]),
        .I3(mgt_codevalid[5]),
        .I4(mgt_rxcharisk[2]),
        .O(\G_GOT_A[6].got_a_reg ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \got_align[1]_i_6 
       (.I0(mgt_rxdata[48]),
        .I1(mgt_rxdata[49]),
        .I2(mgt_rxdata[50]),
        .I3(mgt_rxdata[51]),
        .I4(mgt_rxdata[54]),
        .I5(mgt_rxdata[53]),
        .O(\got_align[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \got_align[1]_i_7 
       (.I0(mgt_rxdata[6]),
        .I1(mgt_rxdata[7]),
        .I2(mgt_rxdata[8]),
        .I3(mgt_rxdata[9]),
        .I4(mgt_rxdata[12]),
        .I5(mgt_rxdata[11]),
        .O(\got_align[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \got_align[1]_i_8 
       (.I0(mgt_rxdata[20]),
        .I1(mgt_rxdata[21]),
        .I2(mgt_rxdata[22]),
        .I3(mgt_rxdata[23]),
        .I4(mgt_rxdata[26]),
        .I5(mgt_rxdata[25]),
        .O(\got_align[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \got_align[1]_i_9 
       (.I0(mgt_rxdata[34]),
        .I1(mgt_rxdata[35]),
        .I2(mgt_rxdata[36]),
        .I3(mgt_rxdata[37]),
        .I4(mgt_rxdata[40]),
        .I5(mgt_rxdata[39]),
        .O(\got_align[1]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \got_align_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_7_out[0]),
        .Q(\got_align_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \got_align_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_7_out[1]),
        .Q(got_align),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \rxd_out[63]_i_1 
       (.I0(align_status_reg_0),
        .O(local_fault));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[1][0]_i_1 
       (.I0(next_state__0[0]),
        .I1(sync_status),
        .I2(usrclk_reset),
        .O(\state[1][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA285A2858A85AA85)) 
    \state[1][0]_i_2__0 
       (.I0(\state[1][1]_i_2__0_n_0 ),
        .I1(\state[1][1]_i_4__0_n_0 ),
        .I2(deskew_error),
        .I3(got_align),
        .I4(sync_status),
        .I5(\state[1][2]_i_3_n_0 ),
        .O(next_state__0[0]));
  LUT6 #(
    .INIT(64'h000000000CD30231)) 
    \state[1][1]_i_1 
       (.I0(got_align),
        .I1(deskew_error),
        .I2(\state[1][1]_i_2__0_n_0 ),
        .I3(\state[1][1]_i_3__0_n_0 ),
        .I4(\state[1][1]_i_4__0_n_0 ),
        .I5(\state[1][1]_i_5__0_n_0 ),
        .O(\state[1][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCC9BFD99FFFFFFFF)) 
    \state[1][1]_i_2__0 
       (.I0(\got_align_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\deskew_error_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1][2] ),
        .I5(sync_status),
        .O(\state[1][1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hD7D76B33FFFFFFFF)) 
    \state[1][1]_i_3__0 
       (.I0(\state_reg_n_0_[1][2] ),
        .I1(\state_reg_n_0_[1][1] ),
        .I2(\state_reg_n_0_[1][0] ),
        .I3(\got_align_reg_n_0_[0] ),
        .I4(\deskew_error_reg_n_0_[0] ),
        .I5(sync_status),
        .O(\state[1][1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0A88888808888888)) 
    \state[1][1]_i_4__0 
       (.I0(sync_status),
        .I1(\state_reg_n_0_[1][2] ),
        .I2(\deskew_error_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\got_align_reg_n_0_[0] ),
        .O(\state[1][1]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \state[1][1]_i_5__0 
       (.I0(usrclk_reset),
        .I1(sync_status),
        .O(\state[1][1]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \state[1][2]_i_1 
       (.I0(next_state__0[2]),
        .I1(sync_status),
        .I2(usrclk_reset),
        .O(\state[1][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA32AA22)) 
    \state[1][2]_i_2__0 
       (.I0(\state[1][1]_i_4__0_n_0 ),
        .I1(deskew_error),
        .I2(got_align),
        .I3(\state[1][1]_i_2__0_n_0 ),
        .I4(sync_status),
        .I5(\state[1][2]_i_3_n_0 ),
        .O(next_state__0[2]));
  LUT5 #(
    .INIT(32'hA45FEABF)) 
    \state[1][2]_i_3 
       (.I0(\deskew_error_reg_n_0_[0] ),
        .I1(\got_align_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1][0] ),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][2] ),
        .O(\state[1][2]_i_3_n_0 ));
  FDRE \state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[1][0]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[1][1]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[1][2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1][2] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_is_idle_pipe[0]_i_2 
       (.I0(mgt_rxdata[0]),
        .I1(mgt_rxdata[1]),
        .O(\mgt_rxdata_reg_reg[0] ));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_is_idle_pipe[1]_i_2 
       (.I0(mgt_rxdata[14]),
        .I1(mgt_rxdata[15]),
        .O(\mgt_rxdata_reg_reg[16] ));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_is_idle_pipe[2]_i_2 
       (.I0(mgt_rxdata[28]),
        .I1(mgt_rxdata[29]),
        .O(\mgt_rxdata_reg_reg[32] ));
  LUT2 #(
    .INIT(4'hE)) 
    \tx_is_idle_pipe[3]_i_2 
       (.I0(mgt_rxdata[42]),
        .I1(mgt_rxdata[43]),
        .O(\mgt_rxdata_reg_reg[48] ));
endmodule

module xaui_0_k_r_prbs
   (Q,
    usrclk_reset,
    usrclk);
  output [1:0]Q;
  input usrclk_reset;
  input usrclk;

  wire [1:0]Q;
  wire p_0_in;
  wire [1:0]p_2_out;
  wire \prbs_reg_n_0_[1] ;
  wire \prbs_reg_n_0_[2] ;
  wire \prbs_reg_n_0_[3] ;
  wire \prbs_reg_n_0_[4] ;
  wire \prbs_reg_n_0_[5] ;
  wire usrclk;
  wire usrclk_reset;

  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prbs[1]_i_1 
       (.I0(\prbs_reg_n_0_[5] ),
        .I1(p_0_in),
        .O(p_2_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prbs[2]_i_1 
       (.I0(Q[0]),
        .I1(p_0_in),
        .O(p_2_out[1]));
  FDSE \prbs_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_2_out[0]),
        .Q(\prbs_reg_n_0_[1] ),
        .S(usrclk_reset));
  FDSE \prbs_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_2_out[1]),
        .Q(\prbs_reg_n_0_[2] ),
        .S(usrclk_reset));
  FDSE \prbs_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\prbs_reg_n_0_[1] ),
        .Q(\prbs_reg_n_0_[3] ),
        .S(usrclk_reset));
  FDSE \prbs_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\prbs_reg_n_0_[2] ),
        .Q(\prbs_reg_n_0_[4] ),
        .S(usrclk_reset));
  FDSE \prbs_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\prbs_reg_n_0_[3] ),
        .Q(\prbs_reg_n_0_[5] ),
        .S(usrclk_reset));
  FDSE \prbs_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\prbs_reg_n_0_[4] ),
        .Q(p_0_in),
        .S(usrclk_reset));
  FDSE \prbs_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\prbs_reg_n_0_[5] ),
        .Q(Q[0]),
        .S(usrclk_reset));
  FDSE \prbs_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(Q[1]),
        .S(usrclk_reset));
endmodule

module xaui_0_rx
   (mgt_enchansync,
    align_status_int,
    xgmii_rxc,
    mgt_enable_align,
    xgmii_rxd,
    sync,
    usrclk,
    Q,
    usrclk_reset,
    mgt_rxlock,
    mgt_rx_reset,
    mgt_rxdata,
    mgt_rxcharisk,
    mgt_codecomma,
    mgt_codevalid);
  output mgt_enchansync;
  output align_status_int;
  output [7:0]xgmii_rxc;
  output [3:0]mgt_enable_align;
  output [63:0]xgmii_rxd;
  output [3:0]sync;
  input usrclk;
  input [3:0]Q;
  input usrclk_reset;
  input [0:0]mgt_rxlock;
  input [3:0]mgt_rx_reset;
  input [63:0]mgt_rxdata;
  input [7:0]mgt_rxcharisk;
  input [7:0]mgt_codecomma;
  input [7:0]mgt_codevalid;

  wire \G_PCS_SYNC_STATE[0].pcs_sync_state_n_1 ;
  wire \G_PCS_SYNC_STATE[1].pcs_sync_state_n_1 ;
  wire \G_PCS_SYNC_STATE[2].pcs_sync_state_n_1 ;
  wire \G_PCS_SYNC_STATE[3].pcs_sync_state_n_1 ;
  wire [3:0]Q;
  wire align_status_int;
  wire deskew_state_n_2;
  wire deskew_state_n_3;
  wire deskew_state_n_4;
  wire deskew_state_n_5;
  wire local_fault;
  wire [7:0]mgt_codecomma;
  wire [7:0]mgt_codevalid;
  wire [3:0]mgt_enable_align;
  wire mgt_enchansync;
  wire [3:0]mgt_rx_reset;
  wire [7:0]mgt_rxcharisk;
  wire [63:0]mgt_rxdata;
  wire [0:0]mgt_rxlock;
  wire recoder_n_10;
  wire recoder_n_11;
  wire recoder_n_8;
  wire recoder_n_9;
  wire [3:0]sync;
  wire [3:0]sync_ok_int;
  wire sync_status;
  wire usrclk;
  wire usrclk_reset;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;

  xaui_0_sync_state_machine \G_PCS_SYNC_STATE[0].pcs_sync_state 
       (.D(sync_ok_int[0]),
        .\FSM_sequential_state_reg[1][4]_0 (\G_PCS_SYNC_STATE[0].pcs_sync_state_n_1 ),
        .Q(Q[0]),
        .mgt_codecomma(mgt_codecomma[1:0]),
        .mgt_codevalid(mgt_codevalid[1:0]),
        .mgt_enable_align(mgt_enable_align[0]),
        .mgt_rx_reset(mgt_rx_reset[0]),
        .mgt_rxlock(mgt_rxlock),
        .sync_status_reg(\G_PCS_SYNC_STATE[3].pcs_sync_state_n_1 ),
        .sync_status_reg_0(\G_PCS_SYNC_STATE[1].pcs_sync_state_n_1 ),
        .sync_status_reg_1(\G_PCS_SYNC_STATE[2].pcs_sync_state_n_1 ),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_sync_state_machine_79 \G_PCS_SYNC_STATE[1].pcs_sync_state 
       (.D(sync_ok_int[1]),
        .\FSM_sequential_state_reg[1][4]_0 (\G_PCS_SYNC_STATE[1].pcs_sync_state_n_1 ),
        .Q(Q[1]),
        .mgt_codecomma(mgt_codecomma[3:2]),
        .mgt_codevalid(mgt_codevalid[3:2]),
        .mgt_enable_align(mgt_enable_align[1]),
        .mgt_rx_reset(mgt_rx_reset[1]),
        .mgt_rxlock(mgt_rxlock),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_sync_state_machine_80 \G_PCS_SYNC_STATE[2].pcs_sync_state 
       (.D(sync_ok_int[2]),
        .\FSM_sequential_state_reg[1][4]_0 (\G_PCS_SYNC_STATE[2].pcs_sync_state_n_1 ),
        .Q(Q[2]),
        .mgt_codecomma(mgt_codecomma[5:4]),
        .mgt_codevalid(mgt_codevalid[5:4]),
        .mgt_enable_align(mgt_enable_align[2]),
        .mgt_rx_reset(mgt_rx_reset[2]),
        .mgt_rxlock(mgt_rxlock),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_sync_state_machine_81 \G_PCS_SYNC_STATE[3].pcs_sync_state 
       (.D(sync_ok_int[3]),
        .\FSM_sequential_state_reg[1][4]_0 (\G_PCS_SYNC_STATE[3].pcs_sync_state_n_1 ),
        .Q(Q[3]),
        .mgt_codecomma(mgt_codecomma[7:6]),
        .mgt_codevalid(mgt_codevalid[7:6]),
        .mgt_enable_align(mgt_enable_align[3]),
        .mgt_rx_reset(mgt_rx_reset[3]),
        .mgt_rxlock(mgt_rxlock),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_deskew_state_machine deskew_state
       (.align_status_reg_0(align_status_int),
        .\got_align_reg[0]_0 (recoder_n_8),
        .\got_align_reg[0]_1 (recoder_n_9),
        .\got_align_reg[0]_2 (recoder_n_10),
        .\got_align_reg[0]_3 (recoder_n_11),
        .local_fault(local_fault),
        .mgt_codevalid(mgt_codevalid),
        .mgt_enchansync(mgt_enchansync),
        .mgt_rxcharisk({mgt_rxcharisk[7],mgt_rxcharisk[5],mgt_rxcharisk[3],mgt_rxcharisk[1]}),
        .mgt_rxdata({mgt_rxdata[63:52],mgt_rxdata[49:36],mgt_rxdata[33:20],mgt_rxdata[17:4],mgt_rxdata[1:0]}),
        .\mgt_rxdata_reg_reg[0] (deskew_state_n_5),
        .\mgt_rxdata_reg_reg[16] (deskew_state_n_3),
        .\mgt_rxdata_reg_reg[32] (deskew_state_n_2),
        .\mgt_rxdata_reg_reg[48] (deskew_state_n_4),
        .sync_status(sync_status),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_rx_recoder recoder
       (.local_fault(local_fault),
        .mgt_codevalid(mgt_codevalid),
        .mgt_rxcharisk(mgt_rxcharisk),
        .\mgt_rxcharisk_reg_reg[0] (recoder_n_11),
        .\mgt_rxcharisk_reg_reg[2] (recoder_n_9),
        .\mgt_rxcharisk_reg_reg[4] (recoder_n_8),
        .\mgt_rxcharisk_reg_reg[6] (recoder_n_10),
        .mgt_rxdata(mgt_rxdata),
        .\rxd_out_reg[8]_0 (align_status_int),
        .\tx_is_idle_pipe_reg[0]_0 (deskew_state_n_5),
        .\tx_is_idle_pipe_reg[1]_0 (deskew_state_n_3),
        .\tx_is_idle_pipe_reg[2]_0 (deskew_state_n_2),
        .\tx_is_idle_pipe_reg[3]_0 (deskew_state_n_4),
        .usrclk(usrclk),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd));
  FDRE \sync_ok_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(sync_ok_int[0]),
        .Q(sync[0]),
        .R(1'b0));
  FDRE \sync_ok_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(sync_ok_int[1]),
        .Q(sync[1]),
        .R(1'b0));
  FDRE \sync_ok_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(sync_ok_int[2]),
        .Q(sync[2]),
        .R(1'b0));
  FDRE \sync_ok_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(sync_ok_int[3]),
        .Q(sync[3]),
        .R(1'b0));
  FDRE sync_status_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(\G_PCS_SYNC_STATE[0].pcs_sync_state_n_1 ),
        .Q(sync_status),
        .R(1'b0));
endmodule

module xaui_0_rx_recoder
   (xgmii_rxc,
    \mgt_rxcharisk_reg_reg[4] ,
    \mgt_rxcharisk_reg_reg[2] ,
    \mgt_rxcharisk_reg_reg[6] ,
    \mgt_rxcharisk_reg_reg[0] ,
    xgmii_rxd,
    local_fault,
    usrclk,
    \rxd_out_reg[8]_0 ,
    mgt_rxdata,
    mgt_rxcharisk,
    \tx_is_idle_pipe_reg[2]_0 ,
    \tx_is_idle_pipe_reg[1]_0 ,
    \tx_is_idle_pipe_reg[3]_0 ,
    \tx_is_idle_pipe_reg[0]_0 ,
    mgt_codevalid);
  output [7:0]xgmii_rxc;
  output \mgt_rxcharisk_reg_reg[4] ;
  output \mgt_rxcharisk_reg_reg[2] ;
  output \mgt_rxcharisk_reg_reg[6] ;
  output \mgt_rxcharisk_reg_reg[0] ;
  output [63:0]xgmii_rxd;
  input local_fault;
  input usrclk;
  input \rxd_out_reg[8]_0 ;
  input [63:0]mgt_rxdata;
  input [7:0]mgt_rxcharisk;
  input \tx_is_idle_pipe_reg[2]_0 ;
  input \tx_is_idle_pipe_reg[1]_0 ;
  input \tx_is_idle_pipe_reg[3]_0 ;
  input \tx_is_idle_pipe_reg[0]_0 ;
  input [7:0]mgt_codevalid;

  wire c11_in;
  wire c149_in;
  wire c3_in;
  wire c68_in;
  wire c71_in;
  wire c74_in;
  wire c7_in;
  wire [7:0]code_error;
  wire [7:0]code_error_delay;
  wire \code_error_pipe[0]_i_2_n_0 ;
  wire \code_error_pipe[0]_i_3_n_0 ;
  wire \code_error_pipe[0]_i_4_n_0 ;
  wire \code_error_pipe[1]_i_2_n_0 ;
  wire \code_error_pipe[1]_i_3_n_0 ;
  wire \code_error_pipe[1]_i_4_n_0 ;
  wire \code_error_pipe[2]_i_2_n_0 ;
  wire \code_error_pipe[2]_i_3_n_0 ;
  wire \code_error_pipe[2]_i_4_n_0 ;
  wire \code_error_pipe[3]_i_2_n_0 ;
  wire \code_error_pipe[3]_i_3_n_0 ;
  wire \code_error_pipe[3]_i_4_n_0 ;
  wire \code_error_pipe[4]_i_2_n_0 ;
  wire \code_error_pipe[4]_i_3_n_0 ;
  wire \code_error_pipe[4]_i_4_n_0 ;
  wire \code_error_pipe[5]_i_2_n_0 ;
  wire \code_error_pipe[5]_i_3_n_0 ;
  wire \code_error_pipe[5]_i_4_n_0 ;
  wire \code_error_pipe[6]_i_2_n_0 ;
  wire \code_error_pipe[6]_i_3_n_0 ;
  wire \code_error_pipe[6]_i_4_n_0 ;
  wire \code_error_pipe[7]_i_2_n_0 ;
  wire \code_error_pipe[7]_i_3_n_0 ;
  wire \code_error_pipe[7]_i_4_n_0 ;
  wire \code_error_pipe_reg_n_0_[4] ;
  wire \code_error_pipe_reg_n_0_[5] ;
  wire \code_error_pipe_reg_n_0_[6] ;
  wire \code_error_pipe_reg_n_0_[7] ;
  wire [7:0]d;
  wire [3:0]lane_term_pipe;
  wire \lane_terminate_temp[4]_i_2_n_0 ;
  wire \lane_terminate_temp[5]_i_2_n_0 ;
  wire \lane_terminate_temp[6]_i_2_n_0 ;
  wire \lane_terminate_temp[7]_i_2_n_0 ;
  wire \lane_terminate_temp_reg_n_0_[2] ;
  wire \lane_terminate_temp_reg_n_0_[3] ;
  wire \lane_terminate_temp_reg_n_0_[4] ;
  wire \lane_terminate_temp_reg_n_0_[5] ;
  wire \lane_terminate_temp_reg_n_0_[6] ;
  wire \lane_terminate_temp_reg_n_0_[7] ;
  wire local_fault;
  wire [7:0]mgt_codevalid;
  wire [7:0]mgt_rxcharisk;
  wire \mgt_rxcharisk_reg_reg[0] ;
  wire \mgt_rxcharisk_reg_reg[2] ;
  wire \mgt_rxcharisk_reg_reg[4] ;
  wire \mgt_rxcharisk_reg_reg[6] ;
  wire [63:0]mgt_rxdata;
  wire p_0_in;
  wire p_0_in0_in;
  wire [3:0]p_0_out;
  wire [3:0]p_15_out;
  wire [7:0]p_21_out;
  wire p_2_in;
  wire p_2_in_0;
  wire p_4_in;
  wire p_4_in54_in;
  wire p_6_in;
  wire \rxc_out[0]_i_1_n_0 ;
  wire \rxc_out[1]_i_1_n_0 ;
  wire \rxc_out[2]_i_1_n_0 ;
  wire \rxc_out[3]_i_1_n_0 ;
  wire \rxc_out[4]_i_1_n_0 ;
  wire \rxc_out[5]_i_1_n_0 ;
  wire \rxc_out[6]_i_1_n_0 ;
  wire \rxc_out[7]_i_1_n_0 ;
  wire \rxc_pipe_reg_n_0_[0] ;
  wire [31:0]rxd_half_pipe;
  wire \rxd_out[0]_i_1_n_0 ;
  wire \rxd_out[10]_i_1_n_0 ;
  wire \rxd_out[11]_i_1_n_0 ;
  wire \rxd_out[12]_i_1_n_0 ;
  wire \rxd_out[13]_i_1_n_0 ;
  wire \rxd_out[14]_i_1_n_0 ;
  wire \rxd_out[15]_i_1_n_0 ;
  wire \rxd_out[15]_i_2_n_0 ;
  wire \rxd_out[15]_i_3_n_0 ;
  wire \rxd_out[15]_i_4_n_0 ;
  wire \rxd_out[15]_i_5_n_0 ;
  wire \rxd_out[16]_i_1_n_0 ;
  wire \rxd_out[17]_i_1_n_0 ;
  wire \rxd_out[18]_i_1_n_0 ;
  wire \rxd_out[19]_i_1_n_0 ;
  wire \rxd_out[1]_i_1_n_0 ;
  wire \rxd_out[20]_i_1_n_0 ;
  wire \rxd_out[21]_i_1_n_0 ;
  wire \rxd_out[22]_i_1_n_0 ;
  wire \rxd_out[23]_i_1_n_0 ;
  wire \rxd_out[23]_i_2_n_0 ;
  wire \rxd_out[23]_i_3_n_0 ;
  wire \rxd_out[23]_i_4_n_0 ;
  wire \rxd_out[23]_i_5_n_0 ;
  wire \rxd_out[23]_i_6_n_0 ;
  wire \rxd_out[24]_i_1_n_0 ;
  wire \rxd_out[25]_i_1_n_0 ;
  wire \rxd_out[26]_i_1_n_0 ;
  wire \rxd_out[27]_i_1_n_0 ;
  wire \rxd_out[28]_i_1_n_0 ;
  wire \rxd_out[29]_i_1_n_0 ;
  wire \rxd_out[2]_i_1_n_0 ;
  wire \rxd_out[30]_i_1_n_0 ;
  wire \rxd_out[31]_i_1_n_0 ;
  wire \rxd_out[31]_i_2_n_0 ;
  wire \rxd_out[31]_i_3_n_0 ;
  wire \rxd_out[31]_i_4_n_0 ;
  wire \rxd_out[32]_i_1_n_0 ;
  wire \rxd_out[33]_i_1_n_0 ;
  wire \rxd_out[34]_i_1_n_0 ;
  wire \rxd_out[35]_i_1_n_0 ;
  wire \rxd_out[36]_i_1_n_0 ;
  wire \rxd_out[37]_i_1_n_0 ;
  wire \rxd_out[38]_i_1_n_0 ;
  wire \rxd_out[38]_i_2_n_0 ;
  wire \rxd_out[38]_i_3_n_0 ;
  wire \rxd_out[39]_i_1_n_0 ;
  wire \rxd_out[39]_i_2_n_0 ;
  wire \rxd_out[39]_i_3_n_0 ;
  wire \rxd_out[39]_i_4_n_0 ;
  wire \rxd_out[3]_i_1_n_0 ;
  wire \rxd_out[40]_i_1_n_0 ;
  wire \rxd_out[41]_i_1_n_0 ;
  wire \rxd_out[42]_i_1_n_0 ;
  wire \rxd_out[43]_i_1_n_0 ;
  wire \rxd_out[44]_i_1_n_0 ;
  wire \rxd_out[45]_i_1_n_0 ;
  wire \rxd_out[46]_i_1_n_0 ;
  wire \rxd_out[47]_i_1_n_0 ;
  wire \rxd_out[47]_i_2_n_0 ;
  wire \rxd_out[47]_i_3_n_0 ;
  wire \rxd_out[47]_i_4_n_0 ;
  wire \rxd_out[47]_i_5_n_0 ;
  wire \rxd_out[48]_i_1_n_0 ;
  wire \rxd_out[49]_i_1_n_0 ;
  wire \rxd_out[4]_i_1_n_0 ;
  wire \rxd_out[50]_i_1_n_0 ;
  wire \rxd_out[51]_i_1_n_0 ;
  wire \rxd_out[52]_i_1_n_0 ;
  wire \rxd_out[53]_i_1_n_0 ;
  wire \rxd_out[54]_i_1_n_0 ;
  wire \rxd_out[55]_i_1_n_0 ;
  wire \rxd_out[55]_i_2_n_0 ;
  wire \rxd_out[55]_i_3_n_0 ;
  wire \rxd_out[55]_i_4_n_0 ;
  wire \rxd_out[55]_i_5_n_0 ;
  wire \rxd_out[55]_i_6_n_0 ;
  wire \rxd_out[56]_i_1_n_0 ;
  wire \rxd_out[57]_i_1_n_0 ;
  wire \rxd_out[58]_i_1_n_0 ;
  wire \rxd_out[59]_i_1_n_0 ;
  wire \rxd_out[5]_i_1_n_0 ;
  wire \rxd_out[60]_i_1_n_0 ;
  wire \rxd_out[61]_i_1_n_0 ;
  wire \rxd_out[62]_i_1_n_0 ;
  wire \rxd_out[63]_i_2_n_0 ;
  wire \rxd_out[63]_i_3_n_0 ;
  wire \rxd_out[63]_i_4_n_0 ;
  wire \rxd_out[63]_i_5_n_0 ;
  wire \rxd_out[6]_i_1_n_0 ;
  wire \rxd_out[6]_i_2_n_0 ;
  wire \rxd_out[7]_i_1_n_0 ;
  wire \rxd_out[7]_i_2_n_0 ;
  wire \rxd_out[7]_i_3_n_0 ;
  wire \rxd_out[7]_i_4_n_0 ;
  wire \rxd_out[7]_i_5_n_0 ;
  wire \rxd_out[8]_i_1_n_0 ;
  wire \rxd_out[9]_i_1_n_0 ;
  wire \rxd_out_reg[8]_0 ;
  wire \rxd_pipe_reg_n_0_[0] ;
  wire \rxd_pipe_reg_n_0_[10] ;
  wire \rxd_pipe_reg_n_0_[11] ;
  wire \rxd_pipe_reg_n_0_[12] ;
  wire \rxd_pipe_reg_n_0_[13] ;
  wire \rxd_pipe_reg_n_0_[14] ;
  wire \rxd_pipe_reg_n_0_[15] ;
  wire \rxd_pipe_reg_n_0_[16] ;
  wire \rxd_pipe_reg_n_0_[17] ;
  wire \rxd_pipe_reg_n_0_[18] ;
  wire \rxd_pipe_reg_n_0_[19] ;
  wire \rxd_pipe_reg_n_0_[1] ;
  wire \rxd_pipe_reg_n_0_[20] ;
  wire \rxd_pipe_reg_n_0_[21] ;
  wire \rxd_pipe_reg_n_0_[22] ;
  wire \rxd_pipe_reg_n_0_[23] ;
  wire \rxd_pipe_reg_n_0_[24] ;
  wire \rxd_pipe_reg_n_0_[25] ;
  wire \rxd_pipe_reg_n_0_[26] ;
  wire \rxd_pipe_reg_n_0_[27] ;
  wire \rxd_pipe_reg_n_0_[28] ;
  wire \rxd_pipe_reg_n_0_[29] ;
  wire \rxd_pipe_reg_n_0_[2] ;
  wire \rxd_pipe_reg_n_0_[30] ;
  wire \rxd_pipe_reg_n_0_[31] ;
  wire \rxd_pipe_reg_n_0_[3] ;
  wire \rxd_pipe_reg_n_0_[40] ;
  wire \rxd_pipe_reg_n_0_[41] ;
  wire \rxd_pipe_reg_n_0_[42] ;
  wire \rxd_pipe_reg_n_0_[43] ;
  wire \rxd_pipe_reg_n_0_[44] ;
  wire \rxd_pipe_reg_n_0_[45] ;
  wire \rxd_pipe_reg_n_0_[46] ;
  wire \rxd_pipe_reg_n_0_[47] ;
  wire \rxd_pipe_reg_n_0_[48] ;
  wire \rxd_pipe_reg_n_0_[49] ;
  wire \rxd_pipe_reg_n_0_[4] ;
  wire \rxd_pipe_reg_n_0_[50] ;
  wire \rxd_pipe_reg_n_0_[51] ;
  wire \rxd_pipe_reg_n_0_[52] ;
  wire \rxd_pipe_reg_n_0_[53] ;
  wire \rxd_pipe_reg_n_0_[54] ;
  wire \rxd_pipe_reg_n_0_[55] ;
  wire \rxd_pipe_reg_n_0_[56] ;
  wire \rxd_pipe_reg_n_0_[57] ;
  wire \rxd_pipe_reg_n_0_[58] ;
  wire \rxd_pipe_reg_n_0_[59] ;
  wire \rxd_pipe_reg_n_0_[5] ;
  wire \rxd_pipe_reg_n_0_[60] ;
  wire \rxd_pipe_reg_n_0_[61] ;
  wire \rxd_pipe_reg_n_0_[62] ;
  wire \rxd_pipe_reg_n_0_[63] ;
  wire \rxd_pipe_reg_n_0_[6] ;
  wire \rxd_pipe_reg_n_0_[7] ;
  wire \rxd_pipe_reg_n_0_[8] ;
  wire \rxd_pipe_reg_n_0_[9] ;
  wire \tx_is_idle_half_pipe[0]_i_2_n_0 ;
  wire \tx_is_idle_half_pipe[1]_i_2_n_0 ;
  wire \tx_is_idle_half_pipe[1]_i_3_n_0 ;
  wire \tx_is_idle_half_pipe[1]_i_4_n_0 ;
  wire \tx_is_idle_half_pipe[2]_i_2_n_0 ;
  wire \tx_is_idle_half_pipe[2]_i_3_n_0 ;
  wire \tx_is_idle_half_pipe[2]_i_4_n_0 ;
  wire \tx_is_idle_half_pipe[3]_i_2_n_0 ;
  wire \tx_is_idle_half_pipe[3]_i_3_n_0 ;
  wire \tx_is_idle_half_pipe_reg_n_0_[0] ;
  wire \tx_is_idle_pipe[0]_i_1_n_0 ;
  wire \tx_is_idle_pipe[1]_i_1_n_0 ;
  wire \tx_is_idle_pipe[2]_i_1_n_0 ;
  wire \tx_is_idle_pipe[3]_i_1_n_0 ;
  wire \tx_is_idle_pipe_reg[0]_0 ;
  wire \tx_is_idle_pipe_reg[1]_0 ;
  wire \tx_is_idle_pipe_reg[2]_0 ;
  wire \tx_is_idle_pipe_reg[3]_0 ;
  wire \tx_is_idle_pipe_reg_n_0_[0] ;
  wire \tx_is_idle_pipe_reg_n_0_[3] ;
  wire usrclk;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;

  FDRE #(
    .INIT(1'b0)) 
    \code_error_delay_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\code_error_pipe_reg_n_0_[4] ),
        .Q(code_error_delay[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_delay_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\code_error_pipe_reg_n_0_[5] ),
        .Q(code_error_delay[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_delay_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\code_error_pipe_reg_n_0_[6] ),
        .Q(code_error_delay[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_delay_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\code_error_pipe_reg_n_0_[7] ),
        .Q(code_error_delay[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[0]_i_1 
       (.I0(\code_error_pipe[0]_i_2_n_0 ),
        .I1(mgt_rxcharisk[0]),
        .I2(mgt_rxdata[0]),
        .I3(mgt_rxdata[1]),
        .I4(\code_error_pipe[0]_i_3_n_0 ),
        .I5(\code_error_pipe[0]_i_4_n_0 ),
        .O(code_error[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[0]_i_2 
       (.I0(mgt_codevalid[0]),
        .I1(mgt_rxdata[4]),
        .I2(mgt_rxcharisk[0]),
        .I3(mgt_rxdata[2]),
        .I4(mgt_rxdata[3]),
        .O(\code_error_pipe[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[0]_i_3 
       (.I0(mgt_rxdata[5]),
        .I1(mgt_rxdata[6]),
        .I2(mgt_rxdata[7]),
        .O(\code_error_pipe[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[0]_i_4 
       (.I0(mgt_rxdata[2]),
        .I1(mgt_rxdata[3]),
        .O(\code_error_pipe[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[1]_i_1 
       (.I0(\code_error_pipe[1]_i_2_n_0 ),
        .I1(mgt_rxcharisk[2]),
        .I2(mgt_rxdata[16]),
        .I3(mgt_rxdata[17]),
        .I4(\code_error_pipe[1]_i_3_n_0 ),
        .I5(\code_error_pipe[1]_i_4_n_0 ),
        .O(code_error[1]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[1]_i_2 
       (.I0(mgt_codevalid[2]),
        .I1(mgt_rxdata[20]),
        .I2(mgt_rxcharisk[2]),
        .I3(mgt_rxdata[18]),
        .I4(mgt_rxdata[19]),
        .O(\code_error_pipe[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[1]_i_3 
       (.I0(mgt_rxdata[21]),
        .I1(mgt_rxdata[22]),
        .I2(mgt_rxdata[23]),
        .O(\code_error_pipe[1]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[1]_i_4 
       (.I0(mgt_rxdata[18]),
        .I1(mgt_rxdata[19]),
        .O(\code_error_pipe[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[2]_i_1 
       (.I0(\code_error_pipe[2]_i_2_n_0 ),
        .I1(mgt_rxcharisk[4]),
        .I2(mgt_rxdata[32]),
        .I3(mgt_rxdata[33]),
        .I4(\code_error_pipe[2]_i_3_n_0 ),
        .I5(\code_error_pipe[2]_i_4_n_0 ),
        .O(code_error[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[2]_i_2 
       (.I0(mgt_codevalid[4]),
        .I1(mgt_rxdata[36]),
        .I2(mgt_rxcharisk[4]),
        .I3(mgt_rxdata[34]),
        .I4(mgt_rxdata[35]),
        .O(\code_error_pipe[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[2]_i_3 
       (.I0(mgt_rxdata[37]),
        .I1(mgt_rxdata[38]),
        .I2(mgt_rxdata[39]),
        .O(\code_error_pipe[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[2]_i_4 
       (.I0(mgt_rxdata[35]),
        .I1(mgt_rxdata[34]),
        .O(\code_error_pipe[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[3]_i_1 
       (.I0(\code_error_pipe[3]_i_2_n_0 ),
        .I1(mgt_rxcharisk[6]),
        .I2(mgt_rxdata[48]),
        .I3(mgt_rxdata[49]),
        .I4(\code_error_pipe[3]_i_3_n_0 ),
        .I5(\code_error_pipe[3]_i_4_n_0 ),
        .O(code_error[3]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[3]_i_2 
       (.I0(mgt_codevalid[6]),
        .I1(mgt_rxdata[52]),
        .I2(mgt_rxcharisk[6]),
        .I3(mgt_rxdata[50]),
        .I4(mgt_rxdata[51]),
        .O(\code_error_pipe[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[3]_i_3 
       (.I0(mgt_rxdata[53]),
        .I1(mgt_rxdata[54]),
        .I2(mgt_rxdata[55]),
        .O(\code_error_pipe[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[3]_i_4 
       (.I0(mgt_rxdata[51]),
        .I1(mgt_rxdata[50]),
        .O(\code_error_pipe[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[4]_i_1 
       (.I0(\code_error_pipe[4]_i_2_n_0 ),
        .I1(mgt_rxcharisk[1]),
        .I2(mgt_rxdata[8]),
        .I3(mgt_rxdata[9]),
        .I4(\code_error_pipe[4]_i_3_n_0 ),
        .I5(\code_error_pipe[4]_i_4_n_0 ),
        .O(code_error[4]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[4]_i_2 
       (.I0(mgt_codevalid[1]),
        .I1(mgt_rxdata[12]),
        .I2(mgt_rxcharisk[1]),
        .I3(mgt_rxdata[10]),
        .I4(mgt_rxdata[11]),
        .O(\code_error_pipe[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[4]_i_3 
       (.I0(mgt_rxdata[14]),
        .I1(mgt_rxdata[13]),
        .I2(mgt_rxdata[15]),
        .O(\code_error_pipe[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[4]_i_4 
       (.I0(mgt_rxdata[10]),
        .I1(mgt_rxdata[11]),
        .O(\code_error_pipe[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[5]_i_1 
       (.I0(\code_error_pipe[5]_i_2_n_0 ),
        .I1(mgt_rxcharisk[3]),
        .I2(mgt_rxdata[24]),
        .I3(mgt_rxdata[25]),
        .I4(\code_error_pipe[5]_i_3_n_0 ),
        .I5(\code_error_pipe[5]_i_4_n_0 ),
        .O(code_error[5]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[5]_i_2 
       (.I0(mgt_codevalid[3]),
        .I1(mgt_rxdata[28]),
        .I2(mgt_rxcharisk[3]),
        .I3(mgt_rxdata[26]),
        .I4(mgt_rxdata[27]),
        .O(\code_error_pipe[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[5]_i_3 
       (.I0(mgt_rxdata[30]),
        .I1(mgt_rxdata[29]),
        .I2(mgt_rxdata[31]),
        .O(\code_error_pipe[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[5]_i_4 
       (.I0(mgt_rxdata[26]),
        .I1(mgt_rxdata[27]),
        .O(\code_error_pipe[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[6]_i_1 
       (.I0(\code_error_pipe[6]_i_2_n_0 ),
        .I1(mgt_rxcharisk[5]),
        .I2(mgt_rxdata[40]),
        .I3(mgt_rxdata[41]),
        .I4(\code_error_pipe[6]_i_3_n_0 ),
        .I5(\code_error_pipe[6]_i_4_n_0 ),
        .O(code_error[6]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[6]_i_2 
       (.I0(mgt_codevalid[5]),
        .I1(mgt_rxdata[44]),
        .I2(mgt_rxcharisk[5]),
        .I3(mgt_rxdata[42]),
        .I4(mgt_rxdata[43]),
        .O(\code_error_pipe[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[6]_i_3 
       (.I0(mgt_rxdata[46]),
        .I1(mgt_rxdata[45]),
        .I2(mgt_rxdata[47]),
        .O(\code_error_pipe[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[6]_i_4 
       (.I0(mgt_rxdata[42]),
        .I1(mgt_rxdata[43]),
        .O(\code_error_pipe[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEAEEEEEEAEAAA)) 
    \code_error_pipe[7]_i_1 
       (.I0(\code_error_pipe[7]_i_2_n_0 ),
        .I1(mgt_rxcharisk[7]),
        .I2(mgt_rxdata[56]),
        .I3(mgt_rxdata[57]),
        .I4(\code_error_pipe[7]_i_3_n_0 ),
        .I5(\code_error_pipe[7]_i_4_n_0 ),
        .O(code_error[7]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h757575F5)) 
    \code_error_pipe[7]_i_2 
       (.I0(mgt_codevalid[7]),
        .I1(mgt_rxdata[60]),
        .I2(mgt_rxcharisk[7]),
        .I3(mgt_rxdata[58]),
        .I4(mgt_rxdata[59]),
        .O(\code_error_pipe[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \code_error_pipe[7]_i_3 
       (.I0(mgt_rxdata[62]),
        .I1(mgt_rxdata[61]),
        .I2(mgt_rxdata[63]),
        .O(\code_error_pipe[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \code_error_pipe[7]_i_4 
       (.I0(mgt_rxdata[58]),
        .I1(mgt_rxdata[59]),
        .O(\code_error_pipe[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[0]),
        .Q(code_error_delay[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[1]),
        .Q(code_error_delay[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[2]),
        .Q(code_error_delay[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[3]),
        .Q(code_error_delay[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[4]),
        .Q(\code_error_pipe_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[5]),
        .Q(\code_error_pipe_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[6]),
        .Q(\code_error_pipe_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_error_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(code_error[7]),
        .Q(\code_error_pipe_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_term_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\lane_terminate_temp_reg_n_0_[4] ),
        .Q(lane_term_pipe[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_term_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\lane_terminate_temp_reg_n_0_[5] ),
        .Q(lane_term_pipe[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_term_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\lane_terminate_temp_reg_n_0_[6] ),
        .Q(lane_term_pipe[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_term_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\lane_terminate_temp_reg_n_0_[7] ),
        .Q(lane_term_pipe[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \lane_terminate_temp[0]_i_1 
       (.I0(\code_error_pipe[0]_i_3_n_0 ),
        .I1(mgt_rxdata[0]),
        .I2(mgt_rxdata[4]),
        .I3(mgt_rxdata[1]),
        .I4(\mgt_rxcharisk_reg_reg[0] ),
        .I5(code_error[0]),
        .O(p_21_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \lane_terminate_temp[0]_i_2 
       (.I0(mgt_rxcharisk[0]),
        .I1(mgt_rxdata[3]),
        .I2(mgt_rxdata[2]),
        .O(\mgt_rxcharisk_reg_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \lane_terminate_temp[1]_i_1 
       (.I0(\code_error_pipe[1]_i_3_n_0 ),
        .I1(mgt_rxdata[16]),
        .I2(mgt_rxdata[20]),
        .I3(mgt_rxdata[17]),
        .I4(\mgt_rxcharisk_reg_reg[2] ),
        .I5(code_error[1]),
        .O(p_21_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \lane_terminate_temp[1]_i_2 
       (.I0(mgt_rxcharisk[2]),
        .I1(mgt_rxdata[19]),
        .I2(mgt_rxdata[18]),
        .O(\mgt_rxcharisk_reg_reg[2] ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \lane_terminate_temp[2]_i_1 
       (.I0(\code_error_pipe[2]_i_3_n_0 ),
        .I1(mgt_rxdata[32]),
        .I2(mgt_rxdata[36]),
        .I3(mgt_rxdata[33]),
        .I4(\mgt_rxcharisk_reg_reg[4] ),
        .I5(code_error[2]),
        .O(p_21_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \lane_terminate_temp[2]_i_2 
       (.I0(mgt_rxcharisk[4]),
        .I1(mgt_rxdata[34]),
        .I2(mgt_rxdata[35]),
        .O(\mgt_rxcharisk_reg_reg[4] ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \lane_terminate_temp[3]_i_1 
       (.I0(\code_error_pipe[3]_i_3_n_0 ),
        .I1(mgt_rxdata[48]),
        .I2(mgt_rxdata[52]),
        .I3(mgt_rxdata[49]),
        .I4(\mgt_rxcharisk_reg_reg[6] ),
        .I5(code_error[3]),
        .O(p_21_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \lane_terminate_temp[3]_i_2 
       (.I0(mgt_rxcharisk[6]),
        .I1(mgt_rxdata[50]),
        .I2(mgt_rxdata[51]),
        .O(\mgt_rxcharisk_reg_reg[6] ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \lane_terminate_temp[4]_i_1 
       (.I0(mgt_rxdata[14]),
        .I1(mgt_rxdata[13]),
        .I2(mgt_rxdata[15]),
        .I3(\lane_terminate_temp[4]_i_2_n_0 ),
        .I4(code_error[4]),
        .O(p_21_out[4]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \lane_terminate_temp[4]_i_2 
       (.I0(mgt_rxdata[12]),
        .I1(mgt_rxdata[9]),
        .I2(mgt_rxcharisk[1]),
        .I3(mgt_rxdata[8]),
        .I4(mgt_rxdata[11]),
        .I5(mgt_rxdata[10]),
        .O(\lane_terminate_temp[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \lane_terminate_temp[5]_i_1 
       (.I0(mgt_rxdata[30]),
        .I1(mgt_rxdata[29]),
        .I2(mgt_rxdata[31]),
        .I3(\lane_terminate_temp[5]_i_2_n_0 ),
        .I4(code_error[5]),
        .O(p_21_out[5]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \lane_terminate_temp[5]_i_2 
       (.I0(mgt_rxdata[28]),
        .I1(mgt_rxdata[25]),
        .I2(mgt_rxcharisk[3]),
        .I3(mgt_rxdata[24]),
        .I4(mgt_rxdata[27]),
        .I5(mgt_rxdata[26]),
        .O(\lane_terminate_temp[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \lane_terminate_temp[6]_i_1 
       (.I0(mgt_rxdata[46]),
        .I1(mgt_rxdata[45]),
        .I2(mgt_rxdata[47]),
        .I3(\lane_terminate_temp[6]_i_2_n_0 ),
        .I4(code_error[6]),
        .O(p_21_out[6]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \lane_terminate_temp[6]_i_2 
       (.I0(mgt_rxdata[44]),
        .I1(mgt_rxdata[41]),
        .I2(mgt_rxcharisk[5]),
        .I3(mgt_rxdata[40]),
        .I4(mgt_rxdata[43]),
        .I5(mgt_rxdata[42]),
        .O(\lane_terminate_temp[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \lane_terminate_temp[7]_i_1 
       (.I0(mgt_rxdata[62]),
        .I1(mgt_rxdata[61]),
        .I2(mgt_rxdata[63]),
        .I3(\lane_terminate_temp[7]_i_2_n_0 ),
        .I4(code_error[7]),
        .O(p_21_out[7]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \lane_terminate_temp[7]_i_2 
       (.I0(mgt_rxdata[60]),
        .I1(mgt_rxdata[57]),
        .I2(mgt_rxcharisk[7]),
        .I3(mgt_rxdata[56]),
        .I4(mgt_rxdata[59]),
        .I5(mgt_rxdata[58]),
        .O(\lane_terminate_temp[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[0]),
        .Q(p_4_in54_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[1]),
        .Q(p_2_in_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[2]),
        .Q(\lane_terminate_temp_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[3]),
        .Q(\lane_terminate_temp_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[4]),
        .Q(\lane_terminate_temp_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[5]),
        .Q(\lane_terminate_temp_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[6]),
        .Q(\lane_terminate_temp_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_terminate_temp_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_21_out[7]),
        .Q(\lane_terminate_temp_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxc_half_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c149_in),
        .Q(p_0_out[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_half_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c3_in),
        .Q(p_0_out[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_half_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c7_in),
        .Q(p_0_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_half_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c11_in),
        .Q(p_0_out[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \rxc_out[0]_i_1 
       (.I0(p_0_out[0]),
        .I1(\rxd_out[7]_i_2_n_0 ),
        .I2(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .O(\rxc_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxc_out[1]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_0_out[1]),
        .I3(p_2_in),
        .O(\rxc_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxc_out[2]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_0_out[2]),
        .I3(p_4_in),
        .O(\rxc_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxc_out[3]_i_1 
       (.I0(p_0_out[3]),
        .I1(\rxd_out[31]_i_2_n_0 ),
        .I2(p_6_in),
        .O(\rxc_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \rxc_out[4]_i_1 
       (.I0(\rxc_pipe_reg_n_0_[0] ),
        .I1(\rxd_out[39]_i_2_n_0 ),
        .I2(\tx_is_idle_pipe_reg_n_0_[0] ),
        .O(\rxc_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxc_out[5]_i_1 
       (.I0(c74_in),
        .I1(\rxd_out[47]_i_2_n_0 ),
        .I2(p_0_in),
        .O(\rxc_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxc_out[6]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_out[55]_i_2_n_0 ),
        .I2(c71_in),
        .O(\rxc_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxc_out[7]_i_1 
       (.I0(c68_in),
        .I1(\rxd_out[63]_i_3_n_0 ),
        .I2(\tx_is_idle_pipe_reg_n_0_[3] ),
        .O(\rxc_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \rxc_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[0]_i_1_n_0 ),
        .Q(xgmii_rxc[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[1]_i_1_n_0 ),
        .Q(xgmii_rxc[1]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[2]_i_1_n_0 ),
        .Q(xgmii_rxc[2]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[3]_i_1_n_0 ),
        .Q(xgmii_rxc[3]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxc_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[4]_i_1_n_0 ),
        .Q(xgmii_rxc[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[5]_i_1_n_0 ),
        .Q(xgmii_rxc[5]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[6]_i_1_n_0 ),
        .Q(xgmii_rxc[6]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxc_out[7]_i_1_n_0 ),
        .Q(xgmii_rxc[7]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxc_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[0]),
        .Q(\rxc_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[2]),
        .Q(c74_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[4]),
        .Q(c71_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[6]),
        .Q(c68_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxc_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[1]),
        .Q(c149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[3]),
        .Q(c3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[5]),
        .Q(c7_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxc_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxcharisk[7]),
        .Q(c11_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[0]),
        .Q(rxd_half_pipe[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[42] ),
        .Q(rxd_half_pipe[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[43] ),
        .Q(rxd_half_pipe[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[44] ),
        .Q(rxd_half_pipe[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[45] ),
        .Q(rxd_half_pipe[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[46] ),
        .Q(rxd_half_pipe[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[47] ),
        .Q(rxd_half_pipe[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[48] ),
        .Q(rxd_half_pipe[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[49] ),
        .Q(rxd_half_pipe[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[50] ),
        .Q(rxd_half_pipe[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[51] ),
        .Q(rxd_half_pipe[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[1]),
        .Q(rxd_half_pipe[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[52] ),
        .Q(rxd_half_pipe[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[53] ),
        .Q(rxd_half_pipe[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[54] ),
        .Q(rxd_half_pipe[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[55] ),
        .Q(rxd_half_pipe[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_half_pipe_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[56] ),
        .Q(rxd_half_pipe[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[57] ),
        .Q(rxd_half_pipe[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[58] ),
        .Q(rxd_half_pipe[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[59] ),
        .Q(rxd_half_pipe[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[60] ),
        .Q(rxd_half_pipe[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[61] ),
        .Q(rxd_half_pipe[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_half_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[2]),
        .Q(rxd_half_pipe[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[62] ),
        .Q(rxd_half_pipe[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[63] ),
        .Q(rxd_half_pipe[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_half_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[3]),
        .Q(rxd_half_pipe[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_half_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[4]),
        .Q(rxd_half_pipe[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[5]),
        .Q(rxd_half_pipe[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[6]),
        .Q(rxd_half_pipe[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_half_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[7]),
        .Q(rxd_half_pipe[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[40] ),
        .Q(rxd_half_pipe[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_half_pipe_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_pipe_reg_n_0_[41] ),
        .Q(rxd_half_pipe[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \rxd_out[0]_i_1 
       (.I0(\rxd_out[7]_i_2_n_0 ),
        .I1(rxd_half_pipe[0]),
        .I2(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .O(\rxd_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxd_out[10]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(rxd_half_pipe[10]),
        .I3(p_2_in),
        .O(\rxd_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[11]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_2_in),
        .I3(rxd_half_pipe[11]),
        .O(\rxd_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[12]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_2_in),
        .I3(rxd_half_pipe[12]),
        .O(\rxd_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[13]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_2_in),
        .I3(rxd_half_pipe[13]),
        .O(\rxd_out[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[14]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_2_in),
        .I3(rxd_half_pipe[14]),
        .O(\rxd_out[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[15]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(p_2_in),
        .I3(rxd_half_pipe[15]),
        .O(\rxd_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0300000057755555)) 
    \rxd_out[15]_i_2 
       (.I0(\rxd_out[15]_i_3_n_0 ),
        .I1(\rxd_out[15]_i_4_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[14] ),
        .I3(\rxd_pipe_reg_n_0_[15] ),
        .I4(\rxd_out[15]_i_5_n_0 ),
        .I5(p_4_in54_in),
        .O(\rxd_out[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    \rxd_out[15]_i_3 
       (.I0(lane_term_pipe[1]),
        .I1(lane_term_pipe[0]),
        .I2(lane_term_pipe[2]),
        .I3(lane_term_pipe[3]),
        .O(\rxd_out[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[15]_i_4 
       (.I0(code_error_delay[5]),
        .I1(\rxd_pipe_reg_n_0_[9] ),
        .O(\rxd_out[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \rxd_out[15]_i_5 
       (.I0(\rxd_pipe_reg_n_0_[10] ),
        .I1(\rxd_pipe_reg_n_0_[13] ),
        .I2(\rxd_pipe_reg_n_0_[12] ),
        .I3(\rxd_pipe_reg_n_0_[11] ),
        .I4(c74_in),
        .I5(\rxd_pipe_reg_n_0_[8] ),
        .O(\rxd_out[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h20202000)) 
    \rxd_out[16]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(\rxd_out_reg[8]_0 ),
        .I3(p_4_in),
        .I4(rxd_half_pipe[16]),
        .O(\rxd_out[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxd_out[17]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(rxd_half_pipe[17]),
        .I3(p_4_in),
        .O(\rxd_out[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxd_out[18]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(rxd_half_pipe[18]),
        .I3(p_4_in),
        .O(\rxd_out[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[19]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_4_in),
        .I3(rxd_half_pipe[19]),
        .O(\rxd_out[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \rxd_out[1]_i_1 
       (.I0(rxd_half_pipe[1]),
        .I1(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I2(\rxd_out[6]_i_2_n_0 ),
        .O(\rxd_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[20]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_4_in),
        .I3(rxd_half_pipe[20]),
        .O(\rxd_out[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[21]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_4_in),
        .I3(rxd_half_pipe[21]),
        .O(\rxd_out[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[22]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_4_in),
        .I3(rxd_half_pipe[22]),
        .O(\rxd_out[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'hDFDD)) 
    \rxd_out[23]_i_1 
       (.I0(\rxd_out[23]_i_2_n_0 ),
        .I1(code_error_delay[2]),
        .I2(p_4_in),
        .I3(rxd_half_pipe[23]),
        .O(\rxd_out[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0300000057755555)) 
    \rxd_out[23]_i_2 
       (.I0(\rxd_out[23]_i_3_n_0 ),
        .I1(\rxd_out[23]_i_4_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[22] ),
        .I3(\rxd_pipe_reg_n_0_[23] ),
        .I4(\rxd_out[23]_i_5_n_0 ),
        .I5(\rxd_out[23]_i_6_n_0 ),
        .O(\rxd_out[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \rxd_out[23]_i_3 
       (.I0(lane_term_pipe[1]),
        .I1(lane_term_pipe[0]),
        .I2(lane_term_pipe[3]),
        .I3(lane_term_pipe[2]),
        .O(\rxd_out[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[23]_i_4 
       (.I0(code_error_delay[6]),
        .I1(\rxd_pipe_reg_n_0_[17] ),
        .O(\rxd_out[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \rxd_out[23]_i_5 
       (.I0(\rxd_pipe_reg_n_0_[18] ),
        .I1(\rxd_pipe_reg_n_0_[21] ),
        .I2(\rxd_pipe_reg_n_0_[20] ),
        .I3(\rxd_pipe_reg_n_0_[19] ),
        .I4(c71_in),
        .I5(\rxd_pipe_reg_n_0_[16] ),
        .O(\rxd_out[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[23]_i_6 
       (.I0(p_2_in_0),
        .I1(p_4_in54_in),
        .O(\rxd_out[23]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hE0FF)) 
    \rxd_out[24]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[24]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .I3(\rxd_out_reg[8]_0 ),
        .O(\rxd_out[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[25]_i_1 
       (.I0(rxd_half_pipe[25]),
        .I1(\rxd_out[31]_i_2_n_0 ),
        .I2(p_6_in),
        .O(\rxd_out[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[26]_i_1 
       (.I0(rxd_half_pipe[26]),
        .I1(\rxd_out[31]_i_2_n_0 ),
        .I2(p_6_in),
        .O(\rxd_out[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[27]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[27]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .O(\rxd_out[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[28]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[28]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .O(\rxd_out[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[29]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[29]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .O(\rxd_out[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \rxd_out[2]_i_1 
       (.I0(rxd_half_pipe[2]),
        .I1(\rxd_out[7]_i_2_n_0 ),
        .I2(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .O(\rxd_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[30]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[30]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .O(\rxd_out[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[31]_i_1 
       (.I0(p_6_in),
        .I1(rxd_half_pipe[31]),
        .I2(\rxd_out[31]_i_2_n_0 ),
        .O(\rxd_out[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000101FF01)) 
    \rxd_out[31]_i_2 
       (.I0(\lane_terminate_temp_reg_n_0_[2] ),
        .I1(p_4_in54_in),
        .I2(p_2_in_0),
        .I3(\rxd_out[31]_i_3_n_0 ),
        .I4(\rxd_out[31]_i_4_n_0 ),
        .I5(code_error_delay[3]),
        .O(\rxd_out[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \rxd_out[31]_i_3 
       (.I0(\rxd_pipe_reg_n_0_[25] ),
        .I1(c68_in),
        .I2(\rxd_pipe_reg_n_0_[30] ),
        .I3(\rxd_pipe_reg_n_0_[24] ),
        .O(\rxd_out[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFFFFFFFFFF)) 
    \rxd_out[31]_i_4 
       (.I0(\rxd_pipe_reg_n_0_[26] ),
        .I1(\rxd_pipe_reg_n_0_[31] ),
        .I2(code_error_delay[7]),
        .I3(\rxd_pipe_reg_n_0_[27] ),
        .I4(\rxd_pipe_reg_n_0_[28] ),
        .I5(\rxd_pipe_reg_n_0_[29] ),
        .O(\rxd_out[31]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \rxd_out[32]_i_1 
       (.I0(\rxd_out[39]_i_2_n_0 ),
        .I1(\rxd_pipe_reg_n_0_[0] ),
        .I2(\tx_is_idle_pipe_reg_n_0_[0] ),
        .O(\rxd_out[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \rxd_out[33]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[1] ),
        .I1(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I2(\rxd_out[38]_i_2_n_0 ),
        .O(\rxd_out[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \rxd_out[34]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[2] ),
        .I1(\rxd_out[39]_i_2_n_0 ),
        .I2(\tx_is_idle_pipe_reg_n_0_[0] ),
        .O(\rxd_out[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[35]_i_1 
       (.I0(\rxd_out[39]_i_2_n_0 ),
        .I1(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I2(\rxd_pipe_reg_n_0_[3] ),
        .O(\rxd_out[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[36]_i_1 
       (.I0(\rxd_out[39]_i_2_n_0 ),
        .I1(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I2(\rxd_pipe_reg_n_0_[4] ),
        .O(\rxd_out[36]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[37]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I1(\rxd_pipe_reg_n_0_[5] ),
        .I2(\rxd_out[38]_i_2_n_0 ),
        .O(\rxd_out[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[38]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I1(\rxd_pipe_reg_n_0_[6] ),
        .I2(\rxd_out[38]_i_2_n_0 ),
        .O(\rxd_out[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F1F1F1FF)) 
    \rxd_out[38]_i_2 
       (.I0(\code_error_pipe_reg_n_0_[4] ),
        .I1(\rxd_out[39]_i_4_n_0 ),
        .I2(p_4_in54_in),
        .I3(\rxd_out[38]_i_3_n_0 ),
        .I4(p_2_in_0),
        .I5(code_error_delay[4]),
        .O(\rxd_out[38]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[38]_i_3 
       (.I0(\lane_terminate_temp_reg_n_0_[2] ),
        .I1(\lane_terminate_temp_reg_n_0_[3] ),
        .O(\rxd_out[38]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[39]_i_1 
       (.I0(\rxd_out[39]_i_2_n_0 ),
        .I1(\tx_is_idle_pipe_reg_n_0_[0] ),
        .I2(\rxd_pipe_reg_n_0_[7] ),
        .O(\rxd_out[39]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hDFDFDFDD)) 
    \rxd_out[39]_i_2 
       (.I0(\rxd_out_reg[8]_0 ),
        .I1(code_error_delay[4]),
        .I2(\rxd_out[39]_i_3_n_0 ),
        .I3(\rxd_out[39]_i_4_n_0 ),
        .I4(\code_error_pipe_reg_n_0_[4] ),
        .O(\rxd_out[39]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'hAAAB)) 
    \rxd_out[39]_i_3 
       (.I0(p_4_in54_in),
        .I1(\lane_terminate_temp_reg_n_0_[2] ),
        .I2(\lane_terminate_temp_reg_n_0_[3] ),
        .I3(p_2_in_0),
        .O(\rxd_out[39]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h9FFF)) 
    \rxd_out[39]_i_4 
       (.I0(d[7]),
        .I1(d[6]),
        .I2(d[5]),
        .I3(\tx_is_idle_half_pipe[0]_i_2_n_0 ),
        .O(\rxd_out[39]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[3]_i_1 
       (.I0(\rxd_out[7]_i_2_n_0 ),
        .I1(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I2(rxd_half_pipe[3]),
        .O(\rxd_out[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \rxd_out[40]_i_1 
       (.I0(\rxd_out[47]_i_2_n_0 ),
        .I1(\rxd_out_reg[8]_0 ),
        .I2(p_0_in),
        .I3(\rxd_pipe_reg_n_0_[8] ),
        .O(\rxd_out[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[41]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[9] ),
        .I1(\rxd_out[47]_i_2_n_0 ),
        .I2(p_0_in),
        .O(\rxd_out[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[42]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[10] ),
        .I1(\rxd_out[47]_i_2_n_0 ),
        .I2(p_0_in),
        .O(\rxd_out[42]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[43]_i_1 
       (.I0(p_0_in),
        .I1(\rxd_pipe_reg_n_0_[11] ),
        .I2(\rxd_out[47]_i_2_n_0 ),
        .O(\rxd_out[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[44]_i_1 
       (.I0(p_0_in),
        .I1(\rxd_pipe_reg_n_0_[12] ),
        .I2(\rxd_out[47]_i_2_n_0 ),
        .O(\rxd_out[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[45]_i_1 
       (.I0(p_0_in),
        .I1(\rxd_pipe_reg_n_0_[13] ),
        .I2(\rxd_out[47]_i_2_n_0 ),
        .O(\rxd_out[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[46]_i_1 
       (.I0(p_0_in),
        .I1(\rxd_pipe_reg_n_0_[14] ),
        .I2(\rxd_out[47]_i_2_n_0 ),
        .O(\rxd_out[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[47]_i_1 
       (.I0(p_0_in),
        .I1(\rxd_pipe_reg_n_0_[15] ),
        .I2(\rxd_out[47]_i_2_n_0 ),
        .O(\rxd_out[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000BBB0A0A)) 
    \rxd_out[47]_i_2 
       (.I0(\rxd_out[47]_i_3_n_0 ),
        .I1(\tx_is_idle_half_pipe[1]_i_2_n_0 ),
        .I2(\lane_terminate_temp_reg_n_0_[4] ),
        .I3(\rxd_out[47]_i_4_n_0 ),
        .I4(\rxd_out[47]_i_5_n_0 ),
        .I5(code_error_delay[5]),
        .O(\rxd_out[47]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hEEEF)) 
    \rxd_out[47]_i_3 
       (.I0(p_4_in54_in),
        .I1(p_2_in_0),
        .I2(\lane_terminate_temp_reg_n_0_[3] ),
        .I3(\lane_terminate_temp_reg_n_0_[2] ),
        .O(\rxd_out[47]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    \rxd_out[47]_i_4 
       (.I0(c3_in),
        .I1(\rxd_pipe_reg_n_0_[40] ),
        .I2(\rxd_pipe_reg_n_0_[41] ),
        .I3(\rxd_pipe_reg_n_0_[47] ),
        .I4(\rxd_pipe_reg_n_0_[46] ),
        .O(\rxd_out[47]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \rxd_out[47]_i_5 
       (.I0(\code_error_pipe_reg_n_0_[5] ),
        .I1(\rxd_pipe_reg_n_0_[44] ),
        .I2(\rxd_pipe_reg_n_0_[45] ),
        .I3(\rxd_pipe_reg_n_0_[43] ),
        .I4(\rxd_pipe_reg_n_0_[42] ),
        .O(\rxd_out[47]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \rxd_out[48]_i_1 
       (.I0(\rxd_out[55]_i_2_n_0 ),
        .I1(\rxd_out_reg[8]_0 ),
        .I2(p_0_in0_in),
        .I3(\rxd_pipe_reg_n_0_[16] ),
        .O(\rxd_out[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[49]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_out[55]_i_2_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[17] ),
        .O(\rxd_out[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[4]_i_1 
       (.I0(\rxd_out[7]_i_2_n_0 ),
        .I1(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I2(rxd_half_pipe[4]),
        .O(\rxd_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[50]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_out[55]_i_2_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[18] ),
        .O(\rxd_out[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[51]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_pipe_reg_n_0_[19] ),
        .I2(\rxd_out[55]_i_2_n_0 ),
        .O(\rxd_out[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[52]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_pipe_reg_n_0_[20] ),
        .I2(\rxd_out[55]_i_2_n_0 ),
        .O(\rxd_out[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[53]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_pipe_reg_n_0_[21] ),
        .I2(\rxd_out[55]_i_2_n_0 ),
        .O(\rxd_out[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[54]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_pipe_reg_n_0_[22] ),
        .I2(\rxd_out[55]_i_2_n_0 ),
        .O(\rxd_out[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[55]_i_1 
       (.I0(p_0_in0_in),
        .I1(\rxd_pipe_reg_n_0_[23] ),
        .I2(\rxd_out[55]_i_2_n_0 ),
        .O(\rxd_out[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000BBB0A0A)) 
    \rxd_out[55]_i_2 
       (.I0(\rxd_out[55]_i_3_n_0 ),
        .I1(\tx_is_idle_half_pipe[2]_i_2_n_0 ),
        .I2(\rxd_out[55]_i_4_n_0 ),
        .I3(\rxd_out[55]_i_5_n_0 ),
        .I4(\rxd_out[55]_i_6_n_0 ),
        .I5(code_error_delay[6]),
        .O(\rxd_out[55]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \rxd_out[55]_i_3 
       (.I0(p_2_in_0),
        .I1(p_4_in54_in),
        .I2(\lane_terminate_temp_reg_n_0_[2] ),
        .I3(\lane_terminate_temp_reg_n_0_[3] ),
        .O(\rxd_out[55]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[55]_i_4 
       (.I0(\lane_terminate_temp_reg_n_0_[5] ),
        .I1(\lane_terminate_temp_reg_n_0_[4] ),
        .O(\rxd_out[55]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    \rxd_out[55]_i_5 
       (.I0(c7_in),
        .I1(\rxd_pipe_reg_n_0_[48] ),
        .I2(\rxd_pipe_reg_n_0_[49] ),
        .I3(\rxd_pipe_reg_n_0_[55] ),
        .I4(\rxd_pipe_reg_n_0_[54] ),
        .O(\rxd_out[55]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \rxd_out[55]_i_6 
       (.I0(\code_error_pipe_reg_n_0_[6] ),
        .I1(\rxd_pipe_reg_n_0_[52] ),
        .I2(\rxd_pipe_reg_n_0_[53] ),
        .I3(\rxd_pipe_reg_n_0_[51] ),
        .I4(\rxd_pipe_reg_n_0_[50] ),
        .O(\rxd_out[55]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hE0FF)) 
    \rxd_out[56]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[24] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .I3(\rxd_out_reg[8]_0 ),
        .O(\rxd_out[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[57]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[25] ),
        .I1(\rxd_out[63]_i_3_n_0 ),
        .I2(\tx_is_idle_pipe_reg_n_0_[3] ),
        .O(\rxd_out[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \rxd_out[58]_i_1 
       (.I0(\rxd_pipe_reg_n_0_[26] ),
        .I1(\rxd_out[63]_i_3_n_0 ),
        .I2(\tx_is_idle_pipe_reg_n_0_[3] ),
        .O(\rxd_out[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[59]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[27] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .O(\rxd_out[59]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[5]_i_1 
       (.I0(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I1(rxd_half_pipe[5]),
        .I2(\rxd_out[6]_i_2_n_0 ),
        .O(\rxd_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[60]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[28] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .O(\rxd_out[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[61]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[29] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .O(\rxd_out[61]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[62]_i_1 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[30] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .O(\rxd_out[62]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[63]_i_2 
       (.I0(\tx_is_idle_pipe_reg_n_0_[3] ),
        .I1(\rxd_pipe_reg_n_0_[31] ),
        .I2(\rxd_out[63]_i_3_n_0 ),
        .O(\rxd_out[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000010101FF)) 
    \rxd_out[63]_i_3 
       (.I0(\lane_terminate_temp_reg_n_0_[6] ),
        .I1(\lane_terminate_temp_reg_n_0_[4] ),
        .I2(\lane_terminate_temp_reg_n_0_[5] ),
        .I3(\code_error_pipe_reg_n_0_[7] ),
        .I4(\rxd_out[63]_i_4_n_0 ),
        .I5(code_error_delay[7]),
        .O(\rxd_out[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    \rxd_out[63]_i_4 
       (.I0(\rxd_out[63]_i_5_n_0 ),
        .I1(\rxd_pipe_reg_n_0_[59] ),
        .I2(\rxd_pipe_reg_n_0_[58] ),
        .I3(\rxd_pipe_reg_n_0_[60] ),
        .O(\rxd_out[63]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFDFFFFFFFFFF)) 
    \rxd_out[63]_i_5 
       (.I0(c11_in),
        .I1(\rxd_pipe_reg_n_0_[56] ),
        .I2(\rxd_pipe_reg_n_0_[57] ),
        .I3(\rxd_pipe_reg_n_0_[63] ),
        .I4(\rxd_pipe_reg_n_0_[62] ),
        .I5(\rxd_pipe_reg_n_0_[61] ),
        .O(\rxd_out[63]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \rxd_out[6]_i_1 
       (.I0(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I1(rxd_half_pipe[6]),
        .I2(\rxd_out[6]_i_2_n_0 ),
        .O(\rxd_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFF01)) 
    \rxd_out[6]_i_2 
       (.I0(lane_term_pipe[3]),
        .I1(lane_term_pipe[2]),
        .I2(lane_term_pipe[1]),
        .I3(lane_term_pipe[0]),
        .I4(\rxd_out[7]_i_3_n_0 ),
        .I5(code_error_delay[0]),
        .O(\rxd_out[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \rxd_out[7]_i_1 
       (.I0(\rxd_out[7]_i_2_n_0 ),
        .I1(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .I2(rxd_half_pipe[7]),
        .O(\rxd_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hDDDFDDDFDDDFDDDD)) 
    \rxd_out[7]_i_2 
       (.I0(\rxd_out_reg[8]_0 ),
        .I1(code_error_delay[0]),
        .I2(\rxd_out[7]_i_3_n_0 ),
        .I3(lane_term_pipe[0]),
        .I4(lane_term_pipe[1]),
        .I5(\rxd_out[7]_i_4_n_0 ),
        .O(\rxd_out[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \rxd_out[7]_i_3 
       (.I0(\rxd_pipe_reg_n_0_[1] ),
        .I1(\rxd_pipe_reg_n_0_[5] ),
        .I2(\rxc_pipe_reg_n_0_[0] ),
        .I3(\rxd_pipe_reg_n_0_[2] ),
        .I4(\rxd_out[7]_i_5_n_0 ),
        .O(\rxd_out[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rxd_out[7]_i_4 
       (.I0(lane_term_pipe[3]),
        .I1(lane_term_pipe[2]),
        .O(\rxd_out[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF9FFFFFFFFFF)) 
    \rxd_out[7]_i_5 
       (.I0(\rxd_pipe_reg_n_0_[6] ),
        .I1(\rxd_pipe_reg_n_0_[7] ),
        .I2(\rxd_pipe_reg_n_0_[0] ),
        .I3(\rxd_pipe_reg_n_0_[3] ),
        .I4(code_error_delay[4]),
        .I5(\rxd_pipe_reg_n_0_[4] ),
        .O(\rxd_out[7]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h20202000)) 
    \rxd_out[8]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(\rxd_out_reg[8]_0 ),
        .I3(p_2_in),
        .I4(rxd_half_pipe[8]),
        .O(\rxd_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \rxd_out[9]_i_1 
       (.I0(\rxd_out[15]_i_2_n_0 ),
        .I1(code_error_delay[1]),
        .I2(rxd_half_pipe[9]),
        .I3(p_2_in),
        .O(\rxd_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[0]_i_1_n_0 ),
        .Q(xgmii_rxd[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[10]_i_1_n_0 ),
        .Q(xgmii_rxd[10]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[11]_i_1_n_0 ),
        .Q(xgmii_rxd[11]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[12]_i_1_n_0 ),
        .Q(xgmii_rxd[12]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[13]_i_1_n_0 ),
        .Q(xgmii_rxd[13]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[14]_i_1_n_0 ),
        .Q(xgmii_rxd[14]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[15]_i_1_n_0 ),
        .Q(xgmii_rxd[15]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[16]_i_1_n_0 ),
        .Q(xgmii_rxd[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[17]_i_1_n_0 ),
        .Q(xgmii_rxd[17]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[18]_i_1_n_0 ),
        .Q(xgmii_rxd[18]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[19]_i_1_n_0 ),
        .Q(xgmii_rxd[19]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[1]_i_1_n_0 ),
        .Q(xgmii_rxd[1]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[20]_i_1_n_0 ),
        .Q(xgmii_rxd[20]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[21]_i_1_n_0 ),
        .Q(xgmii_rxd[21]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[22]_i_1_n_0 ),
        .Q(xgmii_rxd[22]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[23]_i_1_n_0 ),
        .Q(xgmii_rxd[23]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[24]_i_1_n_0 ),
        .Q(xgmii_rxd[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[25]_i_1_n_0 ),
        .Q(xgmii_rxd[25]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[26]_i_1_n_0 ),
        .Q(xgmii_rxd[26]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[27]_i_1_n_0 ),
        .Q(xgmii_rxd[27]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[28]_i_1_n_0 ),
        .Q(xgmii_rxd[28]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[29]_i_1_n_0 ),
        .Q(xgmii_rxd[29]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[2]_i_1_n_0 ),
        .Q(xgmii_rxd[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[30]_i_1_n_0 ),
        .Q(xgmii_rxd[30]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[31]_i_1_n_0 ),
        .Q(xgmii_rxd[31]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[32] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[32]_i_1_n_0 ),
        .Q(xgmii_rxd[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[33] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[33]_i_1_n_0 ),
        .Q(xgmii_rxd[33]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[34] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[34]_i_1_n_0 ),
        .Q(xgmii_rxd[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[35] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[35]_i_1_n_0 ),
        .Q(xgmii_rxd[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[36] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[36]_i_1_n_0 ),
        .Q(xgmii_rxd[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[37] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[37]_i_1_n_0 ),
        .Q(xgmii_rxd[37]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[38] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[38]_i_1_n_0 ),
        .Q(xgmii_rxd[38]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[39] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[39]_i_1_n_0 ),
        .Q(xgmii_rxd[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[3]_i_1_n_0 ),
        .Q(xgmii_rxd[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[40] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[40]_i_1_n_0 ),
        .Q(xgmii_rxd[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[41] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[41]_i_1_n_0 ),
        .Q(xgmii_rxd[41]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[42] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[42]_i_1_n_0 ),
        .Q(xgmii_rxd[42]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[43] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[43]_i_1_n_0 ),
        .Q(xgmii_rxd[43]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[44] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[44]_i_1_n_0 ),
        .Q(xgmii_rxd[44]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[45] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[45]_i_1_n_0 ),
        .Q(xgmii_rxd[45]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[46] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[46]_i_1_n_0 ),
        .Q(xgmii_rxd[46]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[47] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[47]_i_1_n_0 ),
        .Q(xgmii_rxd[47]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[48] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[48]_i_1_n_0 ),
        .Q(xgmii_rxd[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[49] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[49]_i_1_n_0 ),
        .Q(xgmii_rxd[49]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[4]_i_1_n_0 ),
        .Q(xgmii_rxd[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[50] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[50]_i_1_n_0 ),
        .Q(xgmii_rxd[50]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[51] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[51]_i_1_n_0 ),
        .Q(xgmii_rxd[51]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[52] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[52]_i_1_n_0 ),
        .Q(xgmii_rxd[52]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[53] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[53]_i_1_n_0 ),
        .Q(xgmii_rxd[53]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[54] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[54]_i_1_n_0 ),
        .Q(xgmii_rxd[54]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[55] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[55]_i_1_n_0 ),
        .Q(xgmii_rxd[55]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[56] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[56]_i_1_n_0 ),
        .Q(xgmii_rxd[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[57] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[57]_i_1_n_0 ),
        .Q(xgmii_rxd[57]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[58] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[58]_i_1_n_0 ),
        .Q(xgmii_rxd[58]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[59] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[59]_i_1_n_0 ),
        .Q(xgmii_rxd[59]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[5]_i_1_n_0 ),
        .Q(xgmii_rxd[5]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[60] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[60]_i_1_n_0 ),
        .Q(xgmii_rxd[60]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[61] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[61]_i_1_n_0 ),
        .Q(xgmii_rxd[61]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[62] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[62]_i_1_n_0 ),
        .Q(xgmii_rxd[62]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[63] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[63]_i_2_n_0 ),
        .Q(xgmii_rxd[63]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[6]_i_1_n_0 ),
        .Q(xgmii_rxd[6]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[7]_i_1_n_0 ),
        .Q(xgmii_rxd[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[8]_i_1_n_0 ),
        .Q(xgmii_rxd[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_out_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\rxd_out[9]_i_1_n_0 ),
        .Q(xgmii_rxd[9]),
        .R(local_fault));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[0]),
        .Q(\rxd_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[18]),
        .Q(\rxd_pipe_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[19]),
        .Q(\rxd_pipe_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[20]),
        .Q(\rxd_pipe_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[21]),
        .Q(\rxd_pipe_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[22]),
        .Q(\rxd_pipe_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[23]),
        .Q(\rxd_pipe_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[32]),
        .Q(\rxd_pipe_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[33]),
        .Q(\rxd_pipe_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[34]),
        .Q(\rxd_pipe_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[35]),
        .Q(\rxd_pipe_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[1]),
        .Q(\rxd_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[36]),
        .Q(\rxd_pipe_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[37]),
        .Q(\rxd_pipe_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[38]),
        .Q(\rxd_pipe_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[39]),
        .Q(\rxd_pipe_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[48]),
        .Q(\rxd_pipe_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[49]),
        .Q(\rxd_pipe_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[50]),
        .Q(\rxd_pipe_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[51]),
        .Q(\rxd_pipe_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[52]),
        .Q(\rxd_pipe_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[53]),
        .Q(\rxd_pipe_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[2]),
        .Q(\rxd_pipe_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[54]),
        .Q(\rxd_pipe_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[55]),
        .Q(\rxd_pipe_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[32] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[8]),
        .Q(d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[33] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[9]),
        .Q(d[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[34] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[10]),
        .Q(d[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[35] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[11]),
        .Q(d[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[36] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[12]),
        .Q(d[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[37] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[13]),
        .Q(d[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[38] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[14]),
        .Q(d[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[39] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[15]),
        .Q(d[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[3]),
        .Q(\rxd_pipe_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[40] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[24]),
        .Q(\rxd_pipe_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[41] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[25]),
        .Q(\rxd_pipe_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[42] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[26]),
        .Q(\rxd_pipe_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[43] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[27]),
        .Q(\rxd_pipe_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[44] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[28]),
        .Q(\rxd_pipe_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[45] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[29]),
        .Q(\rxd_pipe_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[46] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[30]),
        .Q(\rxd_pipe_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[47] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[31]),
        .Q(\rxd_pipe_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[48] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[40]),
        .Q(\rxd_pipe_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[49] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[41]),
        .Q(\rxd_pipe_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[4]),
        .Q(\rxd_pipe_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[50] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[42]),
        .Q(\rxd_pipe_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[51] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[43]),
        .Q(\rxd_pipe_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[52] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[44]),
        .Q(\rxd_pipe_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[53] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[45]),
        .Q(\rxd_pipe_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[54] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[46]),
        .Q(\rxd_pipe_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[55] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[47]),
        .Q(\rxd_pipe_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[56] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[56]),
        .Q(\rxd_pipe_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[57] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[57]),
        .Q(\rxd_pipe_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[58] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[58]),
        .Q(\rxd_pipe_reg_n_0_[58] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[59] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[59]),
        .Q(\rxd_pipe_reg_n_0_[59] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[5]),
        .Q(\rxd_pipe_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[60] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[60]),
        .Q(\rxd_pipe_reg_n_0_[60] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[61] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[61]),
        .Q(\rxd_pipe_reg_n_0_[61] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[62] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[62]),
        .Q(\rxd_pipe_reg_n_0_[62] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[63] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[63]),
        .Q(\rxd_pipe_reg_n_0_[63] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[6]),
        .Q(\rxd_pipe_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \rxd_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[7]),
        .Q(\rxd_pipe_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[16]),
        .Q(\rxd_pipe_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rxd_pipe_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_rxdata[17]),
        .Q(\rxd_pipe_reg_n_0_[9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0882)) 
    \tx_is_idle_half_pipe[0]_i_1 
       (.I0(\tx_is_idle_half_pipe[0]_i_2_n_0 ),
        .I1(d[5]),
        .I2(d[7]),
        .I3(d[6]),
        .O(p_15_out[0]));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \tx_is_idle_half_pipe[0]_i_2 
       (.I0(d[2]),
        .I1(d[3]),
        .I2(d[0]),
        .I3(d[1]),
        .I4(d[4]),
        .I5(c149_in),
        .O(\tx_is_idle_half_pipe[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1100030011000000)) 
    \tx_is_idle_half_pipe[1]_i_1 
       (.I0(\tx_is_idle_half_pipe[1]_i_2_n_0 ),
        .I1(\tx_is_idle_half_pipe[1]_i_3_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[46] ),
        .I3(\rxd_pipe_reg_n_0_[44] ),
        .I4(\rxd_pipe_reg_n_0_[45] ),
        .I5(\tx_is_idle_half_pipe[1]_i_4_n_0 ),
        .O(p_15_out[1]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT5 #(
    .INIT(32'hFFFDFDFF)) 
    \tx_is_idle_half_pipe[1]_i_2 
       (.I0(c3_in),
        .I1(\rxd_pipe_reg_n_0_[40] ),
        .I2(\rxd_pipe_reg_n_0_[41] ),
        .I3(\rxd_pipe_reg_n_0_[47] ),
        .I4(\rxd_pipe_reg_n_0_[46] ),
        .O(\tx_is_idle_half_pipe[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \tx_is_idle_half_pipe[1]_i_3 
       (.I0(\rxd_pipe_reg_n_0_[43] ),
        .I1(\rxd_pipe_reg_n_0_[42] ),
        .O(\tx_is_idle_half_pipe[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \tx_is_idle_half_pipe[1]_i_4 
       (.I0(c3_in),
        .I1(\rxd_pipe_reg_n_0_[40] ),
        .I2(\rxd_pipe_reg_n_0_[41] ),
        .I3(\rxd_pipe_reg_n_0_[47] ),
        .O(\tx_is_idle_half_pipe[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h1000130010001000)) 
    \tx_is_idle_half_pipe[2]_i_1 
       (.I0(\tx_is_idle_half_pipe[2]_i_2_n_0 ),
        .I1(\tx_is_idle_half_pipe[2]_i_3_n_0 ),
        .I2(\rxd_pipe_reg_n_0_[53] ),
        .I3(\rxd_pipe_reg_n_0_[52] ),
        .I4(\rxd_pipe_reg_n_0_[54] ),
        .I5(\tx_is_idle_half_pipe[2]_i_4_n_0 ),
        .O(p_15_out[2]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT5 #(
    .INIT(32'hFFFDFDFF)) 
    \tx_is_idle_half_pipe[2]_i_2 
       (.I0(c7_in),
        .I1(\rxd_pipe_reg_n_0_[48] ),
        .I2(\rxd_pipe_reg_n_0_[49] ),
        .I3(\rxd_pipe_reg_n_0_[55] ),
        .I4(\rxd_pipe_reg_n_0_[54] ),
        .O(\tx_is_idle_half_pipe[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \tx_is_idle_half_pipe[2]_i_3 
       (.I0(\rxd_pipe_reg_n_0_[51] ),
        .I1(\rxd_pipe_reg_n_0_[50] ),
        .O(\tx_is_idle_half_pipe[2]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \tx_is_idle_half_pipe[2]_i_4 
       (.I0(c7_in),
        .I1(\rxd_pipe_reg_n_0_[48] ),
        .I2(\rxd_pipe_reg_n_0_[49] ),
        .I3(\rxd_pipe_reg_n_0_[55] ),
        .O(\tx_is_idle_half_pipe[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000080002)) 
    \tx_is_idle_half_pipe[3]_i_1 
       (.I0(\tx_is_idle_half_pipe[3]_i_2_n_0 ),
        .I1(\rxd_pipe_reg_n_0_[63] ),
        .I2(\rxd_pipe_reg_n_0_[57] ),
        .I3(\tx_is_idle_half_pipe[3]_i_3_n_0 ),
        .I4(\rxd_pipe_reg_n_0_[61] ),
        .I5(\rxd_pipe_reg_n_0_[62] ),
        .O(p_15_out[3]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \tx_is_idle_half_pipe[3]_i_2 
       (.I0(\rxd_pipe_reg_n_0_[60] ),
        .I1(\rxd_pipe_reg_n_0_[58] ),
        .I2(\rxd_pipe_reg_n_0_[59] ),
        .O(\tx_is_idle_half_pipe[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \tx_is_idle_half_pipe[3]_i_3 
       (.I0(\rxd_pipe_reg_n_0_[56] ),
        .I1(c11_in),
        .O(\tx_is_idle_half_pipe[3]_i_3_n_0 ));
  FDRE \tx_is_idle_half_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_15_out[0]),
        .Q(\tx_is_idle_half_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_is_idle_half_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_15_out[1]),
        .Q(p_2_in),
        .R(1'b0));
  FDRE \tx_is_idle_half_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_15_out[2]),
        .Q(p_4_in),
        .R(1'b0));
  FDRE \tx_is_idle_half_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(p_15_out[3]),
        .Q(p_6_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000080008000008)) 
    \tx_is_idle_pipe[0]_i_1 
       (.I0(\mgt_rxcharisk_reg_reg[0] ),
        .I1(mgt_rxdata[4]),
        .I2(\tx_is_idle_pipe_reg[0]_0 ),
        .I3(mgt_rxdata[5]),
        .I4(mgt_rxdata[6]),
        .I5(mgt_rxdata[7]),
        .O(\tx_is_idle_pipe[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080008000008)) 
    \tx_is_idle_pipe[1]_i_1 
       (.I0(\mgt_rxcharisk_reg_reg[2] ),
        .I1(mgt_rxdata[20]),
        .I2(\tx_is_idle_pipe_reg[1]_0 ),
        .I3(mgt_rxdata[21]),
        .I4(mgt_rxdata[22]),
        .I5(mgt_rxdata[23]),
        .O(\tx_is_idle_pipe[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080008000008)) 
    \tx_is_idle_pipe[2]_i_1 
       (.I0(\mgt_rxcharisk_reg_reg[4] ),
        .I1(mgt_rxdata[36]),
        .I2(\tx_is_idle_pipe_reg[2]_0 ),
        .I3(mgt_rxdata[37]),
        .I4(mgt_rxdata[38]),
        .I5(mgt_rxdata[39]),
        .O(\tx_is_idle_pipe[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080008000008)) 
    \tx_is_idle_pipe[3]_i_1 
       (.I0(\mgt_rxcharisk_reg_reg[6] ),
        .I1(mgt_rxdata[52]),
        .I2(\tx_is_idle_pipe_reg[3]_0 ),
        .I3(mgt_rxdata[53]),
        .I4(mgt_rxdata[54]),
        .I5(mgt_rxdata[55]),
        .O(\tx_is_idle_pipe[3]_i_1_n_0 ));
  FDRE \tx_is_idle_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_idle_pipe[0]_i_1_n_0 ),
        .Q(\tx_is_idle_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \tx_is_idle_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_idle_pipe[1]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  FDRE \tx_is_idle_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_idle_pipe[2]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(1'b0));
  FDRE \tx_is_idle_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_idle_pipe[3]_i_1_n_0 ),
        .Q(\tx_is_idle_pipe_reg_n_0_[3] ),
        .R(1'b0));
endmodule

module xaui_0_sync_state_machine
   (mgt_enable_align,
    \FSM_sequential_state_reg[1][4]_0 ,
    D,
    Q,
    usrclk,
    usrclk_reset,
    mgt_rxlock,
    mgt_rx_reset,
    sync_status_reg,
    sync_status_reg_0,
    sync_status_reg_1,
    mgt_codecomma,
    mgt_codevalid);
  output [0:0]mgt_enable_align;
  output \FSM_sequential_state_reg[1][4]_0 ;
  output [0:0]D;
  input [0:0]Q;
  input usrclk;
  input usrclk_reset;
  input [0:0]mgt_rxlock;
  input [0:0]mgt_rx_reset;
  input sync_status_reg;
  input sync_status_reg_0;
  input sync_status_reg_1;
  input [1:0]mgt_codecomma;
  input [1:0]mgt_codevalid;

  wire [0:0]D;
  wire \FSM_sequential_state[1][0]_i_10_n_0 ;
  wire \FSM_sequential_state[1][0]_i_11_n_0 ;
  wire \FSM_sequential_state[1][0]_i_12_n_0 ;
  wire \FSM_sequential_state[1][0]_i_13_n_0 ;
  wire \FSM_sequential_state[1][0]_i_1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_3_n_0 ;
  wire \FSM_sequential_state[1][0]_i_4__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_5_n_0 ;
  wire \FSM_sequential_state[1][0]_i_6_n_0 ;
  wire \FSM_sequential_state[1][0]_i_7_n_0 ;
  wire \FSM_sequential_state[1][0]_i_8__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_9_n_0 ;
  wire \FSM_sequential_state[1][1]_i_10_n_0 ;
  wire \FSM_sequential_state[1][1]_i_1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_3_n_0 ;
  wire \FSM_sequential_state[1][1]_i_4_n_0 ;
  wire \FSM_sequential_state[1][1]_i_5_n_0 ;
  wire \FSM_sequential_state[1][1]_i_6_n_0 ;
  wire \FSM_sequential_state[1][1]_i_7_n_0 ;
  wire \FSM_sequential_state[1][1]_i_8_n_0 ;
  wire \FSM_sequential_state[1][1]_i_9_n_0 ;
  wire \FSM_sequential_state[1][2]_i_2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_3__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_4_n_0 ;
  wire \FSM_sequential_state[1][2]_i_5__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_6_n_0 ;
  wire \FSM_sequential_state[1][3]_i_1_n_0 ;
  wire \FSM_sequential_state[1][3]_i_2_n_0 ;
  wire \FSM_sequential_state[1][4]_i_1__2_n_0 ;
  wire \FSM_sequential_state[1][4]_i_2_n_0 ;
  wire \FSM_sequential_state[1][4]_i_3_n_0 ;
  wire \FSM_sequential_state_reg[1][2]_i_1_n_0 ;
  wire \FSM_sequential_state_reg[1][4]_0 ;
  wire [0:0]Q;
  wire \code_comma_pipe_reg_n_0_[0] ;
  wire \code_comma_pipe_reg_n_0_[1] ;
  wire \code_valid_pipe_reg_n_0_[0] ;
  wire \code_valid_pipe_reg_n_0_[1] ;
  wire enable_align_i_1__2_n_0;
  wire [1:0]mgt_codecomma;
  wire [1:0]mgt_codevalid;
  wire [0:0]mgt_enable_align;
  wire [0:0]mgt_rx_reset;
  wire [0:0]mgt_rxlock;
  wire signal_detect_last;
  wire [4:0]state;
  wire sync_status_reg;
  wire sync_status_reg_0;
  wire sync_status_reg_1;
  wire usrclk;
  wire usrclk_reset;

  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8BBBB)) 
    \FSM_sequential_state[1][0]_i_1 
       (.I0(\FSM_sequential_state[1][0]_i_2_n_0 ),
        .I1(state[4]),
        .I2(\FSM_sequential_state[1][0]_i_3_n_0 ),
        .I3(\FSM_sequential_state[1][0]_i_4__0_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][0]_i_5_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFFFFFFFF0B0B)) 
    \FSM_sequential_state[1][0]_i_10 
       (.I0(\code_comma_pipe_reg_n_0_[1] ),
        .I1(\FSM_sequential_state[1][0]_i_13_n_0 ),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][0]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hFFDFDDDD)) 
    \FSM_sequential_state[1][0]_i_11 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .O(\FSM_sequential_state[1][0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_state[1][0]_i_12 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state[1][0]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][0]_i_13 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(Q),
        .O(\FSM_sequential_state[1][0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0101000100000001)) 
    \FSM_sequential_state[1][0]_i_2 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(\FSM_sequential_state[1][0]_i_6_n_0 ),
        .I3(\FSM_sequential_state[1][1]_i_9_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEE222EEEEE2E2E)) 
    \FSM_sequential_state[1][0]_i_3 
       (.I0(\FSM_sequential_state[1][0]_i_7_n_0 ),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\FSM_sequential_state[1][0]_i_8__0_n_0 ),
        .I4(\FSM_sequential_state[1][0]_i_9_n_0 ),
        .I5(\FSM_sequential_state[1][0]_i_10_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1000)) 
    \FSM_sequential_state[1][0]_i_4__0 
       (.I0(state[2]),
        .I1(\code_comma_pipe_reg_n_0_[0] ),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(Q),
        .I4(state[3]),
        .I5(\FSM_sequential_state[1][0]_i_11_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF3333F33C0000F2)) 
    \FSM_sequential_state[1][0]_i_5 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\FSM_sequential_state[1][1]_i_9_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_state[1][0]_i_6 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h22A8AA00AA00AA00)) 
    \FSM_sequential_state[1][0]_i_7 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[3]),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\FSM_sequential_state[1][0]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state[1][0]_i_8__0 
       (.I0(state[3]),
        .I1(state[2]),
        .O(\FSM_sequential_state[1][0]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h000CC0000CC00C80)) 
    \FSM_sequential_state[1][0]_i_9 
       (.I0(Q),
        .I1(\FSM_sequential_state[1][0]_i_12_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0DFF0D0D0D0D0D0D)) 
    \FSM_sequential_state[1][1]_i_1 
       (.I0(\FSM_sequential_state[1][1]_i_2_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_3_n_0 ),
        .I2(state[4]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(\FSM_sequential_state[1][1]_i_4_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_10 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFBFAFBFBAFFFF)) 
    \FSM_sequential_state[1][1]_i_2 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \FSM_sequential_state[1][1]_i_3 
       (.I0(\FSM_sequential_state[1][1]_i_5_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_6_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(state[2]),
        .I4(\code_comma_pipe_reg_n_0_[0] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABABBBAAABAAA)) 
    \FSM_sequential_state[1][1]_i_4 
       (.I0(\FSM_sequential_state[1][1]_i_7_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_8_n_0 ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[4]),
        .I4(\FSM_sequential_state[1][1]_i_9_n_0 ),
        .I5(\code_comma_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h04044000)) 
    \FSM_sequential_state[1][1]_i_5 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[3]),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hDDDDDFFF)) 
    \FSM_sequential_state[1][1]_i_6 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\code_valid_pipe_reg_n_0_[1] ),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000017)) 
    \FSM_sequential_state[1][1]_i_7 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(state[4]),
        .I4(state[3]),
        .I5(\FSM_sequential_state[1][1]_i_10_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \FSM_sequential_state[1][1]_i_8 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\FSM_sequential_state[1][1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_9 
       (.I0(Q),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF03350000)) 
    \FSM_sequential_state[1][2]_i_2 
       (.I0(state[3]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\FSM_sequential_state[1][2]_i_4_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \FSM_sequential_state[1][2]_i_3__0 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[2]),
        .O(\FSM_sequential_state[1][2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEA0000)) 
    \FSM_sequential_state[1][2]_i_4 
       (.I0(\code_comma_pipe_reg_n_0_[1] ),
        .I1(\code_comma_pipe_reg_n_0_[0] ),
        .I2(state[0]),
        .I3(\FSM_sequential_state[1][2]_i_5__0_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][2]_i_6_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_sequential_state[1][2]_i_5__0 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[3]),
        .O(\FSM_sequential_state[1][2]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'hC30CC00CC10F070F)) 
    \FSM_sequential_state[1][2]_i_6 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[1]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[1][3]_i_1 
       (.I0(state[4]),
        .I1(\FSM_sequential_state[1][3]_i_2_n_0 ),
        .O(\FSM_sequential_state[1][3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0C73F4F561DFF1F)) 
    \FSM_sequential_state[1][3]_i_2 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(state[2]),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF6FF)) 
    \FSM_sequential_state[1][4]_i_1__2 
       (.I0(signal_detect_last),
        .I1(Q),
        .I2(usrclk_reset),
        .I3(mgt_rxlock),
        .I4(mgt_rx_reset),
        .O(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \FSM_sequential_state[1][4]_i_2 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(\FSM_sequential_state[1][4]_i_3_n_0 ),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][4]_i_3 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][4]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][0]_i_1_n_0 ),
        .Q(state[0]),
        .R(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][1]_i_1_n_0 ),
        .Q(state[1]),
        .R(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_reg[1][2]_i_1_n_0 ),
        .Q(state[2]),
        .R(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  MUXF7 \FSM_sequential_state_reg[1][2]_i_1 
       (.I0(\FSM_sequential_state[1][2]_i_2_n_0 ),
        .I1(\FSM_sequential_state[1][2]_i_3__0_n_0 ),
        .O(\FSM_sequential_state_reg[1][2]_i_1_n_0 ),
        .S(state[4]));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][3]_i_1_n_0 ),
        .Q(state[3]),
        .R(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][4]_i_2_n_0 ),
        .Q(state[4]),
        .R(\FSM_sequential_state[1][4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[0]),
        .Q(\code_comma_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[1]),
        .Q(\code_comma_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[0]),
        .Q(\code_valid_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[1]),
        .Q(\code_valid_pipe_reg_n_0_[1] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    enable_align_i_1__2
       (.I0(state[1]),
        .I1(state[0]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[4]),
        .O(enable_align_i_1__2_n_0));
  FDRE enable_align_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(enable_align_i_1__2_n_0),
        .Q(mgt_enable_align),
        .R(1'b0));
  FDRE signal_detect_last_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(signal_detect_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sync_ok[0]_i_1 
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(D));
  LUT6 #(
    .INIT(64'h0000000000005554)) 
    sync_status_i_1
       (.I0(sync_status_reg),
        .I1(state[4]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(sync_status_reg_0),
        .I5(sync_status_reg_1),
        .O(\FSM_sequential_state_reg[1][4]_0 ));
endmodule

(* ORIG_REF_NAME = "sync_state_machine" *) 
module xaui_0_sync_state_machine_79
   (mgt_enable_align,
    \FSM_sequential_state_reg[1][4]_0 ,
    D,
    Q,
    usrclk,
    usrclk_reset,
    mgt_rxlock,
    mgt_rx_reset,
    mgt_codecomma,
    mgt_codevalid);
  output [0:0]mgt_enable_align;
  output \FSM_sequential_state_reg[1][4]_0 ;
  output [0:0]D;
  input [0:0]Q;
  input usrclk;
  input usrclk_reset;
  input [0:0]mgt_rxlock;
  input [0:0]mgt_rx_reset;
  input [1:0]mgt_codecomma;
  input [1:0]mgt_codevalid;

  wire [0:0]D;
  wire \FSM_sequential_state[1][0]_i_10__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_11__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_12__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_13__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_1__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_2__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_3__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_4_n_0 ;
  wire \FSM_sequential_state[1][0]_i_5__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_6__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_7__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_8__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_9__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_2__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_3__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_4__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_5__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_6__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_7__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_8__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_2__2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_3_n_0 ;
  wire \FSM_sequential_state[1][2]_i_4__2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_5_n_0 ;
  wire \FSM_sequential_state[1][2]_i_6__2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_7_n_0 ;
  wire \FSM_sequential_state[1][2]_i_8_n_0 ;
  wire \FSM_sequential_state[1][3]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1][3]_i_2__0_n_0 ;
  wire \FSM_sequential_state[1][4]_i_1__1_n_0 ;
  wire \FSM_sequential_state[1][4]_i_2__0_n_0 ;
  wire \FSM_sequential_state[1][4]_i_3__0_n_0 ;
  wire \FSM_sequential_state_reg[1][4]_0 ;
  wire [0:0]Q;
  wire \code_comma_pipe_reg_n_0_[0] ;
  wire \code_comma_pipe_reg_n_0_[1] ;
  wire \code_valid_pipe_reg_n_0_[0] ;
  wire \code_valid_pipe_reg_n_0_[1] ;
  wire enable_align_i_1__1_n_0;
  wire [1:0]mgt_codecomma;
  wire [1:0]mgt_codevalid;
  wire [0:0]mgt_enable_align;
  wire [0:0]mgt_rx_reset;
  wire [0:0]mgt_rxlock;
  wire signal_detect_last;
  wire [4:0]state;
  wire usrclk;
  wire usrclk_reset;

  LUT6 #(
    .INIT(64'h0000000051505050)) 
    \FSM_sequential_state[1][0]_i_10__0 
       (.I0(\FSM_sequential_state[1][2]_i_3_n_0 ),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .I2(state[3]),
        .I3(Q),
        .I4(\code_comma_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][0]_i_10__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \FSM_sequential_state[1][0]_i_11__2 
       (.I0(state[2]),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .I2(state[1]),
        .I3(state[0]),
        .I4(state[3]),
        .O(\FSM_sequential_state[1][0]_i_11__2_n_0 ));
  LUT6 #(
    .INIT(64'h3FC00000FF800000)) 
    \FSM_sequential_state[1][0]_i_12__2 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][0]_i_12__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][0]_i_13__0 
       (.I0(Q),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8BBBBB8BB)) 
    \FSM_sequential_state[1][0]_i_1__2 
       (.I0(\FSM_sequential_state[1][0]_i_2__2_n_0 ),
        .I1(state[4]),
        .I2(\FSM_sequential_state[1][0]_i_3__2_n_0 ),
        .I3(\FSM_sequential_state[1][0]_i_4_n_0 ),
        .I4(\FSM_sequential_state[1][0]_i_5__0_n_0 ),
        .I5(\FSM_sequential_state[1][0]_i_6__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000EA40)) 
    \FSM_sequential_state[1][0]_i_2__2 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .I2(Q),
        .I3(\code_valid_pipe_reg_n_0_[1] ),
        .I4(\FSM_sequential_state[1][2]_i_3_n_0 ),
        .I5(\FSM_sequential_state[1][2]_i_4__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0535)) 
    \FSM_sequential_state[1][0]_i_3__2 
       (.I0(\FSM_sequential_state[1][0]_i_7__0_n_0 ),
        .I1(\FSM_sequential_state[1][0]_i_8__1_n_0 ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .O(\FSM_sequential_state[1][0]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCCFFFFCCFFCDF)) 
    \FSM_sequential_state[1][0]_i_4 
       (.I0(Q),
        .I1(\FSM_sequential_state[1][0]_i_9__2_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF5575)) 
    \FSM_sequential_state[1][0]_i_5__0 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .I2(state[2]),
        .I3(state[3]),
        .I4(\FSM_sequential_state[1][0]_i_10__0_n_0 ),
        .I5(\FSM_sequential_state[1][0]_i_11__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[1][0]_i_6__2 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(\FSM_sequential_state[1][0]_i_12__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'hFF3333F33C0000F2)) 
    \FSM_sequential_state[1][0]_i_7__0 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\FSM_sequential_state[1][0]_i_13__0_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hDDDDDDDD54555555)) 
    \FSM_sequential_state[1][0]_i_8__1 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(\code_comma_pipe_reg_n_0_[1] ),
        .I4(Q),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][0]_i_8__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \FSM_sequential_state[1][0]_i_9__2 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][0]_i_9__2_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F0F0FDFDFDFDD)) 
    \FSM_sequential_state[1][1]_i_1__0 
       (.I0(\FSM_sequential_state[1][1]_i_2__0_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_3__0_n_0 ),
        .I2(\FSM_sequential_state[1][1]_i_4__0_n_0 ),
        .I3(\FSM_sequential_state[1][1]_i_5__0_n_0 ),
        .I4(\FSM_sequential_state[1][1]_i_6__0_n_0 ),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFBBFEABFFFFFFFAF)) 
    \FSM_sequential_state[1][1]_i_2__0 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[1]),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00003800)) 
    \FSM_sequential_state[1][1]_i_3__0 
       (.I0(state[3]),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .I2(state[2]),
        .I3(state[1]),
        .I4(state[0]),
        .I5(\FSM_sequential_state[1][1]_i_7__0_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFDFDDDDDDDD)) 
    \FSM_sequential_state[1][1]_i_4__0 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[2]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\FSM_sequential_state[1][2]_i_3_n_0 ),
        .I4(state[3]),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][1]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000170000000000)) 
    \FSM_sequential_state[1][1]_i_5__0 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][1]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \FSM_sequential_state[1][1]_i_6__0 
       (.I0(Q),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFEFF00)) 
    \FSM_sequential_state[1][1]_i_7__0 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .I2(state[3]),
        .I3(state[2]),
        .I4(\FSM_sequential_state[1][4]_i_3__0_n_0 ),
        .I5(\FSM_sequential_state[1][1]_i_8__0_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state[1][1]_i_8__0 
       (.I0(state[1]),
        .I1(state[0]),
        .O(\FSM_sequential_state[1][1]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h222E222222222222)) 
    \FSM_sequential_state[1][2]_i_1 
       (.I0(\FSM_sequential_state[1][2]_i_2__2_n_0 ),
        .I1(state[4]),
        .I2(\FSM_sequential_state[1][2]_i_3_n_0 ),
        .I3(\FSM_sequential_state[1][2]_i_4__2_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF03350000)) 
    \FSM_sequential_state[1][2]_i_2__2 
       (.I0(state[3]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\FSM_sequential_state[1][2]_i_5_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_state[1][2]_i_3 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_state[1][2]_i_4__2 
       (.I0(state[2]),
        .I1(state[3]),
        .O(\FSM_sequential_state[1][2]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFDF0000)) 
    \FSM_sequential_state[1][2]_i_5 
       (.I0(\FSM_sequential_state[1][2]_i_6__2_n_0 ),
        .I1(state[2]),
        .I2(\code_valid_pipe_reg_n_0_[1] ),
        .I3(\FSM_sequential_state[1][2]_i_7_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][2]_i_8_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \FSM_sequential_state[1][2]_i_6__2 
       (.I0(\code_comma_pipe_reg_n_0_[1] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][2]_i_6__2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state[1][2]_i_7 
       (.I0(state[3]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9899232381832323)) 
    \FSM_sequential_state[1][2]_i_8 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(\code_comma_pipe_reg_n_0_[0] ),
        .I4(state[1]),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][2]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[1][3]_i_1__0 
       (.I0(state[4]),
        .I1(\FSM_sequential_state[1][3]_i_2__0_n_0 ),
        .O(\FSM_sequential_state[1][3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8992DBC773F37BF7)) 
    \FSM_sequential_state[1][3]_i_2__0 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][3]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF6FF)) 
    \FSM_sequential_state[1][4]_i_1__1 
       (.I0(signal_detect_last),
        .I1(Q),
        .I2(usrclk_reset),
        .I3(mgt_rxlock),
        .I4(mgt_rx_reset),
        .O(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \FSM_sequential_state[1][4]_i_2__0 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[0]),
        .I3(state[1]),
        .I4(\FSM_sequential_state[1][4]_i_3__0_n_0 ),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][4]_i_3__0 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][4]_i_3__0_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][0]_i_1__2_n_0 ),
        .Q(state[0]),
        .R(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][1]_i_1__0_n_0 ),
        .Q(state[1]),
        .R(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][2]_i_1_n_0 ),
        .Q(state[2]),
        .R(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][3]_i_1__0_n_0 ),
        .Q(state[3]),
        .R(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][4]_i_2__0_n_0 ),
        .Q(state[4]),
        .R(\FSM_sequential_state[1][4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[0]),
        .Q(\code_comma_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[1]),
        .Q(\code_comma_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[0]),
        .Q(\code_valid_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[1]),
        .Q(\code_valid_pipe_reg_n_0_[1] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    enable_align_i_1__1
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .I3(state[1]),
        .I4(state[0]),
        .O(enable_align_i_1__1_n_0));
  FDRE enable_align_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(enable_align_i_1__1_n_0),
        .Q(mgt_enable_align),
        .R(1'b0));
  FDRE signal_detect_last_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(signal_detect_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sync_ok[1]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h01)) 
    sync_status_i_3
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state_reg[1][4]_0 ));
endmodule

(* ORIG_REF_NAME = "sync_state_machine" *) 
module xaui_0_sync_state_machine_80
   (mgt_enable_align,
    \FSM_sequential_state_reg[1][4]_0 ,
    D,
    Q,
    usrclk,
    usrclk_reset,
    mgt_rxlock,
    mgt_rx_reset,
    mgt_codecomma,
    mgt_codevalid);
  output [0:0]mgt_enable_align;
  output \FSM_sequential_state_reg[1][4]_0 ;
  output [0:0]D;
  input [0:0]Q;
  input usrclk;
  input usrclk_reset;
  input [0:0]mgt_rxlock;
  input [0:0]mgt_rx_reset;
  input [1:0]mgt_codecomma;
  input [1:0]mgt_codevalid;

  wire [0:0]D;
  wire \FSM_sequential_state[1][0]_i_10__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_11__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_12__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_1__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_2__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_3__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_4__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_5__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_6__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_7__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_8_n_0 ;
  wire \FSM_sequential_state[1][0]_i_9__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_10__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_1__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_2__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_3__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_4__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_5__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_6__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_7__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_8__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_9__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_2__1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_3__2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_4__1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_5__1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_6__1_n_0 ;
  wire \FSM_sequential_state[1][3]_i_1__1_n_0 ;
  wire \FSM_sequential_state[1][3]_i_2__1_n_0 ;
  wire \FSM_sequential_state[1][4]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1][4]_i_2__1_n_0 ;
  wire \FSM_sequential_state[1][4]_i_3__1_n_0 ;
  wire \FSM_sequential_state_reg[1][2]_i_1__1_n_0 ;
  wire \FSM_sequential_state_reg[1][4]_0 ;
  wire [0:0]Q;
  wire \code_comma_pipe_reg_n_0_[0] ;
  wire \code_comma_pipe_reg_n_0_[1] ;
  wire \code_valid_pipe_reg_n_0_[0] ;
  wire \code_valid_pipe_reg_n_0_[1] ;
  wire enable_align_i_1__0_n_0;
  wire [1:0]mgt_codecomma;
  wire [1:0]mgt_codevalid;
  wire [0:0]mgt_enable_align;
  wire [0:0]mgt_rx_reset;
  wire [0:0]mgt_rxlock;
  wire signal_detect_last;
  wire [4:0]state;
  wire usrclk;
  wire usrclk_reset;

  LUT6 #(
    .INIT(64'hDDDDDDDD54555555)) 
    \FSM_sequential_state[1][0]_i_10__1 
       (.I0(state[3]),
        .I1(state[2]),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(\code_comma_pipe_reg_n_0_[1] ),
        .I4(Q),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][0]_i_10__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][0]_i_11__0 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(Q),
        .O(\FSM_sequential_state[1][0]_i_11__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_state[1][0]_i_12__1 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state[1][0]_i_12__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B8B8B88)) 
    \FSM_sequential_state[1][0]_i_1__1 
       (.I0(\FSM_sequential_state[1][0]_i_2__1_n_0 ),
        .I1(state[4]),
        .I2(\FSM_sequential_state[1][0]_i_3__1_n_0 ),
        .I3(\code_valid_pipe_reg_n_0_[1] ),
        .I4(\FSM_sequential_state[1][0]_i_4__1_n_0 ),
        .I5(\FSM_sequential_state[1][0]_i_5__1_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0101000100000001)) 
    \FSM_sequential_state[1][0]_i_2__1 
       (.I0(\FSM_sequential_state[1][0]_i_6__0_n_0 ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(\FSM_sequential_state[1][1]_i_9__0_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h3333202200000000)) 
    \FSM_sequential_state[1][0]_i_3__1 
       (.I0(\FSM_sequential_state[1][0]_i_7__1_n_0 ),
        .I1(\FSM_sequential_state[1][0]_i_8_n_0 ),
        .I2(state[3]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h3FC00000FF800000)) 
    \FSM_sequential_state[1][0]_i_4__1 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h0535)) 
    \FSM_sequential_state[1][0]_i_5__1 
       (.I0(\FSM_sequential_state[1][0]_i_9__1_n_0 ),
        .I1(\FSM_sequential_state[1][0]_i_10__1_n_0 ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .O(\FSM_sequential_state[1][0]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_state[1][0]_i_6__0 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][0]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFFFFFFFFF00BB)) 
    \FSM_sequential_state[1][0]_i_7__1 
       (.I0(\code_comma_pipe_reg_n_0_[1] ),
        .I1(\FSM_sequential_state[1][0]_i_11__0_n_0 ),
        .I2(state[2]),
        .I3(state[3]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][0]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h000CC0000CC00C80)) 
    \FSM_sequential_state[1][0]_i_8 
       (.I0(Q),
        .I1(\FSM_sequential_state[1][0]_i_12__1_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFF3333F33C0000F2)) 
    \FSM_sequential_state[1][0]_i_9__1 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\FSM_sequential_state[1][1]_i_9__0_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_9__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_10__0 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'h0DFF0D0D0D0D0D0D)) 
    \FSM_sequential_state[1][1]_i_1__1 
       (.I0(\FSM_sequential_state[1][1]_i_2__1_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_3__1_n_0 ),
        .I2(state[4]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(\FSM_sequential_state[1][1]_i_4__1_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFBFAFBFBAFFFF)) 
    \FSM_sequential_state[1][1]_i_2__1 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \FSM_sequential_state[1][1]_i_3__1 
       (.I0(\FSM_sequential_state[1][1]_i_5__1_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_6__1_n_0 ),
        .I2(state[3]),
        .I3(\code_comma_pipe_reg_n_0_[1] ),
        .I4(state[2]),
        .I5(\code_comma_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABABBBAAABAAA)) 
    \FSM_sequential_state[1][1]_i_4__1 
       (.I0(\FSM_sequential_state[1][1]_i_7__1_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_8__1_n_0 ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[4]),
        .I4(\FSM_sequential_state[1][1]_i_9__0_n_0 ),
        .I5(\code_comma_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h04044000)) 
    \FSM_sequential_state[1][1]_i_5__1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[3]),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_5__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'hDDDDDFFF)) 
    \FSM_sequential_state[1][1]_i_6__1 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\code_valid_pipe_reg_n_0_[1] ),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000017)) 
    \FSM_sequential_state[1][1]_i_7__1 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(state[4]),
        .I4(state[3]),
        .I5(\FSM_sequential_state[1][1]_i_10__0_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_7__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \FSM_sequential_state[1][1]_i_8__1 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\FSM_sequential_state[1][1]_i_8__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_9__0 
       (.I0(Q),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][1]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF03350000)) 
    \FSM_sequential_state[1][2]_i_2__1 
       (.I0(state[3]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\FSM_sequential_state[1][2]_i_4__1_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \FSM_sequential_state[1][2]_i_3__2 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[2]),
        .O(\FSM_sequential_state[1][2]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFF80000)) 
    \FSM_sequential_state[1][2]_i_4__1 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(\FSM_sequential_state[1][2]_i_5__1_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][2]_i_6__1_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_sequential_state[1][2]_i_5__1 
       (.I0(state[1]),
        .I1(state[3]),
        .I2(\code_valid_pipe_reg_n_0_[1] ),
        .I3(state[2]),
        .O(\FSM_sequential_state[1][2]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'hF00B00F5A01500F5)) 
    \FSM_sequential_state[1][2]_i_6__1 
       (.I0(state[3]),
        .I1(\code_comma_pipe_reg_n_0_[0] ),
        .I2(state[0]),
        .I3(state[2]),
        .I4(state[1]),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][2]_i_6__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[1][3]_i_1__1 
       (.I0(state[4]),
        .I1(\FSM_sequential_state[1][3]_i_2__1_n_0 ),
        .O(\FSM_sequential_state[1][3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hC737D07FF73B05F7)) 
    \FSM_sequential_state[1][3]_i_2__1 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[3]),
        .I2(state[1]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(state[0]),
        .O(\FSM_sequential_state[1][3]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF6FF)) 
    \FSM_sequential_state[1][4]_i_1__0 
       (.I0(signal_detect_last),
        .I1(Q),
        .I2(usrclk_reset),
        .I3(mgt_rxlock),
        .I4(mgt_rx_reset),
        .O(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \FSM_sequential_state[1][4]_i_2__1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(\FSM_sequential_state[1][4]_i_3__1_n_0 ),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][4]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][4]_i_3__1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][4]_i_3__1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][0]_i_1__1_n_0 ),
        .Q(state[0]),
        .R(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][1]_i_1__1_n_0 ),
        .Q(state[1]),
        .R(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_reg[1][2]_i_1__1_n_0 ),
        .Q(state[2]),
        .R(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  MUXF7 \FSM_sequential_state_reg[1][2]_i_1__1 
       (.I0(\FSM_sequential_state[1][2]_i_2__1_n_0 ),
        .I1(\FSM_sequential_state[1][2]_i_3__2_n_0 ),
        .O(\FSM_sequential_state_reg[1][2]_i_1__1_n_0 ),
        .S(state[4]));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][3]_i_1__1_n_0 ),
        .Q(state[3]),
        .R(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][4]_i_2__1_n_0 ),
        .Q(state[4]),
        .R(\FSM_sequential_state[1][4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[0]),
        .Q(\code_comma_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[1]),
        .Q(\code_comma_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[0]),
        .Q(\code_valid_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[1]),
        .Q(\code_valid_pipe_reg_n_0_[1] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    enable_align_i_1__0
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .I3(state[1]),
        .I4(state[0]),
        .O(enable_align_i_1__0_n_0));
  FDRE enable_align_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(enable_align_i_1__0_n_0),
        .Q(mgt_enable_align),
        .R(1'b0));
  FDRE signal_detect_last_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(signal_detect_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sync_ok[2]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h01)) 
    sync_status_i_4
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state_reg[1][4]_0 ));
endmodule

(* ORIG_REF_NAME = "sync_state_machine" *) 
module xaui_0_sync_state_machine_81
   (mgt_enable_align,
    \FSM_sequential_state_reg[1][4]_0 ,
    D,
    Q,
    usrclk,
    usrclk_reset,
    mgt_rxlock,
    mgt_rx_reset,
    mgt_codecomma,
    mgt_codevalid);
  output [0:0]mgt_enable_align;
  output \FSM_sequential_state_reg[1][4]_0 ;
  output [0:0]D;
  input [0:0]Q;
  input usrclk;
  input usrclk_reset;
  input [0:0]mgt_rxlock;
  input [0:0]mgt_rx_reset;
  input [1:0]mgt_codecomma;
  input [1:0]mgt_codevalid;

  wire [0:0]D;
  wire \FSM_sequential_state[1][0]_i_10__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_11__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_12__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_13__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_2__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_3__0_n_0 ;
  wire \FSM_sequential_state[1][0]_i_4__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_5__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_6__1_n_0 ;
  wire \FSM_sequential_state[1][0]_i_7__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_8__2_n_0 ;
  wire \FSM_sequential_state[1][0]_i_9__0_n_0 ;
  wire \FSM_sequential_state[1][1]_i_10__1_n_0 ;
  wire \FSM_sequential_state[1][1]_i_1__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_2__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_3__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_4__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_5__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_6__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_7__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_8__2_n_0 ;
  wire \FSM_sequential_state[1][1]_i_9__1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_2__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_3__1_n_0 ;
  wire \FSM_sequential_state[1][2]_i_4__0_n_0 ;
  wire \FSM_sequential_state[1][2]_i_5__2_n_0 ;
  wire \FSM_sequential_state[1][2]_i_6__0_n_0 ;
  wire \FSM_sequential_state[1][3]_i_1__2_n_0 ;
  wire \FSM_sequential_state[1][3]_i_2__2_n_0 ;
  wire \FSM_sequential_state[1][4]_i_1_n_0 ;
  wire \FSM_sequential_state[1][4]_i_2__2_n_0 ;
  wire \FSM_sequential_state[1][4]_i_3__2_n_0 ;
  wire \FSM_sequential_state_reg[1][2]_i_1__0_n_0 ;
  wire \FSM_sequential_state_reg[1][4]_0 ;
  wire [0:0]Q;
  wire \code_comma_pipe_reg_n_0_[0] ;
  wire \code_comma_pipe_reg_n_0_[1] ;
  wire \code_valid_pipe_reg_n_0_[0] ;
  wire \code_valid_pipe_reg_n_0_[1] ;
  wire enable_align_i_1_n_0;
  wire [1:0]mgt_codecomma;
  wire [1:0]mgt_codevalid;
  wire [0:0]mgt_enable_align;
  wire [0:0]mgt_rx_reset;
  wire [0:0]mgt_rxlock;
  wire signal_detect_last;
  wire [4:0]state;
  wire usrclk;
  wire usrclk_reset;

  LUT6 #(
    .INIT(64'hFF0FFFFFFFFF0D0D)) 
    \FSM_sequential_state[1][0]_i_10__2 
       (.I0(\FSM_sequential_state[1][0]_i_13__1_n_0 ),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[0]),
        .I5(state[1]),
        .O(\FSM_sequential_state[1][0]_i_10__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'hFFDFDDDD)) 
    \FSM_sequential_state[1][0]_i_11__1 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(state[3]),
        .I3(state[2]),
        .I4(state[1]),
        .O(\FSM_sequential_state[1][0]_i_11__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_state[1][0]_i_12__0 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state[1][0]_i_12__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][0]_i_13__1 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(Q),
        .O(\FSM_sequential_state[1][0]_i_13__1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8BBB8BBB8BBBB)) 
    \FSM_sequential_state[1][0]_i_1__0 
       (.I0(\FSM_sequential_state[1][0]_i_2__0_n_0 ),
        .I1(state[4]),
        .I2(\FSM_sequential_state[1][0]_i_3__0_n_0 ),
        .I3(\FSM_sequential_state[1][0]_i_4__2_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][0]_i_5__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0101000100000001)) 
    \FSM_sequential_state[1][0]_i_2__0 
       (.I0(\FSM_sequential_state[1][0]_i_6__1_n_0 ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(\FSM_sequential_state[1][1]_i_9__1_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEEE222EEEEE2E2E)) 
    \FSM_sequential_state[1][0]_i_3__0 
       (.I0(\FSM_sequential_state[1][0]_i_7__2_n_0 ),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\FSM_sequential_state[1][0]_i_8__2_n_0 ),
        .I4(\FSM_sequential_state[1][0]_i_9__0_n_0 ),
        .I5(\FSM_sequential_state[1][0]_i_10__2_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1000)) 
    \FSM_sequential_state[1][0]_i_4__2 
       (.I0(state[2]),
        .I1(\code_comma_pipe_reg_n_0_[0] ),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(Q),
        .I4(state[3]),
        .I5(\FSM_sequential_state[1][0]_i_11__1_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFF3333F33C0000F2)) 
    \FSM_sequential_state[1][0]_i_5__2 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[2]),
        .I2(state[3]),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\FSM_sequential_state[1][1]_i_9__1_n_0 ),
        .O(\FSM_sequential_state[1][0]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_state[1][0]_i_6__1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][0]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h22A8AA00AA00AA00)) 
    \FSM_sequential_state[1][0]_i_7__2 
       (.I0(\code_valid_pipe_reg_n_0_[0] ),
        .I1(state[3]),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[2]),
        .I4(state[1]),
        .I5(state[0]),
        .O(\FSM_sequential_state[1][0]_i_7__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state[1][0]_i_8__2 
       (.I0(state[3]),
        .I1(state[2]),
        .O(\FSM_sequential_state[1][0]_i_8__2_n_0 ));
  LUT6 #(
    .INIT(64'h000CC0000CC00C80)) 
    \FSM_sequential_state[1][0]_i_9__0 
       (.I0(Q),
        .I1(\FSM_sequential_state[1][0]_i_12__0_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[1]),
        .I5(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][0]_i_9__0_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_10__1 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_10__1_n_0 ));
  LUT6 #(
    .INIT(64'h0DFF0D0D0D0D0D0D)) 
    \FSM_sequential_state[1][1]_i_1__2 
       (.I0(\FSM_sequential_state[1][1]_i_2__2_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_3__2_n_0 ),
        .I2(state[4]),
        .I3(state[2]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(\FSM_sequential_state[1][1]_i_4__2_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFBFAFBFBAFFFF)) 
    \FSM_sequential_state[1][1]_i_2__2 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(state[2]),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBBBBBBA)) 
    \FSM_sequential_state[1][1]_i_3__2 
       (.I0(\FSM_sequential_state[1][1]_i_5__2_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_6__2_n_0 ),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(state[2]),
        .I4(\code_comma_pipe_reg_n_0_[0] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][1]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'hBAAABABBBAAABAAA)) 
    \FSM_sequential_state[1][1]_i_4__2 
       (.I0(\FSM_sequential_state[1][1]_i_7__2_n_0 ),
        .I1(\FSM_sequential_state[1][1]_i_8__2_n_0 ),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[4]),
        .I4(\FSM_sequential_state[1][1]_i_9__1_n_0 ),
        .I5(\code_comma_pipe_reg_n_0_[0] ),
        .O(\FSM_sequential_state[1][1]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h04044000)) 
    \FSM_sequential_state[1][1]_i_5__2 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[3]),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_5__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'hDDDDDFFF)) 
    \FSM_sequential_state[1][1]_i_6__2 
       (.I0(state[0]),
        .I1(state[1]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(\code_valid_pipe_reg_n_0_[1] ),
        .I4(state[2]),
        .O(\FSM_sequential_state[1][1]_i_6__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000017)) 
    \FSM_sequential_state[1][1]_i_7__2 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(state[4]),
        .I4(state[3]),
        .I5(\FSM_sequential_state[1][1]_i_10__1_n_0 ),
        .O(\FSM_sequential_state[1][1]_i_7__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \FSM_sequential_state[1][1]_i_8__2 
       (.I0(state[3]),
        .I1(state[1]),
        .I2(state[0]),
        .O(\FSM_sequential_state[1][1]_i_8__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[1][1]_i_9__1 
       (.I0(Q),
        .I1(\code_comma_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][1]_i_9__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF03350000)) 
    \FSM_sequential_state[1][2]_i_2__0 
       (.I0(state[3]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(state[1]),
        .I4(state[2]),
        .I5(\FSM_sequential_state[1][2]_i_4__0_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \FSM_sequential_state[1][2]_i_3__1 
       (.I0(state[1]),
        .I1(\code_valid_pipe_reg_n_0_[1] ),
        .I2(state[0]),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(state[3]),
        .I5(state[2]),
        .O(\FSM_sequential_state[1][2]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFF80000)) 
    \FSM_sequential_state[1][2]_i_4__0 
       (.I0(\code_comma_pipe_reg_n_0_[0] ),
        .I1(state[0]),
        .I2(\code_comma_pipe_reg_n_0_[1] ),
        .I3(\FSM_sequential_state[1][2]_i_5__2_n_0 ),
        .I4(\code_valid_pipe_reg_n_0_[0] ),
        .I5(\FSM_sequential_state[1][2]_i_6__0_n_0 ),
        .O(\FSM_sequential_state[1][2]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hFFDF)) 
    \FSM_sequential_state[1][2]_i_5__2 
       (.I0(\code_valid_pipe_reg_n_0_[1] ),
        .I1(state[2]),
        .I2(state[1]),
        .I3(state[3]),
        .O(\FSM_sequential_state[1][2]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h9899232381832323)) 
    \FSM_sequential_state[1][2]_i_6__0 
       (.I0(state[0]),
        .I1(state[2]),
        .I2(state[3]),
        .I3(\code_comma_pipe_reg_n_0_[0] ),
        .I4(state[1]),
        .I5(\code_valid_pipe_reg_n_0_[1] ),
        .O(\FSM_sequential_state[1][2]_i_6__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_sequential_state[1][3]_i_1__2 
       (.I0(state[4]),
        .I1(\FSM_sequential_state[1][3]_i_2__2_n_0 ),
        .O(\FSM_sequential_state[1][3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8992DBC773F37BF7)) 
    \FSM_sequential_state[1][3]_i_2__2 
       (.I0(state[1]),
        .I1(state[2]),
        .I2(\code_valid_pipe_reg_n_0_[0] ),
        .I3(state[0]),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[3]),
        .O(\FSM_sequential_state[1][3]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF6FF)) 
    \FSM_sequential_state[1][4]_i_1 
       (.I0(signal_detect_last),
        .I1(Q),
        .I2(usrclk_reset),
        .I3(mgt_rxlock),
        .I4(mgt_rx_reset),
        .O(\FSM_sequential_state[1][4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \FSM_sequential_state[1][4]_i_2__2 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(\FSM_sequential_state[1][4]_i_3__2_n_0 ),
        .I3(\code_valid_pipe_reg_n_0_[0] ),
        .I4(\code_valid_pipe_reg_n_0_[1] ),
        .I5(state[4]),
        .O(\FSM_sequential_state[1][4]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_sequential_state[1][4]_i_3__2 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\FSM_sequential_state[1][4]_i_3__2_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][0]_i_1__0_n_0 ),
        .Q(state[0]),
        .R(\FSM_sequential_state[1][4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][1]_i_1__2_n_0 ),
        .Q(state[1]),
        .R(\FSM_sequential_state[1][4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state_reg[1][2]_i_1__0_n_0 ),
        .Q(state[2]),
        .R(\FSM_sequential_state[1][4]_i_1_n_0 ));
  MUXF7 \FSM_sequential_state_reg[1][2]_i_1__0 
       (.I0(\FSM_sequential_state[1][2]_i_2__0_n_0 ),
        .I1(\FSM_sequential_state[1][2]_i_3__1_n_0 ),
        .O(\FSM_sequential_state_reg[1][2]_i_1__0_n_0 ),
        .S(state[4]));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][3]_i_1__2_n_0 ),
        .Q(state[3]),
        .R(\FSM_sequential_state[1][4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "sync_acquired_4a_1:01001,sync_acquired_4:01111,sync_acquired_3a_3:01100,comma_detect_3:00011,comma_detect_2:00010,sync_acquired_4a_3:01010,comma_detect_1:00001,sync_acquired_3a_2:01000,loss_of_sync:00000,sync_acquired_3a_1:01011,sync_acquired_2a_2:00110,sync_acquired_2a_1:01101,sync_acquired_3:00111,sync_acquired_2a_3:01110,sync_acquired_2:00101,sync_acquired_1:00100,sync_acquired_4a_2:10000" *) 
  FDRE \FSM_sequential_state_reg[1][4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\FSM_sequential_state[1][4]_i_2__2_n_0 ),
        .Q(state[4]),
        .R(\FSM_sequential_state[1][4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[0]),
        .Q(\code_comma_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_comma_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codecomma[1]),
        .Q(\code_comma_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[0]),
        .Q(\code_valid_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_valid_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(mgt_codevalid[1]),
        .Q(\code_valid_pipe_reg_n_0_[1] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    enable_align_i_1
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .I3(state[1]),
        .I4(state[0]),
        .O(enable_align_i_1_n_0));
  FDRE enable_align_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(enable_align_i_1_n_0),
        .Q(mgt_enable_align),
        .R(1'b0));
  FDRE signal_detect_last_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(signal_detect_last),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sync_ok[3]_i_1 
       (.I0(state[2]),
        .I1(state[3]),
        .I2(state[4]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h01)) 
    sync_status_i_2
       (.I0(state[4]),
        .I1(state[3]),
        .I2(state[2]),
        .O(\FSM_sequential_state_reg[1][4]_0 ));
endmodule

module xaui_0_tqmsg_capture
   (q_det,
    last_qmsg,
    q_det_reg_0,
    usrclk,
    \last_qmsg_reg[31]_0 ,
    D,
    \last_qmsg_reg[7]_0 ,
    \last_qmsg_reg[6]_0 ,
    txc_filtered);
  output q_det;
  output [31:0]last_qmsg;
  input q_det_reg_0;
  input usrclk;
  input \last_qmsg_reg[31]_0 ;
  input [23:0]D;
  input [7:0]\last_qmsg_reg[7]_0 ;
  input \last_qmsg_reg[6]_0 ;
  input [3:0]txc_filtered;

  wire [23:0]D;
  wire [31:0]last_qmsg;
  wire \last_qmsg[6]_i_1_n_0 ;
  wire \last_qmsg_reg[31]_0 ;
  wire \last_qmsg_reg[6]_0 ;
  wire [7:0]\last_qmsg_reg[7]_0 ;
  wire q_det;
  wire q_det_reg_0;
  wire [3:0]txc_filtered;
  wire usrclk;

  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \last_qmsg[6]_i_1 
       (.I0(\last_qmsg_reg[6]_0 ),
        .I1(txc_filtered[0]),
        .I2(txc_filtered[3]),
        .I3(txc_filtered[1]),
        .I4(txc_filtered[2]),
        .I5(\last_qmsg_reg[31]_0 ),
        .O(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[0] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [0]),
        .Q(last_qmsg[0]),
        .R(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[10] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[2]),
        .Q(last_qmsg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[11] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[3]),
        .Q(last_qmsg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[12] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[4]),
        .Q(last_qmsg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[13] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[5]),
        .Q(last_qmsg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[14] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[6]),
        .Q(last_qmsg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[15] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[7]),
        .Q(last_qmsg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[16] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[8]),
        .Q(last_qmsg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[17] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[9]),
        .Q(last_qmsg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[18] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[10]),
        .Q(last_qmsg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[19] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[11]),
        .Q(last_qmsg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[1] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [1]),
        .Q(last_qmsg[1]),
        .R(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[20] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[12]),
        .Q(last_qmsg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[21] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[13]),
        .Q(last_qmsg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[22] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[14]),
        .Q(last_qmsg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[23] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[15]),
        .Q(last_qmsg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[24] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[16]),
        .Q(last_qmsg[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[25] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[17]),
        .Q(last_qmsg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[26] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[18]),
        .Q(last_qmsg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[27] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[19]),
        .Q(last_qmsg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[28] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[20]),
        .Q(last_qmsg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[29] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[21]),
        .Q(last_qmsg[29]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[2] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [2]),
        .Q(last_qmsg[2]),
        .S(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[30] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[22]),
        .Q(last_qmsg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[31] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[23]),
        .Q(last_qmsg[31]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[3] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [3]),
        .Q(last_qmsg[3]),
        .S(\last_qmsg[6]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[4] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [4]),
        .Q(last_qmsg[4]),
        .S(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[5] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [5]),
        .Q(last_qmsg[5]),
        .R(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[6] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [6]),
        .Q(last_qmsg[6]),
        .R(\last_qmsg[6]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[7] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(\last_qmsg_reg[7]_0 [7]),
        .Q(last_qmsg[7]),
        .S(\last_qmsg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[8] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[0]),
        .Q(last_qmsg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_qmsg_reg[9] 
       (.C(usrclk),
        .CE(\last_qmsg_reg[31]_0 ),
        .D(D[1]),
        .Q(last_qmsg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    q_det_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(q_det_reg_0),
        .Q(q_det),
        .R(1'b0));
endmodule

module xaui_0_tx
   (mgt_txdata,
    mgt_txcharisk,
    usrclk,
    usrclk_reset,
    configuration_vector,
    xgmii_txd,
    xgmii_txc);
  output [63:0]mgt_txdata;
  output [7:0]mgt_txcharisk;
  input usrclk;
  input usrclk_reset;
  input [2:0]configuration_vector;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;

  wire \G_FILTER_HIGH[4].filter_n_1 ;
  wire \G_FILTER_HIGH[4].filter_n_10 ;
  wire \G_FILTER_LOW[0].filter_n_1 ;
  wire align_n_10;
  wire align_n_5;
  wire align_n_6;
  wire align_n_7;
  wire align_n_8;
  wire align_n_9;
  wire [3:0]c;
  wire c12_in;
  wire c15_in;
  wire c9_in;
  wire [1:0]code_sel;
  wire [2:0]configuration_vector;
  wire [1:0]count;
  wire [7:0]d;
  wire [31:8]data1;
  wire [31:8]data1__0;
  wire extra_a;
  wire [1:0]is_idle;
  wire [7:0]is_invalid_k;
  wire [1:0]is_q;
  wire is_terminate;
  wire \is_terminate[0]_i_1_n_0 ;
  wire \is_terminate[0]_i_2_n_0 ;
  wire \is_terminate[0]_i_3_n_0 ;
  wire \is_terminate[0]_i_4_n_0 ;
  wire \is_terminate[0]_i_5_n_0 ;
  wire \is_terminate[0]_i_6_n_0 ;
  wire \is_terminate[1]_i_1_n_0 ;
  wire \is_terminate[1]_i_2_n_0 ;
  wire \is_terminate[1]_i_3_n_0 ;
  wire \is_terminate[1]_i_4_n_0 ;
  wire \is_terminate[1]_i_5_n_0 ;
  wire \is_terminate[1]_i_6_n_0 ;
  wire \is_terminate_reg_n_0_[0] ;
  wire is_txd_IDLE;
  wire [31:0]last_qmsg;
  wire [7:0]mgt_txcharisk;
  wire [63:0]mgt_txdata;
  wire [31:8]p_1_in;
  wire [1:0]p_1_in_0;
  wire q_det;
  wire recoder_n_0;
  wire recoder_n_1;
  wire recoder_n_2;
  wire recoder_n_3;
  wire recoder_n_4;
  wire state_machine_n_0;
  wire state_machine_n_1;
  wire state_machine_n_10;
  wire state_machine_n_11;
  wire state_machine_n_12;
  wire state_machine_n_13;
  wire state_machine_n_14;
  wire state_machine_n_15;
  wire state_machine_n_16;
  wire state_machine_n_17;
  wire state_machine_n_18;
  wire state_machine_n_19;
  wire state_machine_n_2;
  wire state_machine_n_20;
  wire state_machine_n_21;
  wire state_machine_n_22;
  wire state_machine_n_23;
  wire state_machine_n_24;
  wire state_machine_n_25;
  wire state_machine_n_26;
  wire state_machine_n_27;
  wire state_machine_n_28;
  wire state_machine_n_29;
  wire state_machine_n_3;
  wire state_machine_n_30;
  wire state_machine_n_31;
  wire state_machine_n_32;
  wire state_machine_n_33;
  wire state_machine_n_34;
  wire state_machine_n_35;
  wire state_machine_n_36;
  wire state_machine_n_37;
  wire state_machine_n_38;
  wire state_machine_n_39;
  wire state_machine_n_4;
  wire state_machine_n_40;
  wire state_machine_n_41;
  wire state_machine_n_42;
  wire state_machine_n_43;
  wire state_machine_n_44;
  wire state_machine_n_45;
  wire state_machine_n_46;
  wire state_machine_n_47;
  wire state_machine_n_48;
  wire state_machine_n_49;
  wire state_machine_n_5;
  wire state_machine_n_50;
  wire state_machine_n_51;
  wire state_machine_n_52;
  wire state_machine_n_53;
  wire state_machine_n_54;
  wire state_machine_n_55;
  wire state_machine_n_56;
  wire state_machine_n_57;
  wire state_machine_n_58;
  wire state_machine_n_59;
  wire state_machine_n_6;
  wire state_machine_n_60;
  wire state_machine_n_61;
  wire state_machine_n_62;
  wire state_machine_n_63;
  wire state_machine_n_64;
  wire state_machine_n_65;
  wire state_machine_n_66;
  wire state_machine_n_67;
  wire state_machine_n_68;
  wire state_machine_n_69;
  wire state_machine_n_7;
  wire state_machine_n_70;
  wire state_machine_n_71;
  wire state_machine_n_72;
  wire state_machine_n_73;
  wire state_machine_n_74;
  wire state_machine_n_75;
  wire state_machine_n_76;
  wire state_machine_n_77;
  wire state_machine_n_78;
  wire state_machine_n_79;
  wire state_machine_n_8;
  wire state_machine_n_80;
  wire state_machine_n_81;
  wire state_machine_n_82;
  wire state_machine_n_83;
  wire state_machine_n_84;
  wire state_machine_n_9;
  wire \tx_is_idle[0]_i_2_n_0 ;
  wire \tx_is_idle[1]_i_2_n_0 ;
  wire [1:0]tx_is_idle_comb;
  wire \tx_is_invalid_k_reg[0]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[0]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[0]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[1]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[1]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[1]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[2]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[2]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[2]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[3]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[3]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[3]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[4]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[4]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[4]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[5]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[5]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[5]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[6]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[6]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[6]_i_3_n_0 ;
  wire \tx_is_invalid_k_reg[7]_i_1_n_0 ;
  wire \tx_is_invalid_k_reg[7]_i_2_n_0 ;
  wire \tx_is_invalid_k_reg[7]_i_3_n_0 ;
  wire \tx_is_q[0]_i_2_n_0 ;
  wire \tx_is_q[0]_i_3_n_0 ;
  wire \tx_is_q[1]_i_2_n_0 ;
  wire \tx_is_q[1]_i_3_n_0 ;
  wire [1:0]tx_is_q_comb;
  wire [7:0]txc_filtered;
  wire [7:0]txc_pipe_2;
  wire \txc_pipe_reg_n_0_[0] ;
  wire [39:0]txd_filtered;
  wire txd_is_IDLE;
  wire \txd_is_IDLE_reg[0]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[0]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[1]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[1]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[2]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[2]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[3]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[3]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[4]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[4]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[5]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[5]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[6]_i_1_n_0 ;
  wire \txd_is_IDLE_reg[6]_i_2_n_0 ;
  wire \txd_is_IDLE_reg[7]_i_2_n_0 ;
  wire \txd_is_IDLE_reg_reg_n_0_[0] ;
  wire \txd_is_IDLE_reg_reg_n_0_[2] ;
  wire \txd_is_IDLE_reg_reg_n_0_[3] ;
  wire \txd_is_IDLE_reg_reg_n_0_[4] ;
  wire \txd_is_IDLE_reg_reg_n_0_[5] ;
  wire \txd_is_IDLE_reg_reg_n_0_[6] ;
  wire \txd_is_IDLE_reg_reg_n_0_[7] ;
  wire [63:0]txd_pipe_2;
  wire \txd_pipe_reg_n_0_[0] ;
  wire \txd_pipe_reg_n_0_[16] ;
  wire \txd_pipe_reg_n_0_[17] ;
  wire \txd_pipe_reg_n_0_[18] ;
  wire \txd_pipe_reg_n_0_[19] ;
  wire \txd_pipe_reg_n_0_[1] ;
  wire \txd_pipe_reg_n_0_[20] ;
  wire \txd_pipe_reg_n_0_[21] ;
  wire \txd_pipe_reg_n_0_[22] ;
  wire \txd_pipe_reg_n_0_[23] ;
  wire \txd_pipe_reg_n_0_[24] ;
  wire \txd_pipe_reg_n_0_[25] ;
  wire \txd_pipe_reg_n_0_[26] ;
  wire \txd_pipe_reg_n_0_[27] ;
  wire \txd_pipe_reg_n_0_[28] ;
  wire \txd_pipe_reg_n_0_[29] ;
  wire \txd_pipe_reg_n_0_[2] ;
  wire \txd_pipe_reg_n_0_[30] ;
  wire \txd_pipe_reg_n_0_[31] ;
  wire \txd_pipe_reg_n_0_[32] ;
  wire \txd_pipe_reg_n_0_[33] ;
  wire \txd_pipe_reg_n_0_[34] ;
  wire \txd_pipe_reg_n_0_[35] ;
  wire \txd_pipe_reg_n_0_[36] ;
  wire \txd_pipe_reg_n_0_[37] ;
  wire \txd_pipe_reg_n_0_[38] ;
  wire \txd_pipe_reg_n_0_[39] ;
  wire \txd_pipe_reg_n_0_[3] ;
  wire \txd_pipe_reg_n_0_[40] ;
  wire \txd_pipe_reg_n_0_[41] ;
  wire \txd_pipe_reg_n_0_[42] ;
  wire \txd_pipe_reg_n_0_[43] ;
  wire \txd_pipe_reg_n_0_[44] ;
  wire \txd_pipe_reg_n_0_[45] ;
  wire \txd_pipe_reg_n_0_[46] ;
  wire \txd_pipe_reg_n_0_[47] ;
  wire \txd_pipe_reg_n_0_[48] ;
  wire \txd_pipe_reg_n_0_[49] ;
  wire \txd_pipe_reg_n_0_[4] ;
  wire \txd_pipe_reg_n_0_[50] ;
  wire \txd_pipe_reg_n_0_[51] ;
  wire \txd_pipe_reg_n_0_[52] ;
  wire \txd_pipe_reg_n_0_[53] ;
  wire \txd_pipe_reg_n_0_[54] ;
  wire \txd_pipe_reg_n_0_[55] ;
  wire \txd_pipe_reg_n_0_[56] ;
  wire \txd_pipe_reg_n_0_[57] ;
  wire \txd_pipe_reg_n_0_[58] ;
  wire \txd_pipe_reg_n_0_[59] ;
  wire \txd_pipe_reg_n_0_[5] ;
  wire \txd_pipe_reg_n_0_[60] ;
  wire \txd_pipe_reg_n_0_[61] ;
  wire \txd_pipe_reg_n_0_[62] ;
  wire \txd_pipe_reg_n_0_[63] ;
  wire \txd_pipe_reg_n_0_[6] ;
  wire \txd_pipe_reg_n_0_[7] ;
  wire usrclk;
  wire usrclk_reset;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  xaui_0_tx_filter \G_FILTER_HIGH[4].filter 
       (.Q(txc_pipe_2[4]),
        .is_invalid_k(is_invalid_k[4]),
        .is_terminate(is_terminate),
        .\last_qmsg_reg[31] (txc_filtered[7:5]),
        .txc_filtered(txc_filtered[4]),
        .txc_out_reg_0(\G_FILTER_HIGH[4].filter_n_10 ),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[4] ),
        .\txd_out_reg[3]_0 (\G_FILTER_HIGH[4].filter_n_1 ),
        .\txd_out_reg[7]_0 (txd_filtered[39:32]),
        .\txd_out_reg[7]_1 (txd_pipe_2[39:32]),
        .usrclk(usrclk));
  xaui_0_tx_filter_72 \G_FILTER_HIGH[5].filter 
       (.D(p_1_in[15:8]),
        .Q(txc_pipe_2[5]),
        .is_invalid_k(is_invalid_k[5]),
        .is_terminate(is_terminate),
        .\last_qmsg_reg[15] (data1[15:8]),
        .\last_qmsg_reg[8] (\G_FILTER_HIGH[4].filter_n_10 ),
        .txc_out_reg_0(txc_filtered[5]),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[5] ),
        .\txd_out_reg[7]_0 (data1__0[15:8]),
        .\txd_out_reg[7]_1 (txd_pipe_2[47:40]),
        .usrclk(usrclk));
  xaui_0_tx_filter_73 \G_FILTER_HIGH[6].filter 
       (.D(p_1_in[23:16]),
        .Q(txc_pipe_2[6]),
        .is_invalid_k(is_invalid_k[6]),
        .is_terminate(is_terminate),
        .\last_qmsg_reg[16] (\G_FILTER_HIGH[4].filter_n_10 ),
        .\last_qmsg_reg[23] (data1[23:16]),
        .txc_out_reg_0(txc_filtered[6]),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[6] ),
        .\txd_out_reg[7]_0 (data1__0[23:16]),
        .\txd_out_reg[7]_1 (txd_pipe_2[55:48]),
        .usrclk(usrclk));
  xaui_0_tx_filter_74 \G_FILTER_HIGH[7].filter 
       (.D(p_1_in[31:24]),
        .Q(txc_pipe_2[7]),
        .is_invalid_k(is_invalid_k[7]),
        .is_terminate(is_terminate),
        .\last_qmsg_reg[24] (\G_FILTER_HIGH[4].filter_n_10 ),
        .\last_qmsg_reg[31] (data1[31:24]),
        .txc_out_reg_0(txc_filtered[7]),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[7] ),
        .\txd_out_reg[7]_0 (data1__0[31:24]),
        .\txd_out_reg[7]_1 (txd_pipe_2[63:56]),
        .usrclk(usrclk));
  xaui_0_tx_filter_75 \G_FILTER_LOW[0].filter 
       (.Q(txc_pipe_2[0]),
        .is_invalid_k(is_invalid_k[0]),
        .\last_qmsg_reg[31] (\G_FILTER_HIGH[4].filter_n_10 ),
        .\last_qmsg_reg[31]_0 (txc_filtered[3:1]),
        .txc_filtered(txc_filtered[0]),
        .txc_out_reg_0(\G_FILTER_LOW[0].filter_n_1 ),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[0] ),
        .\txd_out_reg[0]_1 (\is_terminate_reg_n_0_[0] ),
        .\txd_out_reg[7]_0 (txd_filtered[7:0]),
        .\txd_out_reg[7]_1 (txd_pipe_2[7:0]),
        .usrclk(usrclk));
  xaui_0_tx_filter_76 \G_FILTER_LOW[1].filter 
       (.Q(txc_pipe_2[1]),
        .is_invalid_k(is_invalid_k[1]),
        .txc_out_reg_0(txc_filtered[1]),
        .\txd_out_reg[0]_0 (is_txd_IDLE),
        .\txd_out_reg[0]_1 (\is_terminate_reg_n_0_[0] ),
        .\txd_out_reg[7]_0 (data1[15:8]),
        .\txd_out_reg[7]_1 (txd_pipe_2[15:8]),
        .usrclk(usrclk));
  xaui_0_tx_filter_77 \G_FILTER_LOW[2].filter 
       (.Q(txc_pipe_2[2]),
        .is_invalid_k(is_invalid_k[2]),
        .txc_out_reg_0(txc_filtered[2]),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[2] ),
        .\txd_out_reg[0]_1 (\is_terminate_reg_n_0_[0] ),
        .\txd_out_reg[7]_0 (data1[23:16]),
        .\txd_out_reg[7]_1 (txd_pipe_2[23:16]),
        .usrclk(usrclk));
  xaui_0_tx_filter_78 \G_FILTER_LOW[3].filter 
       (.Q(txc_pipe_2[3]),
        .is_invalid_k(is_invalid_k[3]),
        .txc_out_reg_0(txc_filtered[3]),
        .\txd_out_reg[0]_0 (\txd_is_IDLE_reg_reg_n_0_[3] ),
        .\txd_out_reg[0]_1 (\is_terminate_reg_n_0_[0] ),
        .\txd_out_reg[7]_0 (data1[31:24]),
        .\txd_out_reg[7]_1 (txd_pipe_2[31:24]),
        .usrclk(usrclk));
  xaui_0_align_counter align
       (.D({state_machine_n_44,state_machine_n_45}),
        .Q(count),
        .\count_reg[2]_0 (align_n_7),
        .\count_reg[2]_1 (align_n_10),
        .extra_a(extra_a),
        .extra_a_reg_0(align_n_8),
        .extra_a_reg_1(state_machine_n_43),
        .\prbs_reg[2]_0 (p_1_in_0),
        .\prbs_reg[7]_0 (state_machine_n_46),
        .q_det(q_det),
        .\state[1][1]_i_3 (is_q),
        .\state[1][1]_i_3_0 (is_idle),
        .\state_reg[1][1] (state_machine_n_0),
        .\state_reg[1][1]_0 (state_machine_n_64),
        .\state_reg[1][1]_1 (state_machine_n_69),
        .\state_reg[1][1]_2 (state_machine_n_1),
        .\state_reg[1][2] (align_n_5),
        .\tx_is_idle_reg[1] (align_n_6),
        .\tx_is_q_reg[0] (align_n_9),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  LUT5 #(
    .INIT(32'hAEFFAEAE)) 
    \is_terminate[0]_i_1 
       (.I0(\is_terminate[0]_i_2_n_0 ),
        .I1(\is_terminate[0]_i_3_n_0 ),
        .I2(\tx_is_invalid_k_reg[1]_i_2_n_0 ),
        .I3(\tx_is_invalid_k_reg[0]_i_2_n_0 ),
        .I4(\is_terminate[0]_i_4_n_0 ),
        .O(\is_terminate[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80008000)) 
    \is_terminate[0]_i_2 
       (.I0(\txd_pipe_reg_n_0_[21] ),
        .I1(\txd_pipe_reg_n_0_[23] ),
        .I2(\txd_pipe_reg_n_0_[22] ),
        .I3(\is_terminate[0]_i_5_n_0 ),
        .I4(\tx_is_invalid_k_reg[3]_i_2_n_0 ),
        .I5(\is_terminate[0]_i_6_n_0 ),
        .O(\is_terminate[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[0]_i_3 
       (.I0(d[2]),
        .I1(d[1]),
        .I2(c15_in),
        .I3(d[0]),
        .I4(d[4]),
        .I5(d[3]),
        .O(\is_terminate[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[0]_i_4 
       (.I0(\txd_pipe_reg_n_0_[2] ),
        .I1(\txd_pipe_reg_n_0_[1] ),
        .I2(\txc_pipe_reg_n_0_[0] ),
        .I3(\txd_pipe_reg_n_0_[0] ),
        .I4(\txd_pipe_reg_n_0_[4] ),
        .I5(\txd_pipe_reg_n_0_[3] ),
        .O(\is_terminate[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[0]_i_5 
       (.I0(\txd_pipe_reg_n_0_[18] ),
        .I1(\txd_pipe_reg_n_0_[17] ),
        .I2(c12_in),
        .I3(\txd_pipe_reg_n_0_[16] ),
        .I4(\txd_pipe_reg_n_0_[20] ),
        .I5(\txd_pipe_reg_n_0_[19] ),
        .O(\is_terminate[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[0]_i_6 
       (.I0(\txd_pipe_reg_n_0_[28] ),
        .I1(\txd_pipe_reg_n_0_[25] ),
        .I2(c9_in),
        .I3(\txd_pipe_reg_n_0_[24] ),
        .I4(\txd_pipe_reg_n_0_[27] ),
        .I5(\txd_pipe_reg_n_0_[26] ),
        .O(\is_terminate[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hAEFFAEAE)) 
    \is_terminate[1]_i_1 
       (.I0(\is_terminate[1]_i_2_n_0 ),
        .I1(\is_terminate[1]_i_3_n_0 ),
        .I2(\tx_is_invalid_k_reg[5]_i_2_n_0 ),
        .I3(\tx_is_invalid_k_reg[4]_i_2_n_0 ),
        .I4(\is_terminate[1]_i_4_n_0 ),
        .O(\is_terminate[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80008000)) 
    \is_terminate[1]_i_2 
       (.I0(\txd_pipe_reg_n_0_[53] ),
        .I1(\txd_pipe_reg_n_0_[55] ),
        .I2(\txd_pipe_reg_n_0_[54] ),
        .I3(\is_terminate[1]_i_5_n_0 ),
        .I4(\tx_is_invalid_k_reg[7]_i_2_n_0 ),
        .I5(\is_terminate[1]_i_6_n_0 ),
        .O(\is_terminate[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[1]_i_3 
       (.I0(\txd_pipe_reg_n_0_[42] ),
        .I1(\txd_pipe_reg_n_0_[41] ),
        .I2(c[1]),
        .I3(\txd_pipe_reg_n_0_[40] ),
        .I4(\txd_pipe_reg_n_0_[44] ),
        .I5(\txd_pipe_reg_n_0_[43] ),
        .O(\is_terminate[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[1]_i_4 
       (.I0(\txd_pipe_reg_n_0_[34] ),
        .I1(\txd_pipe_reg_n_0_[33] ),
        .I2(c[0]),
        .I3(\txd_pipe_reg_n_0_[32] ),
        .I4(\txd_pipe_reg_n_0_[36] ),
        .I5(\txd_pipe_reg_n_0_[35] ),
        .O(\is_terminate[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[1]_i_5 
       (.I0(\txd_pipe_reg_n_0_[50] ),
        .I1(\txd_pipe_reg_n_0_[49] ),
        .I2(c[2]),
        .I3(\txd_pipe_reg_n_0_[48] ),
        .I4(\txd_pipe_reg_n_0_[52] ),
        .I5(\txd_pipe_reg_n_0_[51] ),
        .O(\is_terminate[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \is_terminate[1]_i_6 
       (.I0(\txd_pipe_reg_n_0_[60] ),
        .I1(\txd_pipe_reg_n_0_[57] ),
        .I2(c[3]),
        .I3(\txd_pipe_reg_n_0_[56] ),
        .I4(\txd_pipe_reg_n_0_[59] ),
        .I5(\txd_pipe_reg_n_0_[58] ),
        .O(\is_terminate[1]_i_6_n_0 ));
  FDRE \is_terminate_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\is_terminate[0]_i_1_n_0 ),
        .Q(\is_terminate_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \is_terminate_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\is_terminate[1]_i_1_n_0 ),
        .Q(is_terminate),
        .R(1'b0));
  xaui_0_k_r_prbs k_r_prbs_i
       (.Q({code_sel[0],code_sel[1]}),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset));
  xaui_0_tx_recoder recoder
       (.D({state_machine_n_47,state_machine_n_48,state_machine_n_49,state_machine_n_50,state_machine_n_51,state_machine_n_52,state_machine_n_53,state_machine_n_54,state_machine_n_55,state_machine_n_56,state_machine_n_57}),
        .configuration_vector(configuration_vector),
        .\configuration_vector[4] (recoder_n_2),
        .\configuration_vector[4]_0 (recoder_n_3),
        .\configuration_vector[4]_1 (recoder_n_4),
        .\configuration_vector[6] (recoder_n_0),
        .\configuration_vector[6]_0 (recoder_n_1),
        .mgt_txcharisk(mgt_txcharisk),
        .mgt_txdata(mgt_txdata),
        .\txc_out_reg[7]_0 ({state_machine_n_10,state_machine_n_11,state_machine_n_12,state_machine_n_13,state_machine_n_14,state_machine_n_15,state_machine_n_16,state_machine_n_17}),
        .\txd_out_reg[0]_0 (state_machine_n_30),
        .\txd_out_reg[10]_0 (state_machine_n_82),
        .\txd_out_reg[11]_0 (state_machine_n_25),
        .\txd_out_reg[12]_0 (state_machine_n_81),
        .\txd_out_reg[14]_0 (state_machine_n_7),
        .\txd_out_reg[15]_0 (state_machine_n_61),
        .\txd_out_reg[16]_0 (state_machine_n_24),
        .\txd_out_reg[17]_0 (state_machine_n_23),
        .\txd_out_reg[18]_0 (state_machine_n_80),
        .\txd_out_reg[19]_0 (state_machine_n_22),
        .\txd_out_reg[1]_0 (state_machine_n_29),
        .\txd_out_reg[20]_0 (state_machine_n_79),
        .\txd_out_reg[22]_0 (state_machine_n_8),
        .\txd_out_reg[23]_0 (state_machine_n_59),
        .\txd_out_reg[24]_0 (state_machine_n_21),
        .\txd_out_reg[25]_0 (state_machine_n_20),
        .\txd_out_reg[26]_0 (state_machine_n_78),
        .\txd_out_reg[27]_0 (state_machine_n_19),
        .\txd_out_reg[28]_0 (state_machine_n_58),
        .\txd_out_reg[28]_1 (state_machine_n_77),
        .\txd_out_reg[2]_0 (state_machine_n_84),
        .\txd_out_reg[30]_0 (state_machine_n_9),
        .\txd_out_reg[31]_0 (state_machine_n_62),
        .\txd_out_reg[32]_0 (state_machine_n_31),
        .\txd_out_reg[33]_0 (state_machine_n_32),
        .\txd_out_reg[34]_0 (state_machine_n_76),
        .\txd_out_reg[35]_0 (state_machine_n_33),
        .\txd_out_reg[36]_0 (state_machine_n_75),
        .\txd_out_reg[38]_0 (state_machine_n_2),
        .\txd_out_reg[39]_0 (state_machine_n_63),
        .\txd_out_reg[3]_0 (state_machine_n_28),
        .\txd_out_reg[41]_0 (state_machine_n_34),
        .\txd_out_reg[42]_0 (state_machine_n_74),
        .\txd_out_reg[43]_0 (state_machine_n_39),
        .\txd_out_reg[44]_0 (state_machine_n_73),
        .\txd_out_reg[46]_0 (state_machine_n_3),
        .\txd_out_reg[47]_0 (state_machine_n_65),
        .\txd_out_reg[48]_0 (state_machine_n_35),
        .\txd_out_reg[49]_0 (state_machine_n_36),
        .\txd_out_reg[4]_0 (state_machine_n_83),
        .\txd_out_reg[50]_0 (state_machine_n_72),
        .\txd_out_reg[51]_0 (state_machine_n_40),
        .\txd_out_reg[52]_0 (state_machine_n_67),
        .\txd_out_reg[52]_1 (state_machine_n_71),
        .\txd_out_reg[54]_0 (state_machine_n_4),
        .\txd_out_reg[55]_0 (state_machine_n_66),
        .\txd_out_reg[56]_0 (state_machine_n_37),
        .\txd_out_reg[57]_0 (state_machine_n_38),
        .\txd_out_reg[59]_0 (state_machine_n_41),
        .\txd_out_reg[62]_0 (state_machine_n_5),
        .\txd_out_reg[63]_0 (state_machine_n_70),
        .\txd_out_reg[63]_1 (state_machine_n_68),
        .\txd_out_reg[6]_0 (state_machine_n_6),
        .\txd_out_reg[7]_0 (state_machine_n_18),
        .\txd_out_reg[7]_1 (state_machine_n_60),
        .\txd_out_reg[8]_0 (state_machine_n_27),
        .\txd_out_reg[9]_0 (state_machine_n_26),
        .usrclk(usrclk));
  xaui_0_tx_state_machine state_machine
       (.D({state_machine_n_44,state_machine_n_45}),
        .Q(is_q),
        .configuration_vector(configuration_vector),
        .\configuration_vector[4] (state_machine_n_58),
        .\configuration_vector[5] ({state_machine_n_10,state_machine_n_11,state_machine_n_12,state_machine_n_13,state_machine_n_14,state_machine_n_15,state_machine_n_16,state_machine_n_17}),
        .\count_reg[1] (p_1_in_0),
        .\count_reg[1]_0 (count),
        .data1(data1),
        .data1__0(data1__0),
        .extra_a(extra_a),
        .last_qmsg(last_qmsg),
        .\last_qmsg_reg[0] (state_machine_n_30),
        .\last_qmsg_reg[0]_0 (state_machine_n_31),
        .\last_qmsg_reg[11] (state_machine_n_25),
        .\last_qmsg_reg[11]_0 (state_machine_n_39),
        .\last_qmsg_reg[14] (state_machine_n_3),
        .\last_qmsg_reg[14]_0 (state_machine_n_7),
        .\last_qmsg_reg[16] (state_machine_n_24),
        .\last_qmsg_reg[16]_0 (state_machine_n_35),
        .\last_qmsg_reg[19] (state_machine_n_22),
        .\last_qmsg_reg[19]_0 (state_machine_n_40),
        .\last_qmsg_reg[22] (state_machine_n_4),
        .\last_qmsg_reg[22]_0 (state_machine_n_8),
        .\last_qmsg_reg[24] (state_machine_n_21),
        .\last_qmsg_reg[24]_0 (state_machine_n_37),
        .\last_qmsg_reg[27] (state_machine_n_19),
        .\last_qmsg_reg[27]_0 (state_machine_n_41),
        .\last_qmsg_reg[29] ({state_machine_n_47,state_machine_n_48,state_machine_n_49,state_machine_n_50,state_machine_n_51,state_machine_n_52,state_machine_n_53,state_machine_n_54,state_machine_n_55,state_machine_n_56,state_machine_n_57}),
        .\last_qmsg_reg[30] (state_machine_n_5),
        .\last_qmsg_reg[30]_0 (state_machine_n_9),
        .\last_qmsg_reg[3] (state_machine_n_28),
        .\last_qmsg_reg[3]_0 (state_machine_n_33),
        .\last_qmsg_reg[6] (state_machine_n_2),
        .\last_qmsg_reg[6]_0 (state_machine_n_6),
        .\last_qmsg_reg[8] (state_machine_n_27),
        .next_ifg_is_a_reg_0(state_machine_n_1),
        .q_det(q_det),
        .q_det_reg(\G_FILTER_LOW[0].filter_n_1 ),
        .\state_reg[0][0]_0 (state_machine_n_18),
        .\state_reg[0][0]_1 (state_machine_n_42),
        .\state_reg[0][0]_2 (state_machine_n_46),
        .\state_reg[0][0]_3 ({code_sel[0],code_sel[1]}),
        .\state_reg[0][0]_4 (align_n_7),
        .\state_reg[0][2]_0 (state_machine_n_20),
        .\state_reg[0][2]_1 (state_machine_n_23),
        .\state_reg[0][2]_10 (state_machine_n_79),
        .\state_reg[0][2]_11 (state_machine_n_80),
        .\state_reg[0][2]_12 (state_machine_n_81),
        .\state_reg[0][2]_13 (state_machine_n_82),
        .\state_reg[0][2]_14 (state_machine_n_83),
        .\state_reg[0][2]_15 (state_machine_n_84),
        .\state_reg[0][2]_2 (state_machine_n_26),
        .\state_reg[0][2]_3 (state_machine_n_29),
        .\state_reg[0][2]_4 (state_machine_n_59),
        .\state_reg[0][2]_5 (state_machine_n_60),
        .\state_reg[0][2]_6 (state_machine_n_61),
        .\state_reg[0][2]_7 (state_machine_n_62),
        .\state_reg[0][2]_8 (state_machine_n_77),
        .\state_reg[0][2]_9 (state_machine_n_78),
        .\state_reg[1][0]_0 (state_machine_n_70),
        .\state_reg[1][0]_1 (is_idle),
        .\state_reg[1][0]_2 (align_n_8),
        .\state_reg[1][0]_3 (align_n_10),
        .\state_reg[1][1]_0 (state_machine_n_64),
        .\state_reg[1][1]_1 (state_machine_n_67),
        .\state_reg[1][1]_2 (align_n_9),
        .\state_reg[1][1]_3 (align_n_5),
        .\state_reg[1][1]_4 (align_n_6),
        .\state_reg[1][2]_0 (state_machine_n_0),
        .\state_reg[1][2]_1 (state_machine_n_32),
        .\state_reg[1][2]_10 (state_machine_n_72),
        .\state_reg[1][2]_11 (state_machine_n_73),
        .\state_reg[1][2]_12 (state_machine_n_74),
        .\state_reg[1][2]_13 (state_machine_n_75),
        .\state_reg[1][2]_14 (state_machine_n_76),
        .\state_reg[1][2]_2 (state_machine_n_34),
        .\state_reg[1][2]_3 (state_machine_n_36),
        .\state_reg[1][2]_4 (state_machine_n_38),
        .\state_reg[1][2]_5 (state_machine_n_63),
        .\state_reg[1][2]_6 (state_machine_n_65),
        .\state_reg[1][2]_7 (state_machine_n_66),
        .\state_reg[1][2]_8 (state_machine_n_68),
        .\state_reg[1][2]_9 (state_machine_n_71),
        .\tx_is_q_reg[1] (state_machine_n_69),
        .txc_filtered(txc_filtered),
        .txd_filtered({txd_filtered[39:32],txd_filtered[7:0]}),
        .\txd_out_reg[24] (recoder_n_4),
        .\txd_out_reg[27] (recoder_n_2),
        .\txd_out_reg[38] (recoder_n_3),
        .\txd_out_reg[40] (recoder_n_0),
        .\txd_out_reg[5] (recoder_n_1),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset),
        .usrclk_reset_reg(state_machine_n_43));
  xaui_0_tqmsg_capture tqmsg_capture_1
       (.D(p_1_in),
        .last_qmsg(last_qmsg),
        .\last_qmsg_reg[31]_0 (\G_FILTER_LOW[0].filter_n_1 ),
        .\last_qmsg_reg[6]_0 (\G_FILTER_HIGH[4].filter_n_1 ),
        .\last_qmsg_reg[7]_0 (txd_filtered[7:0]),
        .q_det(q_det),
        .q_det_reg_0(state_machine_n_42),
        .txc_filtered(txc_filtered[7:4]),
        .usrclk(usrclk));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_is_idle[0]_i_1 
       (.I0(\txd_is_IDLE_reg[1]_i_1_n_0 ),
        .I1(\txd_is_IDLE_reg[0]_i_1_n_0 ),
        .I2(\txd_is_IDLE_reg[2]_i_1_n_0 ),
        .I3(\txd_is_IDLE_reg[3]_i_1_n_0 ),
        .I4(\tx_is_idle[0]_i_2_n_0 ),
        .O(tx_is_idle_comb[0]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_is_idle[0]_i_2 
       (.I0(c15_in),
        .I1(\txc_pipe_reg_n_0_[0] ),
        .I2(c9_in),
        .I3(c12_in),
        .O(\tx_is_idle[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \tx_is_idle[1]_i_1 
       (.I0(\txd_is_IDLE_reg[5]_i_1_n_0 ),
        .I1(\txd_is_IDLE_reg[4]_i_1_n_0 ),
        .I2(\txd_is_IDLE_reg[6]_i_1_n_0 ),
        .I3(txd_is_IDLE),
        .I4(\tx_is_idle[1]_i_2_n_0 ),
        .O(tx_is_idle_comb[1]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \tx_is_idle[1]_i_2 
       (.I0(c[1]),
        .I1(c[0]),
        .I2(c[3]),
        .I3(c[2]),
        .O(\tx_is_idle[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \tx_is_idle_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(tx_is_idle_comb[0]),
        .Q(is_idle[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \tx_is_idle_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(tx_is_idle_comb[1]),
        .Q(is_idle[1]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[0]_i_1 
       (.I0(\tx_is_invalid_k_reg[0]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[1] ),
        .I2(\txd_pipe_reg_n_0_[0] ),
        .I3(\tx_is_invalid_k_reg[0]_i_3_n_0 ),
        .I4(\txc_pipe_reg_n_0_[0] ),
        .O(\tx_is_invalid_k_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[0]_i_2 
       (.I0(\txd_pipe_reg_n_0_[5] ),
        .I1(\txd_pipe_reg_n_0_[7] ),
        .I2(\txd_pipe_reg_n_0_[6] ),
        .O(\tx_is_invalid_k_reg[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[0]_i_3 
       (.I0(\txd_pipe_reg_n_0_[4] ),
        .I1(\txd_pipe_reg_n_0_[3] ),
        .I2(\txd_pipe_reg_n_0_[2] ),
        .I3(\txd_pipe_reg_n_0_[0] ),
        .I4(\txd_pipe_reg_n_0_[1] ),
        .O(\tx_is_invalid_k_reg[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[1]_i_1 
       (.I0(\tx_is_invalid_k_reg[1]_i_2_n_0 ),
        .I1(d[1]),
        .I2(d[0]),
        .I3(\tx_is_invalid_k_reg[1]_i_3_n_0 ),
        .I4(c15_in),
        .O(\tx_is_invalid_k_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[1]_i_2 
       (.I0(d[5]),
        .I1(d[7]),
        .I2(d[6]),
        .O(\tx_is_invalid_k_reg[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[1]_i_3 
       (.I0(d[4]),
        .I1(d[3]),
        .I2(d[2]),
        .I3(d[0]),
        .I4(d[1]),
        .O(\tx_is_invalid_k_reg[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[2]_i_1 
       (.I0(\tx_is_invalid_k_reg[2]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[17] ),
        .I2(\txd_pipe_reg_n_0_[16] ),
        .I3(\tx_is_invalid_k_reg[2]_i_3_n_0 ),
        .I4(c12_in),
        .O(\tx_is_invalid_k_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[2]_i_2 
       (.I0(\txd_pipe_reg_n_0_[21] ),
        .I1(\txd_pipe_reg_n_0_[23] ),
        .I2(\txd_pipe_reg_n_0_[22] ),
        .O(\tx_is_invalid_k_reg[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[2]_i_3 
       (.I0(\txd_pipe_reg_n_0_[20] ),
        .I1(\txd_pipe_reg_n_0_[19] ),
        .I2(\txd_pipe_reg_n_0_[18] ),
        .I3(\txd_pipe_reg_n_0_[16] ),
        .I4(\txd_pipe_reg_n_0_[17] ),
        .O(\tx_is_invalid_k_reg[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[3]_i_1 
       (.I0(\tx_is_invalid_k_reg[3]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[25] ),
        .I2(\txd_pipe_reg_n_0_[24] ),
        .I3(\tx_is_invalid_k_reg[3]_i_3_n_0 ),
        .I4(c9_in),
        .O(\tx_is_invalid_k_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[3]_i_2 
       (.I0(\txd_pipe_reg_n_0_[29] ),
        .I1(\txd_pipe_reg_n_0_[31] ),
        .I2(\txd_pipe_reg_n_0_[30] ),
        .O(\tx_is_invalid_k_reg[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[3]_i_3 
       (.I0(\txd_pipe_reg_n_0_[28] ),
        .I1(\txd_pipe_reg_n_0_[26] ),
        .I2(\txd_pipe_reg_n_0_[27] ),
        .I3(\txd_pipe_reg_n_0_[24] ),
        .I4(\txd_pipe_reg_n_0_[25] ),
        .O(\tx_is_invalid_k_reg[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[4]_i_1 
       (.I0(\tx_is_invalid_k_reg[4]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[33] ),
        .I2(\txd_pipe_reg_n_0_[32] ),
        .I3(\tx_is_invalid_k_reg[4]_i_3_n_0 ),
        .I4(c[0]),
        .O(\tx_is_invalid_k_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[4]_i_2 
       (.I0(\txd_pipe_reg_n_0_[37] ),
        .I1(\txd_pipe_reg_n_0_[39] ),
        .I2(\txd_pipe_reg_n_0_[38] ),
        .O(\tx_is_invalid_k_reg[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[4]_i_3 
       (.I0(\txd_pipe_reg_n_0_[36] ),
        .I1(\txd_pipe_reg_n_0_[35] ),
        .I2(\txd_pipe_reg_n_0_[34] ),
        .I3(\txd_pipe_reg_n_0_[32] ),
        .I4(\txd_pipe_reg_n_0_[33] ),
        .O(\tx_is_invalid_k_reg[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[5]_i_1 
       (.I0(\tx_is_invalid_k_reg[5]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[41] ),
        .I2(\txd_pipe_reg_n_0_[40] ),
        .I3(\tx_is_invalid_k_reg[5]_i_3_n_0 ),
        .I4(c[1]),
        .O(\tx_is_invalid_k_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[5]_i_2 
       (.I0(\txd_pipe_reg_n_0_[45] ),
        .I1(\txd_pipe_reg_n_0_[47] ),
        .I2(\txd_pipe_reg_n_0_[46] ),
        .O(\tx_is_invalid_k_reg[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[5]_i_3 
       (.I0(\txd_pipe_reg_n_0_[44] ),
        .I1(\txd_pipe_reg_n_0_[43] ),
        .I2(\txd_pipe_reg_n_0_[42] ),
        .I3(\txd_pipe_reg_n_0_[40] ),
        .I4(\txd_pipe_reg_n_0_[41] ),
        .O(\tx_is_invalid_k_reg[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[6]_i_1 
       (.I0(\tx_is_invalid_k_reg[6]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[49] ),
        .I2(\txd_pipe_reg_n_0_[48] ),
        .I3(\tx_is_invalid_k_reg[6]_i_3_n_0 ),
        .I4(c[2]),
        .O(\tx_is_invalid_k_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[6]_i_2 
       (.I0(\txd_pipe_reg_n_0_[53] ),
        .I1(\txd_pipe_reg_n_0_[55] ),
        .I2(\txd_pipe_reg_n_0_[54] ),
        .O(\tx_is_invalid_k_reg[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[6]_i_3 
       (.I0(\txd_pipe_reg_n_0_[52] ),
        .I1(\txd_pipe_reg_n_0_[51] ),
        .I2(\txd_pipe_reg_n_0_[50] ),
        .I3(\txd_pipe_reg_n_0_[48] ),
        .I4(\txd_pipe_reg_n_0_[49] ),
        .O(\tx_is_invalid_k_reg[6]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFA80000)) 
    \tx_is_invalid_k_reg[7]_i_1 
       (.I0(\tx_is_invalid_k_reg[7]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[57] ),
        .I2(\txd_pipe_reg_n_0_[56] ),
        .I3(\tx_is_invalid_k_reg[7]_i_3_n_0 ),
        .I4(c[3]),
        .O(\tx_is_invalid_k_reg[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \tx_is_invalid_k_reg[7]_i_2 
       (.I0(\txd_pipe_reg_n_0_[61] ),
        .I1(\txd_pipe_reg_n_0_[63] ),
        .I2(\txd_pipe_reg_n_0_[62] ),
        .O(\tx_is_invalid_k_reg[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hD77F7F7F)) 
    \tx_is_invalid_k_reg[7]_i_3 
       (.I0(\txd_pipe_reg_n_0_[60] ),
        .I1(\txd_pipe_reg_n_0_[58] ),
        .I2(\txd_pipe_reg_n_0_[59] ),
        .I3(\txd_pipe_reg_n_0_[56] ),
        .I4(\txd_pipe_reg_n_0_[57] ),
        .O(\tx_is_invalid_k_reg[7]_i_3_n_0 ));
  FDRE \tx_is_invalid_k_reg_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[0]_i_1_n_0 ),
        .Q(is_invalid_k[0]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[1]_i_1_n_0 ),
        .Q(is_invalid_k[1]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[2]_i_1_n_0 ),
        .Q(is_invalid_k[2]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[3]_i_1_n_0 ),
        .Q(is_invalid_k[3]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[4]_i_1_n_0 ),
        .Q(is_invalid_k[4]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[5]_i_1_n_0 ),
        .Q(is_invalid_k[5]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[6]_i_1_n_0 ),
        .Q(is_invalid_k[6]),
        .R(1'b0));
  FDRE \tx_is_invalid_k_reg_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\tx_is_invalid_k_reg[7]_i_1_n_0 ),
        .Q(is_invalid_k[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \tx_is_q[0]_i_1 
       (.I0(\tx_is_q[0]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[6] ),
        .I2(\txd_pipe_reg_n_0_[7] ),
        .I3(\txd_pipe_reg_n_0_[5] ),
        .I4(\txd_pipe_reg_n_0_[4] ),
        .I5(\tx_is_q[0]_i_3_n_0 ),
        .O(tx_is_q_comb[0]));
  LUT4 #(
    .INIT(16'h0008)) 
    \tx_is_q[0]_i_2 
       (.I0(\txd_pipe_reg_n_0_[3] ),
        .I1(\txd_pipe_reg_n_0_[2] ),
        .I2(\txd_pipe_reg_n_0_[1] ),
        .I3(\txd_pipe_reg_n_0_[0] ),
        .O(\tx_is_q[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \tx_is_q[0]_i_3 
       (.I0(c15_in),
        .I1(\txc_pipe_reg_n_0_[0] ),
        .I2(c9_in),
        .I3(c12_in),
        .O(\tx_is_q[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    \tx_is_q[1]_i_1 
       (.I0(\tx_is_q[1]_i_2_n_0 ),
        .I1(\txd_pipe_reg_n_0_[38] ),
        .I2(\txd_pipe_reg_n_0_[39] ),
        .I3(\txd_pipe_reg_n_0_[37] ),
        .I4(\txd_pipe_reg_n_0_[36] ),
        .I5(\tx_is_q[1]_i_3_n_0 ),
        .O(tx_is_q_comb[1]));
  LUT4 #(
    .INIT(16'h0008)) 
    \tx_is_q[1]_i_2 
       (.I0(\txd_pipe_reg_n_0_[35] ),
        .I1(\txd_pipe_reg_n_0_[34] ),
        .I2(\txd_pipe_reg_n_0_[33] ),
        .I3(\txd_pipe_reg_n_0_[32] ),
        .O(\tx_is_q[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \tx_is_q[1]_i_3 
       (.I0(c[1]),
        .I1(c[0]),
        .I2(c[3]),
        .I3(c[2]),
        .O(\tx_is_q[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tx_is_q_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(tx_is_q_comb[0]),
        .Q(is_q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tx_is_q_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(tx_is_q_comb[1]),
        .Q(is_q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_pipe_reg_n_0_[0] ),
        .Q(txc_pipe_2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c15_in),
        .Q(txc_pipe_2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c12_in),
        .Q(txc_pipe_2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c9_in),
        .Q(txc_pipe_2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c[0]),
        .Q(txc_pipe_2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c[1]),
        .Q(txc_pipe_2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c[2]),
        .Q(txc_pipe_2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_2_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(c[3]),
        .Q(txc_pipe_2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[0]),
        .Q(\txc_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[1]),
        .Q(c15_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[2]),
        .Q(c12_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[3]),
        .Q(c9_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[4]),
        .Q(c[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[5]),
        .Q(c[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[6]),
        .Q(c[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txc_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txc[7]),
        .Q(c[3]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[0]_i_1 
       (.I0(\txd_pipe_reg_n_0_[4] ),
        .I1(\txd_pipe_reg_n_0_[5] ),
        .I2(\txd_pipe_reg_n_0_[6] ),
        .I3(\txd_pipe_reg_n_0_[7] ),
        .I4(\txd_is_IDLE_reg[0]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[0]_i_2 
       (.I0(\txd_pipe_reg_n_0_[1] ),
        .I1(\txd_pipe_reg_n_0_[0] ),
        .I2(\txd_pipe_reg_n_0_[3] ),
        .I3(\txd_pipe_reg_n_0_[2] ),
        .O(\txd_is_IDLE_reg[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[1]_i_1 
       (.I0(d[4]),
        .I1(d[5]),
        .I2(d[6]),
        .I3(d[7]),
        .I4(\txd_is_IDLE_reg[1]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[1]_i_2 
       (.I0(d[1]),
        .I1(d[0]),
        .I2(d[3]),
        .I3(d[2]),
        .O(\txd_is_IDLE_reg[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[2]_i_1 
       (.I0(\txd_pipe_reg_n_0_[20] ),
        .I1(\txd_pipe_reg_n_0_[21] ),
        .I2(\txd_pipe_reg_n_0_[22] ),
        .I3(\txd_pipe_reg_n_0_[23] ),
        .I4(\txd_is_IDLE_reg[2]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[2]_i_2 
       (.I0(\txd_pipe_reg_n_0_[17] ),
        .I1(\txd_pipe_reg_n_0_[16] ),
        .I2(\txd_pipe_reg_n_0_[19] ),
        .I3(\txd_pipe_reg_n_0_[18] ),
        .O(\txd_is_IDLE_reg[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[3]_i_1 
       (.I0(\txd_pipe_reg_n_0_[28] ),
        .I1(\txd_pipe_reg_n_0_[29] ),
        .I2(\txd_pipe_reg_n_0_[30] ),
        .I3(\txd_pipe_reg_n_0_[31] ),
        .I4(\txd_is_IDLE_reg[3]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[3]_i_2 
       (.I0(\txd_pipe_reg_n_0_[25] ),
        .I1(\txd_pipe_reg_n_0_[24] ),
        .I2(\txd_pipe_reg_n_0_[27] ),
        .I3(\txd_pipe_reg_n_0_[26] ),
        .O(\txd_is_IDLE_reg[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[4]_i_1 
       (.I0(\txd_pipe_reg_n_0_[36] ),
        .I1(\txd_pipe_reg_n_0_[37] ),
        .I2(\txd_pipe_reg_n_0_[38] ),
        .I3(\txd_pipe_reg_n_0_[39] ),
        .I4(\txd_is_IDLE_reg[4]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[4]_i_2 
       (.I0(\txd_pipe_reg_n_0_[33] ),
        .I1(\txd_pipe_reg_n_0_[32] ),
        .I2(\txd_pipe_reg_n_0_[35] ),
        .I3(\txd_pipe_reg_n_0_[34] ),
        .O(\txd_is_IDLE_reg[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[5]_i_1 
       (.I0(\txd_pipe_reg_n_0_[44] ),
        .I1(\txd_pipe_reg_n_0_[45] ),
        .I2(\txd_pipe_reg_n_0_[46] ),
        .I3(\txd_pipe_reg_n_0_[47] ),
        .I4(\txd_is_IDLE_reg[5]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[5]_i_2 
       (.I0(\txd_pipe_reg_n_0_[41] ),
        .I1(\txd_pipe_reg_n_0_[40] ),
        .I2(\txd_pipe_reg_n_0_[43] ),
        .I3(\txd_pipe_reg_n_0_[42] ),
        .O(\txd_is_IDLE_reg[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[6]_i_1 
       (.I0(\txd_pipe_reg_n_0_[52] ),
        .I1(\txd_pipe_reg_n_0_[53] ),
        .I2(\txd_pipe_reg_n_0_[54] ),
        .I3(\txd_pipe_reg_n_0_[55] ),
        .I4(\txd_is_IDLE_reg[6]_i_2_n_0 ),
        .O(\txd_is_IDLE_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[6]_i_2 
       (.I0(\txd_pipe_reg_n_0_[49] ),
        .I1(\txd_pipe_reg_n_0_[48] ),
        .I2(\txd_pipe_reg_n_0_[51] ),
        .I3(\txd_pipe_reg_n_0_[50] ),
        .O(\txd_is_IDLE_reg[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \txd_is_IDLE_reg[7]_i_1 
       (.I0(\txd_pipe_reg_n_0_[60] ),
        .I1(\txd_pipe_reg_n_0_[61] ),
        .I2(\txd_pipe_reg_n_0_[62] ),
        .I3(\txd_pipe_reg_n_0_[63] ),
        .I4(\txd_is_IDLE_reg[7]_i_2_n_0 ),
        .O(txd_is_IDLE));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \txd_is_IDLE_reg[7]_i_2 
       (.I0(\txd_pipe_reg_n_0_[57] ),
        .I1(\txd_pipe_reg_n_0_[56] ),
        .I2(\txd_pipe_reg_n_0_[59] ),
        .I3(\txd_pipe_reg_n_0_[58] ),
        .O(\txd_is_IDLE_reg[7]_i_2_n_0 ));
  FDRE \txd_is_IDLE_reg_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[0]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[1]_i_1_n_0 ),
        .Q(is_txd_IDLE),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[2]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[3]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[4]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[5]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_is_IDLE_reg[6]_i_1_n_0 ),
        .Q(\txd_is_IDLE_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \txd_is_IDLE_reg_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(txd_is_IDLE),
        .Q(\txd_is_IDLE_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[0] ),
        .Q(txd_pipe_2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[2]),
        .Q(txd_pipe_2[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[3]),
        .Q(txd_pipe_2[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[4]),
        .Q(txd_pipe_2[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[5]),
        .Q(txd_pipe_2[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[6]),
        .Q(txd_pipe_2[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[7]),
        .Q(txd_pipe_2[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[16] ),
        .Q(txd_pipe_2[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[17] ),
        .Q(txd_pipe_2[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[18] ),
        .Q(txd_pipe_2[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[19] ),
        .Q(txd_pipe_2[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[1] ),
        .Q(txd_pipe_2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[20] ),
        .Q(txd_pipe_2[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[21] ),
        .Q(txd_pipe_2[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[22] ),
        .Q(txd_pipe_2[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[23] ),
        .Q(txd_pipe_2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[24] ),
        .Q(txd_pipe_2[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[25] ),
        .Q(txd_pipe_2[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[26] ),
        .Q(txd_pipe_2[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[27] ),
        .Q(txd_pipe_2[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[28] ),
        .Q(txd_pipe_2[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[29] ),
        .Q(txd_pipe_2[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[2] ),
        .Q(txd_pipe_2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[30] ),
        .Q(txd_pipe_2[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[31] ),
        .Q(txd_pipe_2[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[32] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[32] ),
        .Q(txd_pipe_2[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[33] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[33] ),
        .Q(txd_pipe_2[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[34] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[34] ),
        .Q(txd_pipe_2[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[35] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[35] ),
        .Q(txd_pipe_2[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[36] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[36] ),
        .Q(txd_pipe_2[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[37] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[37] ),
        .Q(txd_pipe_2[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[38] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[38] ),
        .Q(txd_pipe_2[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[39] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[39] ),
        .Q(txd_pipe_2[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[3] ),
        .Q(txd_pipe_2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[40] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[40] ),
        .Q(txd_pipe_2[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[41] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[41] ),
        .Q(txd_pipe_2[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[42] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[42] ),
        .Q(txd_pipe_2[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[43] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[43] ),
        .Q(txd_pipe_2[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[44] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[44] ),
        .Q(txd_pipe_2[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[45] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[45] ),
        .Q(txd_pipe_2[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[46] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[46] ),
        .Q(txd_pipe_2[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[47] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[47] ),
        .Q(txd_pipe_2[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[48] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[48] ),
        .Q(txd_pipe_2[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[49] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[49] ),
        .Q(txd_pipe_2[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[4] ),
        .Q(txd_pipe_2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[50] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[50] ),
        .Q(txd_pipe_2[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[51] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[51] ),
        .Q(txd_pipe_2[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[52] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[52] ),
        .Q(txd_pipe_2[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[53] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[53] ),
        .Q(txd_pipe_2[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[54] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[54] ),
        .Q(txd_pipe_2[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[55] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[55] ),
        .Q(txd_pipe_2[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[56] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[56] ),
        .Q(txd_pipe_2[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[57] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[57] ),
        .Q(txd_pipe_2[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[58] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[58] ),
        .Q(txd_pipe_2[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[59] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[59] ),
        .Q(txd_pipe_2[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[5] ),
        .Q(txd_pipe_2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[60] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[60] ),
        .Q(txd_pipe_2[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[61] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[61] ),
        .Q(txd_pipe_2[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[62] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[62] ),
        .Q(txd_pipe_2[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[63] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[63] ),
        .Q(txd_pipe_2[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[6] ),
        .Q(txd_pipe_2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_2_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_pipe_reg_n_0_[7] ),
        .Q(txd_pipe_2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[0]),
        .Q(txd_pipe_2[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_2_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(d[1]),
        .Q(txd_pipe_2[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[0]),
        .Q(\txd_pipe_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[10]),
        .Q(d[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[11]),
        .Q(d[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[12]),
        .Q(d[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[13]),
        .Q(d[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[14]),
        .Q(d[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[15]),
        .Q(d[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[16]),
        .Q(\txd_pipe_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[17]),
        .Q(\txd_pipe_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[18]),
        .Q(\txd_pipe_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[19]),
        .Q(\txd_pipe_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[1]),
        .Q(\txd_pipe_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[20]),
        .Q(\txd_pipe_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[21]),
        .Q(\txd_pipe_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[22]),
        .Q(\txd_pipe_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[23]),
        .Q(\txd_pipe_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[24]),
        .Q(\txd_pipe_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[25]),
        .Q(\txd_pipe_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[26]),
        .Q(\txd_pipe_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[27]),
        .Q(\txd_pipe_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[28]),
        .Q(\txd_pipe_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[29]),
        .Q(\txd_pipe_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[2]),
        .Q(\txd_pipe_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[30]),
        .Q(\txd_pipe_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[31]),
        .Q(\txd_pipe_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[32] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[32]),
        .Q(\txd_pipe_reg_n_0_[32] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[33] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[33]),
        .Q(\txd_pipe_reg_n_0_[33] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[34] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[34]),
        .Q(\txd_pipe_reg_n_0_[34] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[35] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[35]),
        .Q(\txd_pipe_reg_n_0_[35] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[36] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[36]),
        .Q(\txd_pipe_reg_n_0_[36] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[37] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[37]),
        .Q(\txd_pipe_reg_n_0_[37] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[38] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[38]),
        .Q(\txd_pipe_reg_n_0_[38] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[39] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[39]),
        .Q(\txd_pipe_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[3]),
        .Q(\txd_pipe_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[40] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[40]),
        .Q(\txd_pipe_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[41] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[41]),
        .Q(\txd_pipe_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[42] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[42]),
        .Q(\txd_pipe_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[43] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[43]),
        .Q(\txd_pipe_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[44] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[44]),
        .Q(\txd_pipe_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[45] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[45]),
        .Q(\txd_pipe_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[46] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[46]),
        .Q(\txd_pipe_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[47] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[47]),
        .Q(\txd_pipe_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[48] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[48]),
        .Q(\txd_pipe_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[49] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[49]),
        .Q(\txd_pipe_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[4]),
        .Q(\txd_pipe_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[50] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[50]),
        .Q(\txd_pipe_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[51] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[51]),
        .Q(\txd_pipe_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[52] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[52]),
        .Q(\txd_pipe_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[53] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[53]),
        .Q(\txd_pipe_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[54] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[54]),
        .Q(\txd_pipe_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[55] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[55]),
        .Q(\txd_pipe_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[56] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[56]),
        .Q(\txd_pipe_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[57] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[57]),
        .Q(\txd_pipe_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[58] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[58]),
        .Q(\txd_pipe_reg_n_0_[58] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[59] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[59]),
        .Q(\txd_pipe_reg_n_0_[59] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[5]),
        .Q(\txd_pipe_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[60] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[60]),
        .Q(\txd_pipe_reg_n_0_[60] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[61] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[61]),
        .Q(\txd_pipe_reg_n_0_[61] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[62] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[62]),
        .Q(\txd_pipe_reg_n_0_[62] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[63] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[63]),
        .Q(\txd_pipe_reg_n_0_[63] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[6]),
        .Q(\txd_pipe_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_pipe_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[7]),
        .Q(\txd_pipe_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[8]),
        .Q(d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_pipe_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(xgmii_txd[9]),
        .Q(d[1]),
        .R(1'b0));
endmodule

module xaui_0_tx_filter
   (txc_filtered,
    \txd_out_reg[3]_0 ,
    \txd_out_reg[7]_0 ,
    txc_out_reg_0,
    Q,
    usrclk,
    \last_qmsg_reg[31] ,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    is_terminate,
    \txd_out_reg[7]_1 );
  output [0:0]txc_filtered;
  output \txd_out_reg[3]_0 ;
  output [7:0]\txd_out_reg[7]_0 ;
  output txc_out_reg_0;
  input [0:0]Q;
  input usrclk;
  input [2:0]\last_qmsg_reg[31] ;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input is_terminate;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire is_terminate;
  wire \last_qmsg[31]_i_5_n_0 ;
  wire \last_qmsg[31]_i_6_n_0 ;
  wire \last_qmsg[6]_i_3_n_0 ;
  wire [2:0]\last_qmsg_reg[31] ;
  wire [0:0]txc_filtered;
  wire txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire \txd_out_reg[3]_0 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \last_qmsg[31]_i_3 
       (.I0(\last_qmsg_reg[31] [2]),
        .I1(txc_filtered),
        .I2(\last_qmsg_reg[31] [0]),
        .I3(\txd_out_reg[7]_0 [6]),
        .I4(\last_qmsg[31]_i_5_n_0 ),
        .I5(\last_qmsg[31]_i_6_n_0 ),
        .O(txc_out_reg_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    \last_qmsg[31]_i_5 
       (.I0(\txd_out_reg[7]_0 [3]),
        .I1(\last_qmsg_reg[31] [1]),
        .I2(\txd_out_reg[7]_0 [7]),
        .I3(\txd_out_reg[7]_0 [4]),
        .O(\last_qmsg[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'hFFFD)) 
    \last_qmsg[31]_i_6 
       (.I0(\txd_out_reg[7]_0 [2]),
        .I1(\txd_out_reg[7]_0 [0]),
        .I2(\txd_out_reg[7]_0 [5]),
        .I3(\txd_out_reg[7]_0 [1]),
        .O(\last_qmsg[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \last_qmsg[6]_i_2 
       (.I0(\txd_out_reg[7]_0 [3]),
        .I1(\txd_out_reg[7]_0 [2]),
        .I2(\txd_out_reg[7]_0 [4]),
        .I3(\txd_out_reg[7]_0 [7]),
        .I4(\last_qmsg[6]_i_3_n_0 ),
        .O(\txd_out_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \last_qmsg[6]_i_3 
       (.I0(\txd_out_reg[7]_0 [5]),
        .I1(\txd_out_reg[7]_0 [0]),
        .I2(\txd_out_reg[7]_0 [6]),
        .I3(\txd_out_reg[7]_0 [1]),
        .O(\last_qmsg[6]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_filtered),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_72
   (txc_out_reg_0,
    D,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    \last_qmsg_reg[8] ,
    \last_qmsg_reg[15] ,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    is_terminate,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]D;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input \last_qmsg_reg[8] ;
  input [7:0]\last_qmsg_reg[15] ;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input is_terminate;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [7:0]D;
  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire is_terminate;
  wire [7:0]\last_qmsg_reg[15] ;
  wire \last_qmsg_reg[8] ;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[10]_i_1 
       (.I0(\txd_out_reg[7]_0 [2]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[11]_i_1 
       (.I0(\txd_out_reg[7]_0 [3]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[12]_i_1 
       (.I0(\txd_out_reg[7]_0 [4]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[13]_i_1 
       (.I0(\txd_out_reg[7]_0 [5]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[14]_i_1 
       (.I0(\txd_out_reg[7]_0 [6]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[15]_i_1 
       (.I0(\txd_out_reg[7]_0 [7]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [7]),
        .O(D[7]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[8]_i_1 
       (.I0(\txd_out_reg[7]_0 [0]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[9]_i_1 
       (.I0(\txd_out_reg[7]_0 [1]),
        .I1(\last_qmsg_reg[8] ),
        .I2(\last_qmsg_reg[15] [1]),
        .O(D[1]));
  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_73
   (txc_out_reg_0,
    D,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    \last_qmsg_reg[16] ,
    \last_qmsg_reg[23] ,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    is_terminate,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]D;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input \last_qmsg_reg[16] ;
  input [7:0]\last_qmsg_reg[23] ;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input is_terminate;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [7:0]D;
  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire is_terminate;
  wire \last_qmsg_reg[16] ;
  wire [7:0]\last_qmsg_reg[23] ;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[16]_i_1 
       (.I0(\txd_out_reg[7]_0 [0]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[17]_i_1 
       (.I0(\txd_out_reg[7]_0 [1]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[18]_i_1 
       (.I0(\txd_out_reg[7]_0 [2]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[19]_i_1 
       (.I0(\txd_out_reg[7]_0 [3]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[20]_i_1 
       (.I0(\txd_out_reg[7]_0 [4]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[21]_i_1 
       (.I0(\txd_out_reg[7]_0 [5]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[22]_i_1 
       (.I0(\txd_out_reg[7]_0 [6]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[23]_i_1 
       (.I0(\txd_out_reg[7]_0 [7]),
        .I1(\last_qmsg_reg[16] ),
        .I2(\last_qmsg_reg[23] [7]),
        .O(D[7]));
  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_74
   (txc_out_reg_0,
    D,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    \last_qmsg_reg[24] ,
    \last_qmsg_reg[31] ,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    is_terminate,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]D;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input \last_qmsg_reg[24] ;
  input [7:0]\last_qmsg_reg[31] ;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input is_terminate;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [7:0]D;
  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire is_terminate;
  wire \last_qmsg_reg[24] ;
  wire [7:0]\last_qmsg_reg[31] ;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[24]_i_1 
       (.I0(\txd_out_reg[7]_0 [0]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [0]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[25]_i_1 
       (.I0(\txd_out_reg[7]_0 [1]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [1]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[26]_i_1 
       (.I0(\txd_out_reg[7]_0 [2]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [2]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[27]_i_1 
       (.I0(\txd_out_reg[7]_0 [3]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [3]),
        .O(D[3]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[28]_i_1 
       (.I0(\txd_out_reg[7]_0 [4]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [4]),
        .O(D[4]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[29]_i_1 
       (.I0(\txd_out_reg[7]_0 [5]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [5]),
        .O(D[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[30]_i_1 
       (.I0(\txd_out_reg[7]_0 [6]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [6]),
        .O(D[6]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \last_qmsg[31]_i_2 
       (.I0(\txd_out_reg[7]_0 [7]),
        .I1(\last_qmsg_reg[24] ),
        .I2(\last_qmsg_reg[31] [7]),
        .O(D[7]));
  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(is_terminate),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(is_terminate),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_75
   (txc_filtered,
    txc_out_reg_0,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    \last_qmsg_reg[31] ,
    \last_qmsg_reg[31]_0 ,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    \txd_out_reg[0]_1 ,
    \txd_out_reg[7]_1 );
  output [0:0]txc_filtered;
  output txc_out_reg_0;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input \last_qmsg_reg[31] ;
  input [2:0]\last_qmsg_reg[31]_0 ;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input \txd_out_reg[0]_1 ;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire \last_qmsg[31]_i_4_n_0 ;
  wire \last_qmsg[31]_i_7_n_0 ;
  wire \last_qmsg_reg[31] ;
  wire [2:0]\last_qmsg_reg[31]_0 ;
  wire [0:0]txc_filtered;
  wire txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire \txd_out_reg[0]_1 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  LUT6 #(
    .INIT(64'hAAAAAAAAAAABAAAA)) 
    \last_qmsg[31]_i_1 
       (.I0(\last_qmsg_reg[31] ),
        .I1(\last_qmsg[31]_i_4_n_0 ),
        .I2(\last_qmsg_reg[31]_0 [0]),
        .I3(\last_qmsg_reg[31]_0 [1]),
        .I4(\txd_out_reg[7]_0 [3]),
        .I5(\txd_out_reg[7]_0 [0]),
        .O(txc_out_reg_0));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \last_qmsg[31]_i_4 
       (.I0(\txd_out_reg[7]_0 [5]),
        .I1(\txd_out_reg[7]_0 [4]),
        .I2(\last_qmsg_reg[31]_0 [2]),
        .I3(\txd_out_reg[7]_0 [7]),
        .I4(\last_qmsg[31]_i_7_n_0 ),
        .O(\last_qmsg[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \last_qmsg[31]_i_7 
       (.I0(\txd_out_reg[7]_0 [2]),
        .I1(\txd_out_reg[7]_0 [1]),
        .I2(txc_filtered),
        .I3(\txd_out_reg[7]_0 [6]),
        .O(\last_qmsg[31]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_filtered),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_76
   (txc_out_reg_0,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    \txd_out_reg[0]_1 ,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input \txd_out_reg[0]_1 ;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire \txd_out_reg[0]_1 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_77
   (txc_out_reg_0,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    \txd_out_reg[0]_1 ,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input \txd_out_reg[0]_1 ;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire \txd_out_reg[0]_1 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "tx_filter" *) 
module xaui_0_tx_filter_78
   (txc_out_reg_0,
    \txd_out_reg[7]_0 ,
    Q,
    usrclk,
    is_invalid_k,
    \txd_out_reg[0]_0 ,
    \txd_out_reg[0]_1 ,
    \txd_out_reg[7]_1 );
  output [0:0]txc_out_reg_0;
  output [7:0]\txd_out_reg[7]_0 ;
  input [0:0]Q;
  input usrclk;
  input [0:0]is_invalid_k;
  input [0:0]\txd_out_reg[0]_0 ;
  input \txd_out_reg[0]_1 ;
  input [7:0]\txd_out_reg[7]_1 ;

  wire [0:0]Q;
  wire [0:0]is_invalid_k;
  wire [0:0]txc_out_reg_0;
  wire \txd_out[0]_i_1_n_0 ;
  wire \txd_out[1]_i_1_n_0 ;
  wire \txd_out[2]_i_1_n_0 ;
  wire \txd_out[3]_i_1_n_0 ;
  wire \txd_out[4]_i_1_n_0 ;
  wire \txd_out[5]_i_1_n_0 ;
  wire \txd_out[6]_i_1_n_0 ;
  wire \txd_out[7]_i_1_n_0 ;
  wire [0:0]\txd_out_reg[0]_0 ;
  wire \txd_out_reg[0]_1 ;
  wire [7:0]\txd_out_reg[7]_0 ;
  wire [7:0]\txd_out_reg[7]_1 ;
  wire usrclk;

  FDRE #(
    .INIT(1'b1)) 
    txc_out_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(Q),
        .Q(txc_out_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h15FF0000)) 
    \txd_out[0]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [0]),
        .O(\txd_out[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[1]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [1]),
        .O(\txd_out[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[2]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [2]),
        .O(\txd_out[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[3]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [3]),
        .O(\txd_out[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[4]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [4]),
        .O(\txd_out[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[5]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [5]),
        .O(\txd_out[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h3FFF2A00)) 
    \txd_out[6]_i_1 
       (.I0(is_invalid_k),
        .I1(\txd_out_reg[0]_0 ),
        .I2(\txd_out_reg[0]_1 ),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [6]),
        .O(\txd_out[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF800)) 
    \txd_out[7]_i_1 
       (.I0(\txd_out_reg[0]_0 ),
        .I1(\txd_out_reg[0]_1 ),
        .I2(is_invalid_k),
        .I3(Q),
        .I4(\txd_out_reg[7]_1 [7]),
        .O(\txd_out[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[0]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[1]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[2]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[3]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[4]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[5]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[6]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out[7]_i_1_n_0 ),
        .Q(\txd_out_reg[7]_0 [7]),
        .R(1'b0));
endmodule

module xaui_0_tx_recoder
   (\configuration_vector[6] ,
    \configuration_vector[6]_0 ,
    \configuration_vector[4] ,
    \configuration_vector[4]_0 ,
    \configuration_vector[4]_1 ,
    mgt_txdata,
    mgt_txcharisk,
    configuration_vector,
    D,
    usrclk,
    \txd_out_reg[62]_0 ,
    \txd_out_reg[54]_0 ,
    \txd_out_reg[46]_0 ,
    \txd_out_reg[38]_0 ,
    \txd_out_reg[30]_0 ,
    \txd_out_reg[22]_0 ,
    \txd_out_reg[14]_0 ,
    \txd_out_reg[6]_0 ,
    \txd_out_reg[59]_0 ,
    \txd_out_reg[51]_0 ,
    \txd_out_reg[43]_0 ,
    \txd_out_reg[35]_0 ,
    \txd_out_reg[27]_0 ,
    \txd_out_reg[19]_0 ,
    \txd_out_reg[11]_0 ,
    \txd_out_reg[3]_0 ,
    \txd_out_reg[57]_0 ,
    \txd_out_reg[49]_0 ,
    \txd_out_reg[41]_0 ,
    \txd_out_reg[33]_0 ,
    \txd_out_reg[25]_0 ,
    \txd_out_reg[17]_0 ,
    \txd_out_reg[9]_0 ,
    \txd_out_reg[1]_0 ,
    \txd_out_reg[56]_0 ,
    \txd_out_reg[48]_0 ,
    \txd_out_reg[32]_0 ,
    \txd_out_reg[24]_0 ,
    \txd_out_reg[16]_0 ,
    \txd_out_reg[8]_0 ,
    \txd_out_reg[0]_0 ,
    \txd_out_reg[63]_0 ,
    \txd_out_reg[63]_1 ,
    \txd_out_reg[55]_0 ,
    \txd_out_reg[47]_0 ,
    \txd_out_reg[39]_0 ,
    \txd_out_reg[52]_0 ,
    \txd_out_reg[52]_1 ,
    \txd_out_reg[50]_0 ,
    \txd_out_reg[44]_0 ,
    \txd_out_reg[42]_0 ,
    \txd_out_reg[36]_0 ,
    \txd_out_reg[34]_0 ,
    \txd_out_reg[7]_0 ,
    \txd_out_reg[31]_0 ,
    \txd_out_reg[23]_0 ,
    \txd_out_reg[15]_0 ,
    \txd_out_reg[7]_1 ,
    \txd_out_reg[28]_0 ,
    \txd_out_reg[28]_1 ,
    \txd_out_reg[26]_0 ,
    \txd_out_reg[20]_0 ,
    \txd_out_reg[18]_0 ,
    \txd_out_reg[12]_0 ,
    \txd_out_reg[10]_0 ,
    \txd_out_reg[4]_0 ,
    \txd_out_reg[2]_0 ,
    \txc_out_reg[7]_0 );
  output \configuration_vector[6] ;
  output \configuration_vector[6]_0 ;
  output \configuration_vector[4] ;
  output \configuration_vector[4]_0 ;
  output \configuration_vector[4]_1 ;
  output [63:0]mgt_txdata;
  output [7:0]mgt_txcharisk;
  input [2:0]configuration_vector;
  input [10:0]D;
  input usrclk;
  input \txd_out_reg[62]_0 ;
  input \txd_out_reg[54]_0 ;
  input \txd_out_reg[46]_0 ;
  input \txd_out_reg[38]_0 ;
  input \txd_out_reg[30]_0 ;
  input \txd_out_reg[22]_0 ;
  input \txd_out_reg[14]_0 ;
  input \txd_out_reg[6]_0 ;
  input \txd_out_reg[59]_0 ;
  input \txd_out_reg[51]_0 ;
  input \txd_out_reg[43]_0 ;
  input \txd_out_reg[35]_0 ;
  input \txd_out_reg[27]_0 ;
  input \txd_out_reg[19]_0 ;
  input \txd_out_reg[11]_0 ;
  input \txd_out_reg[3]_0 ;
  input \txd_out_reg[57]_0 ;
  input \txd_out_reg[49]_0 ;
  input \txd_out_reg[41]_0 ;
  input \txd_out_reg[33]_0 ;
  input \txd_out_reg[25]_0 ;
  input \txd_out_reg[17]_0 ;
  input \txd_out_reg[9]_0 ;
  input \txd_out_reg[1]_0 ;
  input \txd_out_reg[56]_0 ;
  input \txd_out_reg[48]_0 ;
  input \txd_out_reg[32]_0 ;
  input \txd_out_reg[24]_0 ;
  input \txd_out_reg[16]_0 ;
  input \txd_out_reg[8]_0 ;
  input \txd_out_reg[0]_0 ;
  input \txd_out_reg[63]_0 ;
  input \txd_out_reg[63]_1 ;
  input \txd_out_reg[55]_0 ;
  input \txd_out_reg[47]_0 ;
  input \txd_out_reg[39]_0 ;
  input \txd_out_reg[52]_0 ;
  input \txd_out_reg[52]_1 ;
  input \txd_out_reg[50]_0 ;
  input \txd_out_reg[44]_0 ;
  input \txd_out_reg[42]_0 ;
  input \txd_out_reg[36]_0 ;
  input \txd_out_reg[34]_0 ;
  input \txd_out_reg[7]_0 ;
  input \txd_out_reg[31]_0 ;
  input \txd_out_reg[23]_0 ;
  input \txd_out_reg[15]_0 ;
  input \txd_out_reg[7]_1 ;
  input \txd_out_reg[28]_0 ;
  input \txd_out_reg[28]_1 ;
  input \txd_out_reg[26]_0 ;
  input \txd_out_reg[20]_0 ;
  input \txd_out_reg[18]_0 ;
  input \txd_out_reg[12]_0 ;
  input \txd_out_reg[10]_0 ;
  input \txd_out_reg[4]_0 ;
  input \txd_out_reg[2]_0 ;
  input [7:0]\txc_out_reg[7]_0 ;

  wire [10:0]D;
  wire [2:0]configuration_vector;
  wire \configuration_vector[4] ;
  wire \configuration_vector[4]_0 ;
  wire \configuration_vector[4]_1 ;
  wire \configuration_vector[6] ;
  wire \configuration_vector[6]_0 ;
  wire [7:0]mgt_txcharisk;
  wire [63:0]mgt_txdata;
  wire [7:0]\txc_out_reg[7]_0 ;
  wire txd_out13_out;
  wire \txd_out[56]_i_1_n_0 ;
  wire \txd_out[57]_i_1_n_0 ;
  wire \txd_out_reg[0]_0 ;
  wire \txd_out_reg[10]_0 ;
  wire \txd_out_reg[11]_0 ;
  wire \txd_out_reg[12]_0 ;
  wire \txd_out_reg[14]_0 ;
  wire \txd_out_reg[15]_0 ;
  wire \txd_out_reg[16]_0 ;
  wire \txd_out_reg[17]_0 ;
  wire \txd_out_reg[18]_0 ;
  wire \txd_out_reg[19]_0 ;
  wire \txd_out_reg[1]_0 ;
  wire \txd_out_reg[20]_0 ;
  wire \txd_out_reg[22]_0 ;
  wire \txd_out_reg[23]_0 ;
  wire \txd_out_reg[24]_0 ;
  wire \txd_out_reg[25]_0 ;
  wire \txd_out_reg[26]_0 ;
  wire \txd_out_reg[27]_0 ;
  wire \txd_out_reg[28]_0 ;
  wire \txd_out_reg[28]_1 ;
  wire \txd_out_reg[2]_0 ;
  wire \txd_out_reg[30]_0 ;
  wire \txd_out_reg[31]_0 ;
  wire \txd_out_reg[32]_0 ;
  wire \txd_out_reg[33]_0 ;
  wire \txd_out_reg[34]_0 ;
  wire \txd_out_reg[35]_0 ;
  wire \txd_out_reg[36]_0 ;
  wire \txd_out_reg[38]_0 ;
  wire \txd_out_reg[39]_0 ;
  wire \txd_out_reg[3]_0 ;
  wire \txd_out_reg[41]_0 ;
  wire \txd_out_reg[42]_0 ;
  wire \txd_out_reg[43]_0 ;
  wire \txd_out_reg[44]_0 ;
  wire \txd_out_reg[46]_0 ;
  wire \txd_out_reg[47]_0 ;
  wire \txd_out_reg[48]_0 ;
  wire \txd_out_reg[49]_0 ;
  wire \txd_out_reg[4]_0 ;
  wire \txd_out_reg[50]_0 ;
  wire \txd_out_reg[51]_0 ;
  wire \txd_out_reg[52]_0 ;
  wire \txd_out_reg[52]_1 ;
  wire \txd_out_reg[54]_0 ;
  wire \txd_out_reg[55]_0 ;
  wire \txd_out_reg[56]_0 ;
  wire \txd_out_reg[57]_0 ;
  wire \txd_out_reg[59]_0 ;
  wire \txd_out_reg[62]_0 ;
  wire \txd_out_reg[63]_0 ;
  wire \txd_out_reg[63]_1 ;
  wire \txd_out_reg[6]_0 ;
  wire \txd_out_reg[7]_0 ;
  wire \txd_out_reg[7]_1 ;
  wire \txd_out_reg[8]_0 ;
  wire \txd_out_reg[9]_0 ;
  wire usrclk;

  LUT3 #(
    .INIT(8'h20)) 
    \txc_out[7]_i_1 
       (.I0(configuration_vector[1]),
        .I1(configuration_vector[2]),
        .I2(configuration_vector[0]),
        .O(txd_out13_out));
  FDSE \txc_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [0]),
        .Q(mgt_txcharisk[0]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [1]),
        .Q(mgt_txcharisk[2]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [2]),
        .Q(mgt_txcharisk[4]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [3]),
        .Q(mgt_txcharisk[6]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [4]),
        .Q(mgt_txcharisk[1]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [5]),
        .Q(mgt_txcharisk[3]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [6]),
        .Q(mgt_txcharisk[5]),
        .S(txd_out13_out));
  FDSE \txc_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txc_out_reg[7]_0 [7]),
        .Q(mgt_txcharisk[7]),
        .S(txd_out13_out));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \txd_out[27]_i_2 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[2]),
        .O(\configuration_vector[4] ));
  LUT3 #(
    .INIT(8'h60)) 
    \txd_out[56]_i_1 
       (.I0(configuration_vector[2]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .O(\txd_out[56]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h2A)) 
    \txd_out[57]_i_1 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[2]),
        .O(\txd_out[57]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \txd_out[59]_i_1 
       (.I0(configuration_vector[2]),
        .I1(configuration_vector[0]),
        .I2(configuration_vector[1]),
        .O(\configuration_vector[6] ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h8F)) 
    \txd_out[61]_i_2 
       (.I0(configuration_vector[2]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[0]),
        .O(\configuration_vector[6]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \txd_out[62]_i_1 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[1]),
        .O(\configuration_vector[4]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \txd_out[62]_i_3 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[2]),
        .O(\configuration_vector[4]_0 ));
  FDRE \txd_out_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[0]_0 ),
        .Q(mgt_txdata[0]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDSE \txd_out_reg[10] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[10]_0 ),
        .Q(mgt_txdata[18]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[11] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[11]_0 ),
        .Q(mgt_txdata[19]),
        .R(\configuration_vector[6] ));
  FDSE \txd_out_reg[12] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[12]_0 ),
        .Q(mgt_txdata[20]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[13] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(mgt_txdata[21]),
        .R(1'b0));
  FDRE \txd_out_reg[14] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[14]_0 ),
        .Q(mgt_txdata[22]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[15] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[15]_0 ),
        .Q(mgt_txdata[23]),
        .S(\txd_out_reg[7]_0 ));
  FDRE \txd_out_reg[16] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[16]_0 ),
        .Q(mgt_txdata[32]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[17] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[17]_0 ),
        .Q(mgt_txdata[33]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[18] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[18]_0 ),
        .Q(mgt_txdata[34]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[19] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[19]_0 ),
        .Q(mgt_txdata[35]),
        .R(\configuration_vector[6] ));
  FDRE \txd_out_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[1]_0 ),
        .Q(mgt_txdata[1]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[20] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[20]_0 ),
        .Q(mgt_txdata[36]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[21] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(mgt_txdata[37]),
        .R(1'b0));
  FDRE \txd_out_reg[22] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[22]_0 ),
        .Q(mgt_txdata[38]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[23] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[23]_0 ),
        .Q(mgt_txdata[39]),
        .S(\txd_out_reg[7]_0 ));
  FDRE \txd_out_reg[24] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[24]_0 ),
        .Q(mgt_txdata[48]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[25] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[25]_0 ),
        .Q(mgt_txdata[49]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[26] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[26]_0 ),
        .Q(mgt_txdata[50]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[27] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[27]_0 ),
        .Q(mgt_txdata[51]),
        .R(\configuration_vector[6] ));
  FDSE \txd_out_reg[28] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[28]_1 ),
        .Q(mgt_txdata[52]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[29] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(mgt_txdata[53]),
        .R(1'b0));
  FDSE \txd_out_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[2]_0 ),
        .Q(mgt_txdata[2]),
        .S(\txd_out_reg[28]_0 ));
  FDRE \txd_out_reg[30] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[30]_0 ),
        .Q(mgt_txdata[54]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[31] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[31]_0 ),
        .Q(mgt_txdata[55]),
        .S(\txd_out_reg[7]_0 ));
  FDRE \txd_out_reg[32] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[32]_0 ),
        .Q(mgt_txdata[8]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[33] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[33]_0 ),
        .Q(mgt_txdata[9]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[34] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[34]_0 ),
        .Q(mgt_txdata[10]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[35] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[35]_0 ),
        .Q(mgt_txdata[11]),
        .R(\configuration_vector[6] ));
  FDSE \txd_out_reg[36] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[36]_0 ),
        .Q(mgt_txdata[12]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[37] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(mgt_txdata[13]),
        .R(1'b0));
  FDRE \txd_out_reg[38] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[38]_0 ),
        .Q(mgt_txdata[14]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[39] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[39]_0 ),
        .Q(mgt_txdata[15]),
        .S(\txd_out_reg[63]_0 ));
  FDRE \txd_out_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[3]_0 ),
        .Q(mgt_txdata[3]),
        .R(\configuration_vector[6] ));
  FDRE \txd_out_reg[40] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(mgt_txdata[24]),
        .R(1'b0));
  FDRE \txd_out_reg[41] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[41]_0 ),
        .Q(mgt_txdata[25]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[42] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[42]_0 ),
        .Q(mgt_txdata[26]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[43] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[43]_0 ),
        .Q(mgt_txdata[27]),
        .R(\configuration_vector[6] ));
  FDSE \txd_out_reg[44] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[44]_0 ),
        .Q(mgt_txdata[28]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[45] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(mgt_txdata[29]),
        .R(1'b0));
  FDRE \txd_out_reg[46] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[46]_0 ),
        .Q(mgt_txdata[30]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[47] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[47]_0 ),
        .Q(mgt_txdata[31]),
        .S(\txd_out_reg[63]_0 ));
  FDRE \txd_out_reg[48] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[48]_0 ),
        .Q(mgt_txdata[40]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[49] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[49]_0 ),
        .Q(mgt_txdata[41]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDSE \txd_out_reg[4] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[4]_0 ),
        .Q(mgt_txdata[4]),
        .S(\txd_out_reg[28]_0 ));
  FDSE \txd_out_reg[50] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[50]_0 ),
        .Q(mgt_txdata[42]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[51] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[51]_0 ),
        .Q(mgt_txdata[43]),
        .R(\configuration_vector[6] ));
  FDSE \txd_out_reg[52] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[52]_1 ),
        .Q(mgt_txdata[44]),
        .S(\txd_out_reg[52]_0 ));
  FDRE \txd_out_reg[53] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(mgt_txdata[45]),
        .R(1'b0));
  FDRE \txd_out_reg[54] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[54]_0 ),
        .Q(mgt_txdata[46]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[55] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[55]_0 ),
        .Q(mgt_txdata[47]),
        .S(\txd_out_reg[63]_0 ));
  FDRE \txd_out_reg[56] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[56]_0 ),
        .Q(mgt_txdata[56]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[57] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[57]_0 ),
        .Q(mgt_txdata[57]),
        .R(\txd_out[57]_i_1_n_0 ));
  FDRE \txd_out_reg[58] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(mgt_txdata[58]),
        .R(1'b0));
  FDRE \txd_out_reg[59] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[59]_0 ),
        .Q(mgt_txdata[59]),
        .R(\configuration_vector[6] ));
  FDRE \txd_out_reg[5] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(mgt_txdata[5]),
        .R(1'b0));
  FDRE \txd_out_reg[60] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(mgt_txdata[60]),
        .R(1'b0));
  FDRE \txd_out_reg[61] 
       (.C(usrclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(mgt_txdata[61]),
        .R(1'b0));
  FDRE \txd_out_reg[62] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[62]_0 ),
        .Q(mgt_txdata[62]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[63] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[63]_1 ),
        .Q(mgt_txdata[63]),
        .S(\txd_out_reg[63]_0 ));
  FDRE \txd_out_reg[6] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[6]_0 ),
        .Q(mgt_txdata[6]),
        .R(\configuration_vector[4]_1 ));
  FDSE \txd_out_reg[7] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[7]_1 ),
        .Q(mgt_txdata[7]),
        .S(\txd_out_reg[7]_0 ));
  FDRE \txd_out_reg[8] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[8]_0 ),
        .Q(mgt_txdata[16]),
        .R(\txd_out[56]_i_1_n_0 ));
  FDRE \txd_out_reg[9] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\txd_out_reg[9]_0 ),
        .Q(mgt_txdata[17]),
        .R(\txd_out[57]_i_1_n_0 ));
endmodule

module xaui_0_tx_state_machine
   (\state_reg[1][2]_0 ,
    next_ifg_is_a_reg_0,
    \last_qmsg_reg[6] ,
    \last_qmsg_reg[14] ,
    \last_qmsg_reg[22] ,
    \last_qmsg_reg[30] ,
    \last_qmsg_reg[6]_0 ,
    \last_qmsg_reg[14]_0 ,
    \last_qmsg_reg[22]_0 ,
    \last_qmsg_reg[30]_0 ,
    \configuration_vector[5] ,
    \state_reg[0][0]_0 ,
    \last_qmsg_reg[27] ,
    \state_reg[0][2]_0 ,
    \last_qmsg_reg[24] ,
    \last_qmsg_reg[19] ,
    \state_reg[0][2]_1 ,
    \last_qmsg_reg[16] ,
    \last_qmsg_reg[11] ,
    \state_reg[0][2]_2 ,
    \last_qmsg_reg[8] ,
    \last_qmsg_reg[3] ,
    \state_reg[0][2]_3 ,
    \last_qmsg_reg[0] ,
    \last_qmsg_reg[0]_0 ,
    \state_reg[1][2]_1 ,
    \last_qmsg_reg[3]_0 ,
    \state_reg[1][2]_2 ,
    \last_qmsg_reg[16]_0 ,
    \state_reg[1][2]_3 ,
    \last_qmsg_reg[24]_0 ,
    \state_reg[1][2]_4 ,
    \last_qmsg_reg[11]_0 ,
    \last_qmsg_reg[19]_0 ,
    \last_qmsg_reg[27]_0 ,
    \state_reg[0][0]_1 ,
    usrclk_reset_reg,
    D,
    \state_reg[0][0]_2 ,
    \last_qmsg_reg[29] ,
    \configuration_vector[4] ,
    \state_reg[0][2]_4 ,
    \state_reg[0][2]_5 ,
    \state_reg[0][2]_6 ,
    \state_reg[0][2]_7 ,
    \state_reg[1][2]_5 ,
    \state_reg[1][1]_0 ,
    \state_reg[1][2]_6 ,
    \state_reg[1][2]_7 ,
    \state_reg[1][1]_1 ,
    \state_reg[1][2]_8 ,
    \tx_is_q_reg[1] ,
    \state_reg[1][0]_0 ,
    \state_reg[1][2]_9 ,
    \state_reg[1][2]_10 ,
    \state_reg[1][2]_11 ,
    \state_reg[1][2]_12 ,
    \state_reg[1][2]_13 ,
    \state_reg[1][2]_14 ,
    \state_reg[0][2]_8 ,
    \state_reg[0][2]_9 ,
    \state_reg[0][2]_10 ,
    \state_reg[0][2]_11 ,
    \state_reg[0][2]_12 ,
    \state_reg[0][2]_13 ,
    \state_reg[0][2]_14 ,
    \state_reg[0][2]_15 ,
    usrclk_reset,
    usrclk,
    \txd_out_reg[38] ,
    last_qmsg,
    txd_filtered,
    data1__0,
    q_det,
    Q,
    data1,
    \state_reg[1][0]_1 ,
    txc_filtered,
    configuration_vector,
    \txd_out_reg[27] ,
    \txd_out_reg[24] ,
    \txd_out_reg[5] ,
    q_det_reg,
    \state_reg[0][0]_3 ,
    \state_reg[1][0]_2 ,
    \state_reg[1][0]_3 ,
    \state_reg[0][0]_4 ,
    \state_reg[1][1]_2 ,
    \state_reg[1][1]_3 ,
    \state_reg[1][1]_4 ,
    extra_a,
    \count_reg[1] ,
    \count_reg[1]_0 ,
    \txd_out_reg[40] );
  output \state_reg[1][2]_0 ;
  output next_ifg_is_a_reg_0;
  output \last_qmsg_reg[6] ;
  output \last_qmsg_reg[14] ;
  output \last_qmsg_reg[22] ;
  output \last_qmsg_reg[30] ;
  output \last_qmsg_reg[6]_0 ;
  output \last_qmsg_reg[14]_0 ;
  output \last_qmsg_reg[22]_0 ;
  output \last_qmsg_reg[30]_0 ;
  output [7:0]\configuration_vector[5] ;
  output \state_reg[0][0]_0 ;
  output \last_qmsg_reg[27] ;
  output \state_reg[0][2]_0 ;
  output \last_qmsg_reg[24] ;
  output \last_qmsg_reg[19] ;
  output \state_reg[0][2]_1 ;
  output \last_qmsg_reg[16] ;
  output \last_qmsg_reg[11] ;
  output \state_reg[0][2]_2 ;
  output \last_qmsg_reg[8] ;
  output \last_qmsg_reg[3] ;
  output \state_reg[0][2]_3 ;
  output \last_qmsg_reg[0] ;
  output \last_qmsg_reg[0]_0 ;
  output \state_reg[1][2]_1 ;
  output \last_qmsg_reg[3]_0 ;
  output \state_reg[1][2]_2 ;
  output \last_qmsg_reg[16]_0 ;
  output \state_reg[1][2]_3 ;
  output \last_qmsg_reg[24]_0 ;
  output \state_reg[1][2]_4 ;
  output \last_qmsg_reg[11]_0 ;
  output \last_qmsg_reg[19]_0 ;
  output \last_qmsg_reg[27]_0 ;
  output \state_reg[0][0]_1 ;
  output usrclk_reset_reg;
  output [1:0]D;
  output \state_reg[0][0]_2 ;
  output [10:0]\last_qmsg_reg[29] ;
  output \configuration_vector[4] ;
  output \state_reg[0][2]_4 ;
  output \state_reg[0][2]_5 ;
  output \state_reg[0][2]_6 ;
  output \state_reg[0][2]_7 ;
  output \state_reg[1][2]_5 ;
  output \state_reg[1][1]_0 ;
  output \state_reg[1][2]_6 ;
  output \state_reg[1][2]_7 ;
  output \state_reg[1][1]_1 ;
  output \state_reg[1][2]_8 ;
  output \tx_is_q_reg[1] ;
  output \state_reg[1][0]_0 ;
  output \state_reg[1][2]_9 ;
  output \state_reg[1][2]_10 ;
  output \state_reg[1][2]_11 ;
  output \state_reg[1][2]_12 ;
  output \state_reg[1][2]_13 ;
  output \state_reg[1][2]_14 ;
  output \state_reg[0][2]_8 ;
  output \state_reg[0][2]_9 ;
  output \state_reg[0][2]_10 ;
  output \state_reg[0][2]_11 ;
  output \state_reg[0][2]_12 ;
  output \state_reg[0][2]_13 ;
  output \state_reg[0][2]_14 ;
  output \state_reg[0][2]_15 ;
  input usrclk_reset;
  input usrclk;
  input \txd_out_reg[38] ;
  input [31:0]last_qmsg;
  input [15:0]txd_filtered;
  input [23:0]data1__0;
  input q_det;
  input [1:0]Q;
  input [23:0]data1;
  input [1:0]\state_reg[1][0]_1 ;
  input [7:0]txc_filtered;
  input [2:0]configuration_vector;
  input \txd_out_reg[27] ;
  input \txd_out_reg[24] ;
  input \txd_out_reg[5] ;
  input q_det_reg;
  input [1:0]\state_reg[0][0]_3 ;
  input \state_reg[1][0]_2 ;
  input \state_reg[1][0]_3 ;
  input \state_reg[0][0]_4 ;
  input \state_reg[1][1]_2 ;
  input \state_reg[1][1]_3 ;
  input \state_reg[1][1]_4 ;
  input extra_a;
  input [1:0]\count_reg[1] ;
  input [1:0]\count_reg[1]_0 ;
  input \txd_out_reg[40] ;

  wire [1:0]D;
  wire [1:0]Q;
  wire [2:0]configuration_vector;
  wire \configuration_vector[4] ;
  wire [7:0]\configuration_vector[5] ;
  wire [1:0]\count_reg[1] ;
  wire [1:0]\count_reg[1]_0 ;
  wire [23:0]data1;
  wire [23:0]data1__0;
  wire extra_a;
  wire [0:0]\get_next_state[1]_0 ;
  wire [31:0]last_qmsg;
  wire \last_qmsg_reg[0] ;
  wire \last_qmsg_reg[0]_0 ;
  wire \last_qmsg_reg[11] ;
  wire \last_qmsg_reg[11]_0 ;
  wire \last_qmsg_reg[14] ;
  wire \last_qmsg_reg[14]_0 ;
  wire \last_qmsg_reg[16] ;
  wire \last_qmsg_reg[16]_0 ;
  wire \last_qmsg_reg[19] ;
  wire \last_qmsg_reg[19]_0 ;
  wire \last_qmsg_reg[22] ;
  wire \last_qmsg_reg[22]_0 ;
  wire \last_qmsg_reg[24] ;
  wire \last_qmsg_reg[24]_0 ;
  wire \last_qmsg_reg[27] ;
  wire \last_qmsg_reg[27]_0 ;
  wire [10:0]\last_qmsg_reg[29] ;
  wire \last_qmsg_reg[30] ;
  wire \last_qmsg_reg[30]_0 ;
  wire \last_qmsg_reg[3] ;
  wire \last_qmsg_reg[3]_0 ;
  wire \last_qmsg_reg[6] ;
  wire \last_qmsg_reg[6]_0 ;
  wire \last_qmsg_reg[8] ;
  wire next_ifg_is_a_i_1_n_0;
  wire next_ifg_is_a_i_2_n_0;
  wire next_ifg_is_a_i_3_n_0;
  wire next_ifg_is_a_reg_0;
  wire q_det;
  wire q_det_reg;
  wire \state[0][0]_i_1_n_0 ;
  wire \state[0][0]_i_2_n_0 ;
  wire \state[0][0]_i_4_n_0 ;
  wire \state[0][1]_i_1_n_0 ;
  wire \state[0][1]_i_2_n_0 ;
  wire \state[0][1]_i_3_n_0 ;
  wire \state[0][2]_i_1_n_0 ;
  wire \state[0][2]_i_2_n_0 ;
  wire \state[1][0]_i_2_n_0 ;
  wire \state[1][0]_i_3_n_0 ;
  wire \state[1][0]_i_4_n_0 ;
  wire \state[1][0]_i_6_n_0 ;
  wire \state[1][1]_i_1_n_0 ;
  wire \state[1][1]_i_3_n_0 ;
  wire \state[1][1]_i_4_n_0 ;
  wire \state[1][1]_i_5_n_0 ;
  wire \state[1][1]_i_7_n_0 ;
  wire \state[1][2]_i_1_n_0 ;
  wire \state[1][2]_i_2_n_0 ;
  wire \state_reg[0][0]_0 ;
  wire \state_reg[0][0]_1 ;
  wire \state_reg[0][0]_2 ;
  wire [1:0]\state_reg[0][0]_3 ;
  wire \state_reg[0][0]_4 ;
  wire \state_reg[0][2]_0 ;
  wire \state_reg[0][2]_1 ;
  wire \state_reg[0][2]_10 ;
  wire \state_reg[0][2]_11 ;
  wire \state_reg[0][2]_12 ;
  wire \state_reg[0][2]_13 ;
  wire \state_reg[0][2]_14 ;
  wire \state_reg[0][2]_15 ;
  wire \state_reg[0][2]_2 ;
  wire \state_reg[0][2]_3 ;
  wire \state_reg[0][2]_4 ;
  wire \state_reg[0][2]_5 ;
  wire \state_reg[0][2]_6 ;
  wire \state_reg[0][2]_7 ;
  wire \state_reg[0][2]_8 ;
  wire \state_reg[0][2]_9 ;
  wire \state_reg[1][0]_0 ;
  wire [1:0]\state_reg[1][0]_1 ;
  wire \state_reg[1][0]_2 ;
  wire \state_reg[1][0]_3 ;
  wire \state_reg[1][1]_0 ;
  wire \state_reg[1][1]_1 ;
  wire \state_reg[1][1]_2 ;
  wire \state_reg[1][1]_3 ;
  wire \state_reg[1][1]_4 ;
  wire \state_reg[1][2]_0 ;
  wire \state_reg[1][2]_1 ;
  wire \state_reg[1][2]_10 ;
  wire \state_reg[1][2]_11 ;
  wire \state_reg[1][2]_12 ;
  wire \state_reg[1][2]_13 ;
  wire \state_reg[1][2]_14 ;
  wire \state_reg[1][2]_2 ;
  wire \state_reg[1][2]_3 ;
  wire \state_reg[1][2]_4 ;
  wire \state_reg[1][2]_5 ;
  wire \state_reg[1][2]_6 ;
  wire \state_reg[1][2]_7 ;
  wire \state_reg[1][2]_8 ;
  wire \state_reg[1][2]_9 ;
  wire \state_reg_n_0_[0][0] ;
  wire \state_reg_n_0_[0][1] ;
  wire \state_reg_n_0_[0][2] ;
  wire \state_reg_n_0_[1][0] ;
  wire \state_reg_n_0_[1][1] ;
  wire \tx_is_q_reg[1] ;
  wire [7:0]txc_filtered;
  wire \txc_out[3]_i_2_n_0 ;
  wire \txc_out[3]_i_3_n_0 ;
  wire \txc_out[7]_i_3_n_0 ;
  wire [15:0]txd_filtered;
  wire \txd_out[40]_i_3_n_0 ;
  wire \txd_out_reg[24] ;
  wire \txd_out_reg[27] ;
  wire \txd_out_reg[38] ;
  wire \txd_out_reg[40] ;
  wire \txd_out_reg[5] ;
  wire usrclk;
  wire usrclk_reset;
  wire usrclk_reset_reg;

  LUT6 #(
    .INIT(64'hEFAAEFEF20AA2020)) 
    \count[0]_i_1 
       (.I0(\count_reg[1] [0]),
        .I1(\state_reg_n_0_[0][0] ),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\count_reg[1]_0 [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h20AA2020EFAAEFEF)) 
    \count[1]_i_1 
       (.I0(\count_reg[1] [1]),
        .I1(\state_reg_n_0_[0][0] ),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\count_reg[1]_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h5504000055045504)) 
    extra_a_i_1
       (.I0(usrclk_reset),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[0][0] ),
        .I3(extra_a),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(usrclk_reset_reg));
  LUT3 #(
    .INIT(8'h32)) 
    next_ifg_is_a_i_1
       (.I0(next_ifg_is_a_i_2_n_0),
        .I1(next_ifg_is_a_i_3_n_0),
        .I2(next_ifg_is_a_reg_0),
        .O(next_ifg_is_a_i_1_n_0));
  LUT6 #(
    .INIT(64'h01010101010101FF)) 
    next_ifg_is_a_i_2
       (.I0(\state_reg_n_0_[0][1] ),
        .I1(\state_reg_n_0_[0][2] ),
        .I2(\state_reg_n_0_[0][0] ),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(next_ifg_is_a_i_2_n_0));
  LUT6 #(
    .INIT(64'h0404040404FF0404)) 
    next_ifg_is_a_i_3
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[0][0] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\state_reg[1][2]_0 ),
        .O(next_ifg_is_a_i_3_n_0));
  FDSE next_ifg_is_a_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(next_ifg_is_a_i_1_n_0),
        .Q(next_ifg_is_a_reg_0),
        .S(usrclk_reset));
  LUT4 #(
    .INIT(16'h4F44)) 
    \prbs[7]_i_1 
       (.I0(\state_reg_n_0_[0][0] ),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[1][0] ),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[0][0]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF07770000)) 
    q_det_i_1
       (.I0(\state_reg_n_0_[0][0] ),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[1][0] ),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(q_det),
        .I5(q_det_reg),
        .O(\state_reg[0][0]_1 ));
  LUT6 #(
    .INIT(64'hAAEAAAEAAAEAFFFF)) 
    \state[0][0]_i_1 
       (.I0(\state[0][0]_i_2_n_0 ),
        .I1(\state_reg[0][0]_4 ),
        .I2(\state[0][0]_i_4_n_0 ),
        .I3(\state_reg[0][0]_3 [1]),
        .I4(\state_reg[1][0]_1 [0]),
        .I5(Q[0]),
        .O(\state[0][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h33000000F3FA0000)) 
    \state[0][0]_i_2 
       (.I0(Q[0]),
        .I1(\state_reg[0][0]_3 [1]),
        .I2(q_det),
        .I3(\state_reg[1][2]_0 ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\state_reg_n_0_[1][0] ),
        .O(\state[0][0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \state[0][0]_i_4 
       (.I0(\state_reg[1][2]_0 ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg_n_0_[1][1] ),
        .O(\state[0][0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAEAAAAA00000000)) 
    \state[0][1]_i_1 
       (.I0(\state[0][1]_i_2_n_0 ),
        .I1(\state_reg[1][2]_0 ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(q_det),
        .I5(\state[0][2]_i_2_n_0 ),
        .O(\state[0][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD500D500FF2EFF2A)) 
    \state[0][1]_i_2 
       (.I0(\state_reg[1][2]_0 ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state[0][1]_i_3_n_0 ),
        .I4(next_ifg_is_a_reg_0),
        .I5(\state_reg[0][0]_4 ),
        .O(\state[0][1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT4 #(
    .INIT(16'h4440)) 
    \state[0][1]_i_3 
       (.I0(\state_reg_n_0_[1][0] ),
        .I1(\state_reg_n_0_[1][1] ),
        .I2(q_det),
        .I3(Q[0]),
        .O(\state[0][1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEBEBEBFB00000000)) 
    \state[0][2]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(q_det),
        .I4(Q[0]),
        .I5(\state[0][2]_i_2_n_0 ),
        .O(\state[0][2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h54)) 
    \state[0][2]_i_2 
       (.I0(usrclk_reset),
        .I1(\state_reg[1][0]_1 [0]),
        .I2(Q[0]),
        .O(\state[0][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF11111FFF1FFF1)) 
    \state[1][0]_i_1 
       (.I0(\state_reg[1][0]_1 [1]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\state_reg[1][0]_1 [0]),
        .I4(\state[1][0]_i_2_n_0 ),
        .I5(\state[1][0]_i_3_n_0 ),
        .O(\get_next_state[1]_0 ));
  LUT6 #(
    .INIT(64'h000F000033332222)) 
    \state[1][0]_i_2 
       (.I0(Q[1]),
        .I1(\state[1][0]_i_4_n_0 ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg[0][0]_4 ),
        .I4(q_det),
        .I5(\state_reg[1][2]_0 ),
        .O(\state[1][0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFEFAAAAFFEFFFEF)) 
    \state[1][0]_i_3 
       (.I0(\state_reg[0][0]_3 [0]),
        .I1(\state_reg_n_0_[1][1] ),
        .I2(\state_reg[1][2]_0 ),
        .I3(\state_reg[1][0]_2 ),
        .I4(\state[1][0]_i_6_n_0 ),
        .I5(\state_reg[1][0]_3 ),
        .O(\state[1][0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAFFFFFF)) 
    \state[1][0]_i_4 
       (.I0(\state_reg[1][0]_2 ),
        .I1(\state_reg_n_0_[0][0] ),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(next_ifg_is_a_reg_0),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(\state[1][0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT5 #(
    .INIT(32'h14141404)) 
    \state[1][0]_i_6 
       (.I0(\state_reg[1][2]_0 ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(q_det),
        .I4(Q[0]),
        .O(\state[1][0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h888888888888A8AA)) 
    \state[1][1]_i_1 
       (.I0(\state_reg[1][1]_2 ),
        .I1(\state[1][1]_i_3_n_0 ),
        .I2(\state[1][1]_i_4_n_0 ),
        .I3(\state[1][1]_i_5_n_0 ),
        .I4(\state_reg[1][1]_3 ),
        .I5(\state[1][1]_i_7_n_0 ),
        .O(\state[1][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1F1111111F111F11)) 
    \state[1][1]_i_3 
       (.I0(\state_reg[1][0]_1 [0]),
        .I1(Q[0]),
        .I2(\state_reg[1][1]_4 ),
        .I3(\state[1][1]_i_7_n_0 ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(q_det),
        .O(\state[1][1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3333AAAAAAABBBBB)) 
    \state[1][1]_i_4 
       (.I0(\state_reg[1][2]_0 ),
        .I1(\state_reg[1][1]_4 ),
        .I2(Q[0]),
        .I3(q_det),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\state_reg_n_0_[1][0] ),
        .O(\state[1][1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT4 #(
    .INIT(16'hABBB)) 
    \state[1][1]_i_5 
       (.I0(\state[1][0]_i_4_n_0 ),
        .I1(Q[1]),
        .I2(\state_reg[1][0]_1 [1]),
        .I3(q_det),
        .O(\state[1][1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \state[1][1]_i_7 
       (.I0(\state_reg_n_0_[1][1] ),
        .I1(\state_reg[1][2]_0 ),
        .O(\state[1][1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[1][1]_i_9 
       (.I0(Q[1]),
        .I1(\state_reg[1][0]_1 [1]),
        .O(\tx_is_q_reg[1] ));
  LUT6 #(
    .INIT(64'h2220222022200000)) 
    \state[1][2]_i_1 
       (.I0(\state[1][2]_i_2_n_0 ),
        .I1(usrclk_reset),
        .I2(\state_reg[1][0]_1 [0]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\state_reg[1][0]_1 [1]),
        .O(\state[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT4 #(
    .INIT(16'hFFAB)) 
    \state[1][2]_i_2 
       (.I0(\state[1][0]_i_4_n_0 ),
        .I1(Q[1]),
        .I2(q_det),
        .I3(\state_reg[1][2]_0 ),
        .O(\state[1][2]_i_2_n_0 ));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[0][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[0][0]_i_1_n_0 ),
        .Q(\state_reg_n_0_[0][0] ),
        .R(usrclk_reset));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[0][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[0][1]_i_1_n_0 ),
        .Q(\state_reg_n_0_[0][1] ),
        .R(1'b0));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[0][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[0][2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[0][2] ),
        .R(1'b0));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[1][0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\get_next_state[1]_0 ),
        .Q(\state_reg_n_0_[1][0] ),
        .R(usrclk_reset));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[1][1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[1][1]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1][1] ),
        .R(1'b0));
  (* FSM_ENCODING = "one-hot" *) 
  FDRE \state_reg[1][2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(\state[1][2]_i_1_n_0 ),
        .Q(\state_reg[1][2]_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFCAAFCFC)) 
    \txc_out[0]_i_1 
       (.I0(configuration_vector[2]),
        .I1(\txc_out[3]_i_2_n_0 ),
        .I2(txc_filtered[0]),
        .I3(configuration_vector[1]),
        .I4(configuration_vector[0]),
        .O(\configuration_vector[5] [0]));
  LUT6 #(
    .INIT(64'h2E2EFF2E2E2E002E)) 
    \txc_out[1]_i_1 
       (.I0(txc_filtered[1]),
        .I1(\txc_out[3]_i_2_n_0 ),
        .I2(\txc_out[3]_i_3_n_0 ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\configuration_vector[5] [1]));
  LUT6 #(
    .INIT(64'h2E2EFF2E2E2E002E)) 
    \txc_out[2]_i_1 
       (.I0(txc_filtered[2]),
        .I1(\txc_out[3]_i_2_n_0 ),
        .I2(\txc_out[3]_i_3_n_0 ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\configuration_vector[5] [2]));
  LUT6 #(
    .INIT(64'h2E2EFF2E2E2E002E)) 
    \txc_out[3]_i_1 
       (.I0(txc_filtered[3]),
        .I1(\txc_out[3]_i_2_n_0 ),
        .I2(\txc_out[3]_i_3_n_0 ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\configuration_vector[5] [3]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \txc_out[3]_i_2 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[0][0] ),
        .O(\txc_out[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \txc_out[3]_i_3 
       (.I0(\state_reg_n_0_[0][1] ),
        .I1(\state_reg_n_0_[0][0] ),
        .O(\txc_out[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFCAAFCFC)) 
    \txc_out[4]_i_1 
       (.I0(configuration_vector[2]),
        .I1(\txd_out[40]_i_3_n_0 ),
        .I2(txc_filtered[4]),
        .I3(configuration_vector[1]),
        .I4(configuration_vector[0]),
        .O(\configuration_vector[5] [4]));
  LUT6 #(
    .INIT(64'h0000FB00FBFBFBFB)) 
    \txc_out[5]_i_1 
       (.I0(configuration_vector[1]),
        .I1(configuration_vector[0]),
        .I2(configuration_vector[2]),
        .I3(txc_filtered[5]),
        .I4(\txd_out[40]_i_3_n_0 ),
        .I5(\txc_out[7]_i_3_n_0 ),
        .O(\configuration_vector[5] [5]));
  LUT6 #(
    .INIT(64'h0000FB00FBFBFBFB)) 
    \txc_out[6]_i_1 
       (.I0(configuration_vector[1]),
        .I1(configuration_vector[0]),
        .I2(configuration_vector[2]),
        .I3(txc_filtered[6]),
        .I4(\txd_out[40]_i_3_n_0 ),
        .I5(\txc_out[7]_i_3_n_0 ),
        .O(\configuration_vector[5] [6]));
  LUT6 #(
    .INIT(64'h0000FB00FBFBFBFB)) 
    \txc_out[7]_i_2 
       (.I0(configuration_vector[1]),
        .I1(configuration_vector[0]),
        .I2(configuration_vector[2]),
        .I3(txc_filtered[7]),
        .I4(\txd_out[40]_i_3_n_0 ),
        .I5(\txc_out[7]_i_3_n_0 ),
        .O(\configuration_vector[5] [7]));
  LUT6 #(
    .INIT(64'hDF000000DFDF0000)) 
    \txc_out[7]_i_3 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[2]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\txc_out[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEEECCFCCCCCCCCC)) 
    \txd_out[0]_i_1 
       (.I0(last_qmsg[0]),
        .I1(\txd_out_reg[24] ),
        .I2(txd_filtered[0]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[0] ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[10]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[2]),
        .I2(last_qmsg[10]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_13 ));
  LUT6 #(
    .INIT(64'hBBBBFFF3FFFFFFFF)) 
    \txd_out[11]_i_1 
       (.I0(last_qmsg[11]),
        .I1(\txd_out_reg[27] ),
        .I2(data1[3]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[11] ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[12]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[4]),
        .I2(last_qmsg[12]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_12 ));
  LUT6 #(
    .INIT(64'hBBFFFF33BBFFF3FF)) 
    \txd_out[13]_i_1 
       (.I0(last_qmsg[13]),
        .I1(\txd_out_reg[5] ),
        .I2(data1[5]),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][2] ),
        .O(\last_qmsg_reg[29] [1]));
  LUT6 #(
    .INIT(64'hEEEEAAFAFFFFAAAA)) 
    \txd_out[14]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[14]),
        .I2(data1[6]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[14]_0 ));
  LUT5 #(
    .INIT(32'hF4040404)) 
    \txd_out[15]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[7]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[15]),
        .O(\state_reg[0][2]_6 ));
  LUT6 #(
    .INIT(64'hEEEECCFCCCCCCCCC)) 
    \txd_out[16]_i_1 
       (.I0(last_qmsg[16]),
        .I1(\txd_out_reg[24] ),
        .I2(data1[8]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[16] ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[17]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[9]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[17]),
        .O(\state_reg[0][2]_1 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[18]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[10]),
        .I2(last_qmsg[18]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_11 ));
  LUT6 #(
    .INIT(64'hBBBBFFF3FFFFFFFF)) 
    \txd_out[19]_i_1 
       (.I0(last_qmsg[19]),
        .I1(\txd_out_reg[27] ),
        .I2(data1[11]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[19] ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[1]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(txd_filtered[1]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[1]),
        .O(\state_reg[0][2]_3 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[20]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[12]),
        .I2(last_qmsg[20]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_10 ));
  LUT6 #(
    .INIT(64'hBBFFFF33BBFFF3FF)) 
    \txd_out[21]_i_1 
       (.I0(last_qmsg[21]),
        .I1(\txd_out_reg[5] ),
        .I2(data1[13]),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][2] ),
        .O(\last_qmsg_reg[29] [2]));
  LUT6 #(
    .INIT(64'hEEEEAAFAFFFFAAAA)) 
    \txd_out[22]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[22]),
        .I2(data1[14]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[22]_0 ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[23]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[15]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[23]),
        .O(\state_reg[0][2]_4 ));
  LUT6 #(
    .INIT(64'hEEEECCFCCCCCCCCC)) 
    \txd_out[24]_i_1 
       (.I0(last_qmsg[24]),
        .I1(\txd_out_reg[24] ),
        .I2(data1[16]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[24] ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[25]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[17]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[25]),
        .O(\state_reg[0][2]_0 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[26]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[18]),
        .I2(last_qmsg[26]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_9 ));
  LUT6 #(
    .INIT(64'hBBBBFFF3FFFFFFFF)) 
    \txd_out[27]_i_1 
       (.I0(last_qmsg[27]),
        .I1(\txd_out_reg[27] ),
        .I2(data1[19]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[27] ));
  LUT6 #(
    .INIT(64'h2A2AFF2AFFFFFFFF)) 
    \txd_out[28]_i_1 
       (.I0(configuration_vector[0]),
        .I1(configuration_vector[1]),
        .I2(configuration_vector[2]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\configuration_vector[4] ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[28]_i_2 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[20]),
        .I2(last_qmsg[28]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_8 ));
  LUT6 #(
    .INIT(64'hBBFFFF33BBFFF3FF)) 
    \txd_out[29]_i_1 
       (.I0(last_qmsg[29]),
        .I1(\txd_out_reg[5] ),
        .I2(data1[21]),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][2] ),
        .O(\last_qmsg_reg[29] [3]));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[2]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(txd_filtered[2]),
        .I2(last_qmsg[2]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_15 ));
  LUT6 #(
    .INIT(64'hEEEEAAFAFFFFAAAA)) 
    \txd_out[30]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[30]),
        .I2(data1[22]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[30]_0 ));
  LUT6 #(
    .INIT(64'h2121FF21FF21FF21)) 
    \txd_out[31]_i_1 
       (.I0(\state_reg_n_0_[0][0] ),
        .I1(\state_reg_n_0_[0][1] ),
        .I2(\state_reg_n_0_[0][2] ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\state_reg[0][0]_0 ));
  LUT5 #(
    .INIT(32'hF4040404)) 
    \txd_out[31]_i_2 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[23]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[31]),
        .O(\state_reg[0][2]_7 ));
  LUT6 #(
    .INIT(64'hEECCCCCCEEFCCCCC)) 
    \txd_out[32]_i_1 
       (.I0(last_qmsg[0]),
        .I1(\txd_out_reg[24] ),
        .I2(txd_filtered[8]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[33]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(txd_filtered[9]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[1]),
        .O(\state_reg[1][2]_1 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[34]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(txd_filtered[10]),
        .I2(last_qmsg[2]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_14 ));
  LUT6 #(
    .INIT(64'hBBFFFFFFBBF3FFFF)) 
    \txd_out[35]_i_1 
       (.I0(last_qmsg[3]),
        .I1(\txd_out_reg[27] ),
        .I2(txd_filtered[11]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[3]_0 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[36]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(txd_filtered[12]),
        .I2(last_qmsg[4]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_13 ));
  LUT6 #(
    .INIT(64'hBBBBFFFFFFF333FF)) 
    \txd_out[37]_i_1 
       (.I0(last_qmsg[5]),
        .I1(\txd_out_reg[5] ),
        .I2(txd_filtered[13]),
        .I3(\state_reg[1][2]_0 ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(\last_qmsg_reg[29] [4]));
  LUT6 #(
    .INIT(64'hEEAAFFAAEEFAFFAA)) 
    \txd_out[38]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[6]),
        .I2(txd_filtered[14]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[6] ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[39]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(txd_filtered[15]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[7]),
        .O(\state_reg[1][2]_5 ));
  LUT6 #(
    .INIT(64'hBBBBFFF3FFFFFFFF)) 
    \txd_out[3]_i_1 
       (.I0(last_qmsg[3]),
        .I1(\txd_out_reg[27] ),
        .I2(txd_filtered[3]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[3] ));
  LUT6 #(
    .INIT(64'hEAFFEAEAAAAAAAAA)) 
    \txd_out[40]_i_1 
       (.I0(\txd_out_reg[40] ),
        .I1(\state_reg[1][1]_0 ),
        .I2(last_qmsg[8]),
        .I3(\txd_out[40]_i_3_n_0 ),
        .I4(data1__0[0]),
        .I5(\txd_out_reg[27] ),
        .O(\last_qmsg_reg[29] [5]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \txd_out[40]_i_2 
       (.I0(\state_reg_n_0_[1][1] ),
        .I1(\state_reg_n_0_[1][0] ),
        .O(\state_reg[1][1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hFB)) 
    \txd_out[40]_i_3 
       (.I0(\state_reg_n_0_[1][1] ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg[1][2]_0 ),
        .O(\txd_out[40]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[41]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[1]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[9]),
        .O(\state_reg[1][2]_2 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[42]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[2]),
        .I2(last_qmsg[10]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_12 ));
  LUT6 #(
    .INIT(64'hBBFFFFFFBBF3FFFF)) 
    \txd_out[43]_i_1 
       (.I0(last_qmsg[11]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[3]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[11]_0 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[44]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[4]),
        .I2(last_qmsg[12]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_11 ));
  LUT6 #(
    .INIT(64'hBBBBFFFFFFF333FF)) 
    \txd_out[45]_i_1 
       (.I0(last_qmsg[13]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[5]),
        .I3(\state_reg[1][2]_0 ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(\last_qmsg_reg[29] [6]));
  LUT6 #(
    .INIT(64'hEEAAFFAAEEFAFFAA)) 
    \txd_out[46]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[14]),
        .I2(data1__0[6]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[14] ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[47]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[7]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[15]),
        .O(\state_reg[1][2]_6 ));
  LUT6 #(
    .INIT(64'hEECCCCCCEEFCCCCC)) 
    \txd_out[48]_i_1 
       (.I0(last_qmsg[16]),
        .I1(\txd_out_reg[24] ),
        .I2(data1__0[8]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[16]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[49]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[9]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[17]),
        .O(\state_reg[1][2]_3 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[4]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(txd_filtered[4]),
        .I2(last_qmsg[4]),
        .I3(\state_reg_n_0_[0][1] ),
        .O(\state_reg[0][2]_14 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[50]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[10]),
        .I2(last_qmsg[18]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_10 ));
  LUT6 #(
    .INIT(64'hBBFFFFFFBBF3FFFF)) 
    \txd_out[51]_i_1 
       (.I0(last_qmsg[19]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[11]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[19]_0 ));
  LUT6 #(
    .INIT(64'h7373FF73FF73FF73)) 
    \txd_out[52]_i_1 
       (.I0(\state_reg_n_0_[1][1] ),
        .I1(\state_reg_n_0_[1][0] ),
        .I2(\state_reg[1][2]_0 ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\state_reg[1][1]_1 ));
  LUT4 #(
    .INIT(16'hF044)) 
    \txd_out[52]_i_2 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[12]),
        .I2(last_qmsg[20]),
        .I3(\state_reg_n_0_[1][1] ),
        .O(\state_reg[1][2]_9 ));
  LUT6 #(
    .INIT(64'hBBBBFFFFFFF333FF)) 
    \txd_out[53]_i_1 
       (.I0(last_qmsg[21]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[13]),
        .I3(\state_reg[1][2]_0 ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(\last_qmsg_reg[29] [7]));
  LUT6 #(
    .INIT(64'hEEAAFFAAEEFAFFAA)) 
    \txd_out[54]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[22]),
        .I2(data1__0[14]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[22] ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[55]_i_1 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[15]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[23]),
        .O(\state_reg[1][2]_7 ));
  LUT6 #(
    .INIT(64'hEECCCCCCEEFCCCCC)) 
    \txd_out[56]_i_2 
       (.I0(last_qmsg[24]),
        .I1(\txd_out_reg[24] ),
        .I2(data1__0[16]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[24]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[57]_i_2 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[17]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[25]),
        .O(\state_reg[1][2]_4 ));
  LUT6 #(
    .INIT(64'hAAFFFCFFFFFFFFFF)) 
    \txd_out[58]_i_1 
       (.I0(last_qmsg[26]),
        .I1(data1__0[18]),
        .I2(\state_reg[1][2]_0 ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(\state_reg_n_0_[1][1] ),
        .I5(\txd_out_reg[5] ),
        .O(\last_qmsg_reg[29] [8]));
  LUT6 #(
    .INIT(64'hBBFFFFFFBBF3FFFF)) 
    \txd_out[59]_i_2 
       (.I0(last_qmsg[27]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[19]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[27]_0 ));
  LUT6 #(
    .INIT(64'hBBFFFF33BBFFF3FF)) 
    \txd_out[5]_i_1 
       (.I0(last_qmsg[5]),
        .I1(\txd_out_reg[5] ),
        .I2(txd_filtered[5]),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][2] ),
        .O(\last_qmsg_reg[29] [0]));
  LUT6 #(
    .INIT(64'hBFBFFFFFBF8FFFFF)) 
    \txd_out[60]_i_1 
       (.I0(last_qmsg[28]),
        .I1(\state_reg_n_0_[1][1] ),
        .I2(\state_reg_n_0_[1][0] ),
        .I3(\state_reg[1][2]_0 ),
        .I4(\txd_out_reg[5] ),
        .I5(data1__0[20]),
        .O(\last_qmsg_reg[29] [9]));
  LUT6 #(
    .INIT(64'hBBBBFFFFFFF333FF)) 
    \txd_out[61]_i_1 
       (.I0(last_qmsg[29]),
        .I1(\txd_out_reg[5] ),
        .I2(data1__0[21]),
        .I3(\state_reg[1][2]_0 ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg_n_0_[1][1] ),
        .O(\last_qmsg_reg[29] [10]));
  LUT6 #(
    .INIT(64'hEEAAFFAAEEFAFFAA)) 
    \txd_out[62]_i_2 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[30]),
        .I2(data1__0[22]),
        .I3(\state_reg_n_0_[1][1] ),
        .I4(\state_reg_n_0_[1][0] ),
        .I5(\state_reg[1][2]_0 ),
        .O(\last_qmsg_reg[30] ));
  LUT6 #(
    .INIT(64'h0909FF09FF09FF09)) 
    \txd_out[63]_i_1 
       (.I0(\state_reg_n_0_[1][0] ),
        .I1(\state_reg[1][2]_0 ),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(configuration_vector[0]),
        .I4(configuration_vector[1]),
        .I5(configuration_vector[2]),
        .O(\state_reg[1][0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[63]_i_2 
       (.I0(\state_reg[1][2]_0 ),
        .I1(data1__0[23]),
        .I2(\state_reg_n_0_[1][1] ),
        .I3(\state_reg_n_0_[1][0] ),
        .I4(last_qmsg[31]),
        .O(\state_reg[1][2]_8 ));
  LUT6 #(
    .INIT(64'hEEEEAAFAFFFFAAAA)) 
    \txd_out[6]_i_1 
       (.I0(\txd_out_reg[38] ),
        .I1(last_qmsg[6]),
        .I2(txd_filtered[6]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[6]_0 ));
  LUT5 #(
    .INIT(32'hF4040404)) 
    \txd_out[7]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(txd_filtered[7]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[7]),
        .O(\state_reg[0][2]_5 ));
  LUT6 #(
    .INIT(64'hEEEECCFCCCCCCCCC)) 
    \txd_out[8]_i_1 
       (.I0(last_qmsg[8]),
        .I1(\txd_out_reg[24] ),
        .I2(data1[0]),
        .I3(\state_reg_n_0_[0][2] ),
        .I4(\state_reg_n_0_[0][1] ),
        .I5(\state_reg_n_0_[0][0] ),
        .O(\last_qmsg_reg[8] ));
  LUT5 #(
    .INIT(32'hF4000400)) 
    \txd_out[9]_i_1 
       (.I0(\state_reg_n_0_[0][2] ),
        .I1(data1[1]),
        .I2(\state_reg_n_0_[0][1] ),
        .I3(\state_reg_n_0_[0][0] ),
        .I4(last_qmsg[9]),
        .O(\state_reg[0][2]_2 ));
endmodule

module xaui_0_xaui_gen
   (status_vector,
    in0,
    mgt_txdata,
    mgt_txcharisk,
    mgt_enchansync,
    xgmii_rxd,
    xgmii_rxc,
    mgt_enable_align,
    configuration_vector,
    xgmii_txd,
    usrclk,
    xgmii_txc,
    mgt_rxdata,
    mgt_rxcharisk,
    mgt_codecomma,
    mgt_codevalid,
    reset,
    signal_detect,
    mgt_rx_reset,
    mgt_rxlock,
    mgt_tx_reset);
  output [4:0]status_vector;
  output [2:0]in0;
  output [63:0]mgt_txdata;
  output [7:0]mgt_txcharisk;
  output mgt_enchansync;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  output [3:0]mgt_enable_align;
  input [4:0]configuration_vector;
  input [63:0]xgmii_txd;
  input usrclk;
  input [7:0]xgmii_txc;
  input [63:0]mgt_rxdata;
  input [7:0]mgt_rxcharisk;
  input [7:0]mgt_codecomma;
  input [7:0]mgt_codevalid;
  input reset;
  input [3:0]signal_detect;
  input [3:0]mgt_rx_reset;
  input [0:0]mgt_rxlock;
  input [0:0]mgt_tx_reset;

  (* RTL_KEEP = "true" *) wire align_status_int;
  wire aligned_sticky_i_1_n_0;
  wire clear_aligned;
  wire clear_aligned_edge;
  wire clear_aligned_edge0;
  wire clear_local_fault;
  wire clear_local_fault_edge;
  wire clear_local_fault_edge0;
  wire [4:0]configuration_vector;
  wire [2:0]in0;
  wire last_value;
  wire last_value_reg__0_n_0;
  wire [7:0]mgt_codecomma;
  wire [7:0]mgt_codevalid;
  wire [3:0]mgt_enable_align;
  wire mgt_enchansync;
  wire [3:0]mgt_rx_reset;
  wire [7:0]mgt_rxcharisk;
  wire [63:0]mgt_rxdata;
  wire [0:0]mgt_rxlock;
  wire [0:0]mgt_tx_reset;
  wire [7:0]mgt_txcharisk;
  wire [63:0]mgt_txdata;
  wire reset;
  wire rx_local_fault_i_1_n_0;
  wire rx_local_fault_i_2_n_0;
  wire [3:0]signal_detect;
  wire \signal_detect_int_reg_n_0_[0] ;
  wire \signal_detect_int_reg_n_0_[1] ;
  wire \signal_detect_int_reg_n_0_[2] ;
  wire \signal_detect_int_reg_n_0_[3] ;
  (* RTL_KEEP = "true" *) wire [3:0]sync;
  wire tx_local_fault_i_1_n_0;
  wire usrclk;
  wire usrclk_reset;
  wire usrclk_reset_i_1_n_0;
  wire usrclk_reset_pipe;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign status_vector[4] = align_status_int;
  assign status_vector[3:0] = sync;
  FDRE \G_NO_MDIO.clear_aligned_reg 
       (.C(usrclk),
        .CE(1'b1),
        .D(configuration_vector[1]),
        .Q(clear_aligned),
        .R(1'b0));
  FDRE \G_NO_MDIO.clear_local_fault_reg 
       (.C(usrclk),
        .CE(1'b1),
        .D(configuration_vector[0]),
        .Q(clear_local_fault),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4440)) 
    aligned_sticky_i_1
       (.I0(usrclk_reset),
        .I1(align_status_int),
        .I2(clear_aligned_edge),
        .I3(in0[2]),
        .O(aligned_sticky_i_1_n_0));
  FDRE aligned_sticky_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(aligned_sticky_i_1_n_0),
        .Q(in0[2]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    clear_aligned_edge_i_1
       (.I0(clear_aligned),
        .I1(last_value_reg__0_n_0),
        .O(clear_aligned_edge0));
  FDRE clear_aligned_edge_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(clear_aligned_edge0),
        .Q(clear_aligned_edge),
        .R(usrclk_reset));
  LUT2 #(
    .INIT(4'h2)) 
    clear_local_fault_edge_i_1
       (.I0(clear_local_fault),
        .I1(last_value),
        .O(clear_local_fault_edge0));
  FDRE clear_local_fault_edge_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(clear_local_fault_edge0),
        .Q(clear_local_fault_edge),
        .R(usrclk_reset));
  FDRE last_value_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(clear_local_fault),
        .Q(last_value),
        .R(usrclk_reset));
  FDRE last_value_reg__0
       (.C(usrclk),
        .CE(1'b1),
        .D(clear_aligned),
        .Q(last_value_reg__0_n_0),
        .R(usrclk_reset));
  xaui_0_rx receiver
       (.Q({\signal_detect_int_reg_n_0_[3] ,\signal_detect_int_reg_n_0_[2] ,\signal_detect_int_reg_n_0_[1] ,\signal_detect_int_reg_n_0_[0] }),
        .align_status_int(align_status_int),
        .mgt_codecomma(mgt_codecomma),
        .mgt_codevalid(mgt_codevalid),
        .mgt_enable_align(mgt_enable_align),
        .mgt_enchansync(mgt_enchansync),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_rxcharisk(mgt_rxcharisk),
        .mgt_rxdata(mgt_rxdata),
        .mgt_rxlock(mgt_rxlock),
        .sync(sync),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    rx_local_fault_i_1
       (.I0(clear_local_fault_edge),
        .I1(rx_local_fault_i_2_n_0),
        .I2(in0[1]),
        .O(rx_local_fault_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    rx_local_fault_i_2
       (.I0(align_status_int),
        .I1(mgt_rx_reset[0]),
        .I2(mgt_rx_reset[2]),
        .I3(mgt_rx_reset[3]),
        .I4(mgt_rx_reset[1]),
        .O(rx_local_fault_i_2_n_0));
  FDRE rx_local_fault_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(rx_local_fault_i_1_n_0),
        .Q(in0[1]),
        .R(usrclk_reset));
  FDRE \signal_detect_int_reg[0] 
       (.C(usrclk),
        .CE(1'b1),
        .D(signal_detect[0]),
        .Q(\signal_detect_int_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \signal_detect_int_reg[1] 
       (.C(usrclk),
        .CE(1'b1),
        .D(signal_detect[1]),
        .Q(\signal_detect_int_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \signal_detect_int_reg[2] 
       (.C(usrclk),
        .CE(1'b1),
        .D(signal_detect[2]),
        .Q(\signal_detect_int_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \signal_detect_int_reg[3] 
       (.C(usrclk),
        .CE(1'b1),
        .D(signal_detect[3]),
        .Q(\signal_detect_int_reg_n_0_[3] ),
        .R(1'b0));
  xaui_0_tx transmitter
       (.configuration_vector(configuration_vector[4:2]),
        .mgt_txcharisk(mgt_txcharisk),
        .mgt_txdata(mgt_txdata),
        .usrclk(usrclk),
        .usrclk_reset(usrclk_reset),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hDC)) 
    tx_local_fault_i_1
       (.I0(clear_local_fault_edge),
        .I1(mgt_tx_reset),
        .I2(in0[0]),
        .O(tx_local_fault_i_1_n_0));
  FDRE tx_local_fault_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(tx_local_fault_i_1_n_0),
        .Q(in0[0]),
        .R(usrclk_reset));
  LUT2 #(
    .INIT(4'hE)) 
    usrclk_reset_i_1
       (.I0(usrclk_reset_pipe),
        .I1(reset),
        .O(usrclk_reset_i_1_n_0));
  FDRE #(
    .INIT(1'b1)) 
    usrclk_reset_pipe_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(reset),
        .Q(usrclk_reset_pipe),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    usrclk_reset_reg
       (.C(usrclk),
        .CE(1'b1),
        .D(usrclk_reset_i_1_n_0),
        .Q(usrclk_reset),
        .R(1'b0));
endmodule

(* c_family = "artix7" *) (* c_has_mdio = "FALSE" *) (* c_is_dxaui = "FALSE" *) 
module xaui_0_xaui_v12_3_6_top
   (reset,
    xgmii_txd,
    xgmii_txc,
    xgmii_rxd,
    xgmii_rxc,
    usrclk,
    mgt_txdata,
    mgt_txcharisk,
    mgt_rxdata,
    mgt_rxcharisk,
    mgt_codevalid,
    mgt_codecomma,
    mgt_enable_align,
    mgt_enchansync,
    mgt_rxlock,
    mgt_loopback,
    mgt_powerdown,
    mgt_tx_reset,
    mgt_rx_reset,
    soft_reset,
    signal_detect,
    align_status,
    sync_status,
    mdc,
    mdio_in,
    mdio_out,
    mdio_tri,
    type_sel,
    prtad,
    configuration_vector,
    status_vector);
  input reset;
  input [63:0]xgmii_txd;
  input [7:0]xgmii_txc;
  output [63:0]xgmii_rxd;
  output [7:0]xgmii_rxc;
  input usrclk;
  output [63:0]mgt_txdata;
  output [7:0]mgt_txcharisk;
  input [63:0]mgt_rxdata;
  input [7:0]mgt_rxcharisk;
  input [7:0]mgt_codevalid;
  input [7:0]mgt_codecomma;
  output [3:0]mgt_enable_align;
  output mgt_enchansync;
  input [3:0]mgt_rxlock;
  output mgt_loopback;
  output mgt_powerdown;
  input [3:0]mgt_tx_reset;
  input [3:0]mgt_rx_reset;
  output soft_reset;
  input [3:0]signal_detect;
  output align_status;
  output [3:0]sync_status;
  input mdc;
  input mdio_in;
  output mdio_out;
  output mdio_tri;
  input [1:0]type_sel;
  input [4:0]prtad;
  input [6:0]configuration_vector;
  (* keep = "true" *) output [7:0]status_vector;

  wire \<const0> ;
  wire [6:2]\^configuration_vector ;
  wire [7:0]mgt_codecomma;
  wire [7:0]mgt_codevalid;
  wire [3:0]mgt_enable_align;
  wire mgt_enchansync;
  (* RTL_KEEP = "true" *) wire mgt_loopback_keep;
  (* RTL_KEEP = "true" *) wire mgt_powerdown_keep;
  wire [3:0]mgt_rx_reset;
  wire [7:0]mgt_rxcharisk;
  wire [63:0]mgt_rxdata;
  wire [3:0]mgt_rxlock;
  wire [3:0]mgt_tx_reset;
  wire [7:0]mgt_txcharisk;
  wire [63:0]mgt_txdata;
  wire reset;
  wire [3:0]signal_detect;
  (* RTL_KEEP = "true" *) wire [7:0]status_vector_int;
  wire usrclk;
  wire [7:0]xgmii_rxc;
  wire [63:0]xgmii_rxd;
  wire [7:0]xgmii_txc;
  wire [63:0]xgmii_txd;

  assign \^configuration_vector [6:2] = configuration_vector[6:2];
  assign align_status = status_vector_int[6];
  assign mdio_out = \<const0> ;
  assign mdio_tri = \<const0> ;
  assign mgt_loopback = mgt_loopback_keep;
  assign mgt_loopback_keep = configuration_vector[0];
  assign mgt_powerdown = mgt_powerdown_keep;
  assign mgt_powerdown_keep = configuration_vector[1];
  assign soft_reset = \<const0> ;
  assign status_vector[7:0] = status_vector_int;
  assign sync_status[3:0] = status_vector_int[5:2];
  GND GND
       (.G(\<const0> ));
  xaui_0_xaui_gen xaui_inst
       (.configuration_vector(\^configuration_vector ),
        .in0({status_vector_int[7],status_vector_int[1:0]}),
        .mgt_codecomma(mgt_codecomma),
        .mgt_codevalid(mgt_codevalid),
        .mgt_enable_align(mgt_enable_align),
        .mgt_enchansync(mgt_enchansync),
        .mgt_rx_reset(mgt_rx_reset),
        .mgt_rxcharisk(mgt_rxcharisk),
        .mgt_rxdata(mgt_rxdata),
        .mgt_rxlock(mgt_rxlock[3]),
        .mgt_tx_reset(mgt_tx_reset[2]),
        .mgt_txcharisk(mgt_txcharisk),
        .mgt_txdata(mgt_txdata),
        .reset(reset),
        .signal_detect(signal_detect),
        .status_vector(status_vector_int[6:2]),
        .usrclk(usrclk),
        .xgmii_rxc(xgmii_rxc),
        .xgmii_rxd(xgmii_rxd),
        .xgmii_txc(xgmii_txc),
        .xgmii_txd(xgmii_txd));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
